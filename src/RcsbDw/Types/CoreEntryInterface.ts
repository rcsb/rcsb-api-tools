/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * JSON schema for entry level core data. Combines Exchange DB schema: json-schema-min-pdbx_core_entry.json and RCSB Data Warehouse schema: json-schema-core_entry.json
 */
export interface CoreEntry {
  /**
   * @minItems 1
   */
  audit_author?: [
    {
      /**
       * The Open Researcher and Contributor ID (ORCID).
       */
      identifier_ORCID?: string;
      /**
       * The name of an author of this data block. If there are multiple
       *  authors, _audit_author.name is looped with _audit_author.address.
       *  The family name(s), followed by a comma and including any
       *  dynastic components, precedes the first name(s) or initial(s).
       */
      name?: string;
      /**
       * This data item defines the order of the author's name in the
       *  list of audit authors.
       */
      pdbx_ordinal: number;
    },
    ...{
      /**
       * The Open Researcher and Contributor ID (ORCID).
       */
      identifier_ORCID?: string;
      /**
       * The name of an author of this data block. If there are multiple
       *  authors, _audit_author.name is looped with _audit_author.address.
       *  The family name(s), followed by a comma and including any
       *  dynastic components, precedes the first name(s) or initial(s).
       */
      name?: string;
      /**
       * This data item defines the order of the author's name in the
       *  list of audit authors.
       */
      pdbx_ordinal: number;
    }[]
  ];
  cell?: {
    /**
     * The number of the polymeric chains in a unit cell. In the case
     *  of heteropolymers, Z is the number of occurrences of the most
     *  populous chain.
     *
     *  This data item is provided for compatibility with the original
     *  Protein Data Bank format, and only for that purpose.
     */
    Z_PDB?: number;
    /**
     * Unit-cell angle alpha of the reported structure in degrees.
     */
    angle_alpha?: number;
    /**
     * Unit-cell angle beta of the reported structure in degrees.
     */
    angle_beta?: number;
    /**
     * Unit-cell angle gamma of the reported structure in degrees.
     */
    angle_gamma?: number;
    /**
     * The number of the formula units in the unit cell as specified
     *  by _chemical_formula.structural, _chemical_formula.moiety or
     *  _chemical_formula.sum.
     */
    formula_units_Z?: number;
    /**
     * Unit-cell length a corresponding to the structure reported in
     * angstroms.
     */
    length_a?: number;
    /**
     * Unit-cell length b corresponding to the structure reported in
     *  angstroms.
     */
    length_b?: number;
    /**
     * Unit-cell length c corresponding to the structure reported in
     * angstroms.
     */
    length_c?: number;
    /**
     * To further identify unique axis if necessary.  E.g., P 21 with
     *  an unique C axis will have 'C' in this field.
     */
    pdbx_unique_axis?: string;
    /**
     * Cell volume V in angstroms cubed.
     *
     *  V = a b c (1 - cos^2^~alpha~ - cos^2^~beta~ - cos^2^~gamma~
     *             + 2 cos~alpha~ cos~beta~ cos~gamma~)^1/2^
     *
     *  a     = _cell.length_a
     *  b     = _cell.length_b
     *  c     = _cell.length_c
     *  alpha = _cell.angle_alpha
     *  beta  = _cell.angle_beta
     *  gamma = _cell.angle_gamma
     */
    volume?: number;
  };
  /**
   * @minItems 1
   */
  citation?: [
    {
      /**
       * The International Standard Book Number (ISBN) code assigned to
       *  the book cited; relevant for books or book chapters.
       */
      book_id_ISBN?: string;
      /**
       * The name of the publisher of the citation; relevant
       *  for books or book chapters.
       */
      book_publisher?: string;
      /**
       * The location of the publisher of the citation; relevant
       *  for books or book chapters.
       */
      book_publisher_city?: string;
      /**
       * The title of the book in which the citation appeared; relevant
       *  for books or book chapters.
       */
      book_title?: string;
      /**
       * _citation.coordinate_linkage states whether this citation
       *  is concerned with precisely the set of coordinates given in the
       *  data block. If, for instance, the publication described the same
       *  structure, but the coordinates had undergone further refinement
       *  prior to the creation of the data block, the value of this data
       *  item would be 'no'.
       */
      coordinate_linkage?: "n" | "no" | "y" | "yes";
      /**
       * The country/region of publication; relevant for books
       *  and book chapters.
       */
      country?: string;
      /**
       * The value of _citation.id must uniquely identify a record in the
       *  CITATION list.
       *
       *  The _citation.id 'primary' should be used to indicate the
       *  citation that the author(s) consider to be the most pertinent to
       *  the contents of the data block.
       *
       *  Note that this item need not be a number; it can be any unique
       *  identifier.
       */
      id: string;
      /**
       * Abbreviated name of the cited journal as given in the
       *  Chemical Abstracts Service Source Index.
       */
      journal_abbrev?: string;
      /**
       * Full name of the cited journal; relevant for journal articles.
       */
      journal_full?: string;
      /**
       * The American Society for Testing and Materials (ASTM) code
       *  assigned to the journal cited (also referred to as the CODEN
       *  designator of the Chemical Abstracts Service); relevant for
       *  journal articles.
       */
      journal_id_ASTM?: string;
      /**
       * The Cambridge Structural Database (CSD) code assigned to the
       *  journal cited; relevant for journal articles. This is also the
       *  system used at the Protein Data Bank (PDB).
       */
      journal_id_CSD?: string;
      /**
       * The International Standard Serial Number (ISSN) code assigned to
       *  the journal cited; relevant for journal articles.
       */
      journal_id_ISSN?: string;
      /**
       * Issue number of the journal cited; relevant for journal
       *  articles.
       */
      journal_issue?: string;
      /**
       * Volume number of the journal cited; relevant for journal
       *  articles.
       */
      journal_volume?: string;
      /**
       * Language in which the cited article is written.
       */
      language?: string;
      /**
       * The first page of the citation; relevant for journal
       *  articles, books and book chapters.
       */
      page_first?: string;
      /**
       * The last page of the citation; relevant for journal
       *  articles, books and book chapters.
       */
      page_last?: string;
      /**
       * Document Object Identifier used by doi.org to uniquely
       *  specify bibliographic entry.
       */
      pdbx_database_id_DOI?: string;
      /**
       * Ascession number used by PubMed to categorize a specific
       *  bibliographic entry.
       */
      pdbx_database_id_PubMed?: number;
      rcsb_authors?: string[];
      /**
       * Flag to indicate a primary citation.
       */
      rcsb_is_primary?: "N" | "Y";
      /**
       * Normalized journal abbreviation.
       */
      rcsb_journal_abbrev?: string;
      /**
       * The title of the citation; relevant for journal articles, books
       *  and book chapters.
       */
      title?: string;
      /**
       * Flag to indicate that this citation will not be published.
       */
      unpublished_flag?: "N" | "Y";
      /**
       * The year of the citation; relevant for journal articles, books
       *  and book chapters.
       */
      year?: number;
    },
    ...{
      /**
       * The International Standard Book Number (ISBN) code assigned to
       *  the book cited; relevant for books or book chapters.
       */
      book_id_ISBN?: string;
      /**
       * The name of the publisher of the citation; relevant
       *  for books or book chapters.
       */
      book_publisher?: string;
      /**
       * The location of the publisher of the citation; relevant
       *  for books or book chapters.
       */
      book_publisher_city?: string;
      /**
       * The title of the book in which the citation appeared; relevant
       *  for books or book chapters.
       */
      book_title?: string;
      /**
       * _citation.coordinate_linkage states whether this citation
       *  is concerned with precisely the set of coordinates given in the
       *  data block. If, for instance, the publication described the same
       *  structure, but the coordinates had undergone further refinement
       *  prior to the creation of the data block, the value of this data
       *  item would be 'no'.
       */
      coordinate_linkage?: "n" | "no" | "y" | "yes";
      /**
       * The country/region of publication; relevant for books
       *  and book chapters.
       */
      country?: string;
      /**
       * The value of _citation.id must uniquely identify a record in the
       *  CITATION list.
       *
       *  The _citation.id 'primary' should be used to indicate the
       *  citation that the author(s) consider to be the most pertinent to
       *  the contents of the data block.
       *
       *  Note that this item need not be a number; it can be any unique
       *  identifier.
       */
      id: string;
      /**
       * Abbreviated name of the cited journal as given in the
       *  Chemical Abstracts Service Source Index.
       */
      journal_abbrev?: string;
      /**
       * Full name of the cited journal; relevant for journal articles.
       */
      journal_full?: string;
      /**
       * The American Society for Testing and Materials (ASTM) code
       *  assigned to the journal cited (also referred to as the CODEN
       *  designator of the Chemical Abstracts Service); relevant for
       *  journal articles.
       */
      journal_id_ASTM?: string;
      /**
       * The Cambridge Structural Database (CSD) code assigned to the
       *  journal cited; relevant for journal articles. This is also the
       *  system used at the Protein Data Bank (PDB).
       */
      journal_id_CSD?: string;
      /**
       * The International Standard Serial Number (ISSN) code assigned to
       *  the journal cited; relevant for journal articles.
       */
      journal_id_ISSN?: string;
      /**
       * Issue number of the journal cited; relevant for journal
       *  articles.
       */
      journal_issue?: string;
      /**
       * Volume number of the journal cited; relevant for journal
       *  articles.
       */
      journal_volume?: string;
      /**
       * Language in which the cited article is written.
       */
      language?: string;
      /**
       * The first page of the citation; relevant for journal
       *  articles, books and book chapters.
       */
      page_first?: string;
      /**
       * The last page of the citation; relevant for journal
       *  articles, books and book chapters.
       */
      page_last?: string;
      /**
       * Document Object Identifier used by doi.org to uniquely
       *  specify bibliographic entry.
       */
      pdbx_database_id_DOI?: string;
      /**
       * Ascession number used by PubMed to categorize a specific
       *  bibliographic entry.
       */
      pdbx_database_id_PubMed?: number;
      rcsb_authors?: string[];
      /**
       * Flag to indicate a primary citation.
       */
      rcsb_is_primary?: "N" | "Y";
      /**
       * Normalized journal abbreviation.
       */
      rcsb_journal_abbrev?: string;
      /**
       * The title of the citation; relevant for journal articles, books
       *  and book chapters.
       */
      title?: string;
      /**
       * Flag to indicate that this citation will not be published.
       */
      unpublished_flag?: "N" | "Y";
      /**
       * The year of the citation; relevant for journal articles, books
       *  and book chapters.
       */
      year?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  database_2?: [
    {
      /**
       * The code assigned by the database identified in
       *  _database_2.database_id.
       */
      database_code: string;
      /**
       * An abbreviation that identifies the database.
       */
      database_id:
        | "AlphaFoldDB"
        | "BMRB"
        | "EBI"
        | "EMDB"
        | "MODBASE"
        | "ModelArchive"
        | "NDB"
        | "PDB"
        | "PDB-Dev"
        | "PDBE"
        | "PDB_ACC"
        | "RCSB"
        | "SWISS-MODEL_REPOSITORY"
        | "WWPDB";
      /**
       * Document Object Identifier (DOI) for this entry registered
       * with http://crossref.org.
       */
      pdbx_DOI?: string;
      /**
       * Extended accession code issued for for _database_2.database_code assigned by the database identified in
       *  _database_2.database_id.
       */
      pdbx_database_accession?: string;
    },
    ...{
      /**
       * The code assigned by the database identified in
       *  _database_2.database_id.
       */
      database_code: string;
      /**
       * An abbreviation that identifies the database.
       */
      database_id:
        | "AlphaFoldDB"
        | "BMRB"
        | "EBI"
        | "EMDB"
        | "MODBASE"
        | "ModelArchive"
        | "NDB"
        | "PDB"
        | "PDB-Dev"
        | "PDBE"
        | "PDB_ACC"
        | "RCSB"
        | "SWISS-MODEL_REPOSITORY"
        | "WWPDB";
      /**
       * Document Object Identifier (DOI) for this entry registered
       * with http://crossref.org.
       */
      pdbx_DOI?: string;
      /**
       * Extended accession code issued for for _database_2.database_code assigned by the database identified in
       *  _database_2.database_id.
       */
      pdbx_database_accession?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  diffrn?: [
    {
      /**
       * The mean hydrostatic pressure in kilopascals at which the
       *  intensities were measured.
       */
      ambient_pressure?: number;
      /**
       * The mean temperature in kelvins at which the intensities were
       *  measured.
       */
      ambient_temp?: number;
      /**
       * A description of special aspects of temperature control during
       *  data collection.
       */
      ambient_temp_details?: string;
      /**
       * This data item is a pointer to _exptl_crystal.id in the
       *  EXPTL_CRYSTAL category.
       */
      crystal_id?: string;
      /**
       * The physical device used to support the crystal during data
       *  collection.
       */
      crystal_support?: string;
      /**
       * Special details of the diffraction measurement process. Should
       *  include information about source instability, crystal motion,
       *  degradation and so on.
       */
      details?: string;
      /**
       * This data item uniquely identifies a set of diffraction
       *  data.
       */
      id: string;
      /**
       * Y/N if using serial crystallography experiment in which multiple crystals contribute to each diffraction frame in the experiment.
       */
      pdbx_serial_crystal_experiment?: "N" | "Y";
    },
    ...{
      /**
       * The mean hydrostatic pressure in kilopascals at which the
       *  intensities were measured.
       */
      ambient_pressure?: number;
      /**
       * The mean temperature in kelvins at which the intensities were
       *  measured.
       */
      ambient_temp?: number;
      /**
       * A description of special aspects of temperature control during
       *  data collection.
       */
      ambient_temp_details?: string;
      /**
       * This data item is a pointer to _exptl_crystal.id in the
       *  EXPTL_CRYSTAL category.
       */
      crystal_id?: string;
      /**
       * The physical device used to support the crystal during data
       *  collection.
       */
      crystal_support?: string;
      /**
       * Special details of the diffraction measurement process. Should
       *  include information about source instability, crystal motion,
       *  degradation and so on.
       */
      details?: string;
      /**
       * This data item uniquely identifies a set of diffraction
       *  data.
       */
      id: string;
      /**
       * Y/N if using serial crystallography experiment in which multiple crystals contribute to each diffraction frame in the experiment.
       */
      pdbx_serial_crystal_experiment?: "N" | "Y";
    }[]
  ];
  /**
   * @minItems 1
   */
  diffrn_detector?: [
    {
      /**
       * A description of special aspects of the radiation detector.
       */
      details?: string;
      /**
       * The general class of the radiation detector.
       */
      detector?: string;
      /**
       * This data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The date of data collection.
       */
      pdbx_collection_date?: string;
      /**
       * The operating frequency of the detector (Hz) used in data collection.
       */
      pdbx_frequency?: number;
      /**
       * The make, model or name of the detector device used.
       */
      type?: string;
    },
    ...{
      /**
       * A description of special aspects of the radiation detector.
       */
      details?: string;
      /**
       * The general class of the radiation detector.
       */
      detector?: string;
      /**
       * This data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The date of data collection.
       */
      pdbx_collection_date?: string;
      /**
       * The operating frequency of the detector (Hz) used in data collection.
       */
      pdbx_frequency?: number;
      /**
       * The make, model or name of the detector device used.
       */
      type?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  diffrn_radiation?: [
    {
      /**
       * The collimation or focusing applied to the radiation.
       */
      collimation?: string;
      /**
       * This data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The method used to obtain monochromatic radiation. If a mono-
       *  chromator crystal is used, the material and the indices of the
       *  Bragg reflection are specified.
       */
      monochromator?: string;
      /**
       * SINGLE WAVELENGTH, LAUE, or MAD.
       */
      pdbx_diffrn_protocol?: string;
      /**
       * Monochromatic or Laue.
       */
      pdbx_monochromatic_or_laue_m_l?: "L" | "M";
      /**
       * The radiation scattering type for this diffraction data set.
       */
      pdbx_scattering_type?: "electron" | "neutron" | "x-ray";
      /**
       * Wavelength of radiation.
       */
      pdbx_wavelength?: string;
      /**
       * Comma separated list of wavelengths or wavelength range.
       */
      pdbx_wavelength_list?: string;
      /**
       * The nature of the radiation. This is typically a description
       *  of the X-ray wavelength in Siegbahn notation.
       */
      type?: string;
      /**
       * This data item is a pointer to _diffrn_radiation_wavelength.id
       *  in the DIFFRN_RADIATION_WAVELENGTH category.
       */
      wavelength_id?: string;
    },
    ...{
      /**
       * The collimation or focusing applied to the radiation.
       */
      collimation?: string;
      /**
       * This data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The method used to obtain monochromatic radiation. If a mono-
       *  chromator crystal is used, the material and the indices of the
       *  Bragg reflection are specified.
       */
      monochromator?: string;
      /**
       * SINGLE WAVELENGTH, LAUE, or MAD.
       */
      pdbx_diffrn_protocol?: string;
      /**
       * Monochromatic or Laue.
       */
      pdbx_monochromatic_or_laue_m_l?: "L" | "M";
      /**
       * The radiation scattering type for this diffraction data set.
       */
      pdbx_scattering_type?: "electron" | "neutron" | "x-ray";
      /**
       * Wavelength of radiation.
       */
      pdbx_wavelength?: string;
      /**
       * Comma separated list of wavelengths or wavelength range.
       */
      pdbx_wavelength_list?: string;
      /**
       * The nature of the radiation. This is typically a description
       *  of the X-ray wavelength in Siegbahn notation.
       */
      type?: string;
      /**
       * This data item is a pointer to _diffrn_radiation_wavelength.id
       *  in the DIFFRN_RADIATION_WAVELENGTH category.
       */
      wavelength_id?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  diffrn_source?: [
    {
      /**
       * A description of special aspects of the radiation source used.
       */
      details?: string;
      /**
       * This data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * Synchrotron beamline.
       */
      pdbx_synchrotron_beamline?: string;
      /**
       * Synchrotron site.
       */
      pdbx_synchrotron_site?: string;
      /**
       * Wavelength of radiation.
       */
      pdbx_wavelength?: string;
      /**
       * Comma separated list of wavelengths or wavelength range.
       */
      pdbx_wavelength_list?: string;
      /**
       * The general class of the radiation source.
       */
      source?: string;
      /**
       * The make, model or name of the source of radiation.
       */
      type?: string;
    },
    ...{
      /**
       * A description of special aspects of the radiation source used.
       */
      details?: string;
      /**
       * This data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * Synchrotron beamline.
       */
      pdbx_synchrotron_beamline?: string;
      /**
       * Synchrotron site.
       */
      pdbx_synchrotron_site?: string;
      /**
       * Wavelength of radiation.
       */
      pdbx_wavelength?: string;
      /**
       * Comma separated list of wavelengths or wavelength range.
       */
      pdbx_wavelength_list?: string;
      /**
       * The general class of the radiation source.
       */
      source?: string;
      /**
       * The make, model or name of the source of radiation.
       */
      type?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_2d_crystal_entity?: [
    {
      /**
       * Unit-cell angle gamma in degrees.
       */
      angle_gamma?: number;
      /**
       * Length used to sample the reciprocal lattice lines in the c-direction.
       */
      c_sampling_length?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.
       */
      image_processing_id: string;
      /**
       * Unit-cell length a in angstroms.
       */
      length_a?: number;
      /**
       * Unit-cell length b in angstroms.
       */
      length_b?: number;
      /**
       * Thickness of 2D crystal
       */
      length_c?: number;
      /**
       * There are 17 plane groups classified as oblique, rectangular, square, and hexagonal.
       *  To describe the symmetry of 2D crystals of biological molecules,
       *  plane groups are expanded to equivalent noncentrosymmetric space groups.
       *  The 2D crystal plane corresponds to the 'ab' plane of the space group.
       *
       *  Enumerated space group descriptions include the plane group number in parentheses,
       *  the H-M plane group symbol, and the plane group class.
       */
      space_group_name_H_M?:
        | "C 1 2"
        | "C 2 2 2"
        | "P 1"
        | "P 1 2"
        | "P 1 21"
        | "P 2"
        | "P 2 2 2"
        | "P 2 2 21"
        | "P 2 21 21"
        | "P 3"
        | "P 3 1 2"
        | "P 3 2 1"
        | "P 4"
        | "P 4 2 2"
        | "P 4 21 2"
        | "P 6"
        | "P 6 2 2";
    },
    ...{
      /**
       * Unit-cell angle gamma in degrees.
       */
      angle_gamma?: number;
      /**
       * Length used to sample the reciprocal lattice lines in the c-direction.
       */
      c_sampling_length?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.
       */
      image_processing_id: string;
      /**
       * Unit-cell length a in angstroms.
       */
      length_a?: number;
      /**
       * Unit-cell length b in angstroms.
       */
      length_b?: number;
      /**
       * Thickness of 2D crystal
       */
      length_c?: number;
      /**
       * There are 17 plane groups classified as oblique, rectangular, square, and hexagonal.
       *  To describe the symmetry of 2D crystals of biological molecules,
       *  plane groups are expanded to equivalent noncentrosymmetric space groups.
       *  The 2D crystal plane corresponds to the 'ab' plane of the space group.
       *
       *  Enumerated space group descriptions include the plane group number in parentheses,
       *  the H-M plane group symbol, and the plane group class.
       */
      space_group_name_H_M?:
        | "C 1 2"
        | "C 2 2 2"
        | "P 1"
        | "P 1 2"
        | "P 1 21"
        | "P 2"
        | "P 2 2 2"
        | "P 2 2 21"
        | "P 2 21 21"
        | "P 3"
        | "P 3 1 2"
        | "P 3 2 1"
        | "P 4"
        | "P 4 2 2"
        | "P 4 21 2"
        | "P 6"
        | "P 6 2 2";
    }[]
  ];
  /**
   * @minItems 1
   */
  em_3d_crystal_entity?: [
    {
      /**
       * Unit-cell angle alpha in degrees.
       */
      angle_alpha?: number;
      /**
       * Unit-cell angle beta in degrees.
       */
      angle_beta?: number;
      /**
       * Unit-cell angle gamma in degrees.
       */
      angle_gamma?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.
       */
      image_processing_id: string;
      /**
       * Unit-cell length a in angstroms.
       */
      length_a?: number;
      /**
       * Unit-cell length b in angstroms.
       */
      length_b?: number;
      /**
       * Unit-cell length c in angstroms.
       */
      length_c?: number;
      /**
       * Space group name.
       */
      space_group_name?: string;
      /**
       * Space group number.
       */
      space_group_num?: number;
    },
    ...{
      /**
       * Unit-cell angle alpha in degrees.
       */
      angle_alpha?: number;
      /**
       * Unit-cell angle beta in degrees.
       */
      angle_beta?: number;
      /**
       * Unit-cell angle gamma in degrees.
       */
      angle_gamma?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.
       */
      image_processing_id: string;
      /**
       * Unit-cell length a in angstroms.
       */
      length_a?: number;
      /**
       * Unit-cell length b in angstroms.
       */
      length_b?: number;
      /**
       * Unit-cell length c in angstroms.
       */
      length_c?: number;
      /**
       * Space group name.
       */
      space_group_name?: string;
      /**
       * Space group number.
       */
      space_group_num?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_3d_fitting?: [
    {
      /**
       * Any additional details regarding fitting of atomic coordinates into
       *  the 3DEM volume, including data and considerations from other
       *  methods used in computation of the model.
       */
      details?: string;
      /**
       * The value of _em_3d_fitting.id must uniquely identify
       *  a fitting procedure of atomic coordinates
       *  into 3dem reconstructed map volume.
       */
      id: string;
      /**
       * The method used to fit atomic coordinates
       *  into the 3dem reconstructed map.
       */
      method?: string;
      /**
       * The overall B (temperature factor) value for the 3d-em volume.
       */
      overall_b_value?: number;
      /**
       * The refinement protocol used.
       */
      ref_protocol?: "AB INITIO MODEL" | "BACKBONE TRACE" | "FLEXIBLE FIT" | "OTHER" | "RIGID BODY FIT";
      /**
       * A flag to indicate whether fitting was carried out in real
       *  or reciprocal refinement space.
       */
      ref_space?: "REAL" | "RECIPROCAL";
      /**
       * The measure used to assess quality of fit of the atomic coordinates in the
       *  3DEM map volume.
       */
      target_criteria?: string;
    },
    ...{
      /**
       * Any additional details regarding fitting of atomic coordinates into
       *  the 3DEM volume, including data and considerations from other
       *  methods used in computation of the model.
       */
      details?: string;
      /**
       * The value of _em_3d_fitting.id must uniquely identify
       *  a fitting procedure of atomic coordinates
       *  into 3dem reconstructed map volume.
       */
      id: string;
      /**
       * The method used to fit atomic coordinates
       *  into the 3dem reconstructed map.
       */
      method?: string;
      /**
       * The overall B (temperature factor) value for the 3d-em volume.
       */
      overall_b_value?: number;
      /**
       * The refinement protocol used.
       */
      ref_protocol?: "AB INITIO MODEL" | "BACKBONE TRACE" | "FLEXIBLE FIT" | "OTHER" | "RIGID BODY FIT";
      /**
       * A flag to indicate whether fitting was carried out in real
       *  or reciprocal refinement space.
       */
      ref_space?: "REAL" | "RECIPROCAL";
      /**
       * The measure used to assess quality of fit of the atomic coordinates in the
       *  3DEM map volume.
       */
      target_criteria?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_3d_fitting_list?: [
    {
      /**
       * The value of _em_3d_fitting_list.3d_fitting_id is a pointer
       *  to  _em_3d_fitting.id in the 3d_fitting category
       */
      "3d_fitting_id": string;
      /**
       * Details about the model used in fitting.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The ID of the biopolymer chain used for fitting, e.g., A.  Please note that
       * only one chain can be specified per instance.  If all chains of a particular
       * structure have been used for fitting, this field can be left blank.
       */
      pdb_chain_id?: string;
      /**
       * Residue range for the identified chain.
       */
      pdb_chain_residue_range?: string;
      /**
       * The PDB code for the entry used in fitting.
       */
      pdb_entry_id?: string;
    },
    ...{
      /**
       * The value of _em_3d_fitting_list.3d_fitting_id is a pointer
       *  to  _em_3d_fitting.id in the 3d_fitting category
       */
      "3d_fitting_id": string;
      /**
       * Details about the model used in fitting.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The ID of the biopolymer chain used for fitting, e.g., A.  Please note that
       * only one chain can be specified per instance.  If all chains of a particular
       * structure have been used for fitting, this field can be left blank.
       */
      pdb_chain_id?: string;
      /**
       * Residue range for the identified chain.
       */
      pdb_chain_residue_range?: string;
      /**
       * The PDB code for the entry used in fitting.
       */
      pdb_entry_id?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_3d_reconstruction?: [
    {
      /**
       * The actual pixel size of the projection set of images in Angstroms.
       */
      actual_pixel_size?: number;
      /**
       * The reconstruction algorithm/technique used to generate the map.
       */
      algorithm?: string;
      /**
       * Any additional details used in the 3d reconstruction.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Foreign key to the EM_IMAGE_PROCESSING category
       */
      image_processing_id: string;
      /**
       * The magnification calibration method for the 3d reconstruction.
       */
      magnification_calibration?: string;
      /**
       * The algorithm method used for the 3d-reconstruction.
       */
      method?: string;
      /**
       * The nominal pixel size of the projection set of images in Angstroms.
       */
      nominal_pixel_size?: number;
      /**
       * The number of classes used in the final 3d reconstruction
       */
      num_class_averages?: number;
      /**
       * The number of 2D projections or 3D subtomograms used in the 3d reconstruction
       */
      num_particles?: number;
      /**
       * Indicates details on how the half-map used for resolution determination (usually by FSC) have been generated.
       */
      refinement_type?:
        | "HALF-MAPS REFINED AGAINST SAME DATA"
        | "HALF-MAPS REFINED INDEPENDENTLY"
        | "HALF-MAPS REFINED INDEPENDENTLY WITH FREQUENCY RANGE OMITTED"
        | "HALF-MAPS REFINED WITH FREQUENCY RANGE OMITTED"
        | "OTHER";
      /**
       * The final resolution (in angstroms) of the 3D reconstruction.
       */
      resolution?: number;
      /**
       * The  method used to determine the final resolution
       *  of the 3d reconstruction.
       *  The Fourier Shell Correlation criterion as a measure of
       *  resolution is based on the concept of splitting the (2D)
       *  data set into two halves; averaging each and comparing them
       *  using the Fourier Ring Correlation (FRC) technique.
       */
      resolution_method?: string;
      /**
       * The type of symmetry applied to the reconstruction
       */
      symmetry_type?: "2D CRYSTAL" | "3D CRYSTAL" | "HELICAL" | "POINT";
    },
    ...{
      /**
       * The actual pixel size of the projection set of images in Angstroms.
       */
      actual_pixel_size?: number;
      /**
       * The reconstruction algorithm/technique used to generate the map.
       */
      algorithm?: string;
      /**
       * Any additional details used in the 3d reconstruction.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Foreign key to the EM_IMAGE_PROCESSING category
       */
      image_processing_id: string;
      /**
       * The magnification calibration method for the 3d reconstruction.
       */
      magnification_calibration?: string;
      /**
       * The algorithm method used for the 3d-reconstruction.
       */
      method?: string;
      /**
       * The nominal pixel size of the projection set of images in Angstroms.
       */
      nominal_pixel_size?: number;
      /**
       * The number of classes used in the final 3d reconstruction
       */
      num_class_averages?: number;
      /**
       * The number of 2D projections or 3D subtomograms used in the 3d reconstruction
       */
      num_particles?: number;
      /**
       * Indicates details on how the half-map used for resolution determination (usually by FSC) have been generated.
       */
      refinement_type?:
        | "HALF-MAPS REFINED AGAINST SAME DATA"
        | "HALF-MAPS REFINED INDEPENDENTLY"
        | "HALF-MAPS REFINED INDEPENDENTLY WITH FREQUENCY RANGE OMITTED"
        | "HALF-MAPS REFINED WITH FREQUENCY RANGE OMITTED"
        | "OTHER";
      /**
       * The final resolution (in angstroms) of the 3D reconstruction.
       */
      resolution?: number;
      /**
       * The  method used to determine the final resolution
       *  of the 3d reconstruction.
       *  The Fourier Shell Correlation criterion as a measure of
       *  resolution is based on the concept of splitting the (2D)
       *  data set into two halves; averaging each and comparing them
       *  using the Fourier Ring Correlation (FRC) technique.
       */
      resolution_method?: string;
      /**
       * The type of symmetry applied to the reconstruction
       */
      symmetry_type?: "2D CRYSTAL" | "3D CRYSTAL" | "HELICAL" | "POINT";
    }[]
  ];
  /**
   * @minItems 1
   */
  em_ctf_correction?: [
    {
      /**
       * Any additional details about CTF correction
       */
      details?: string;
      /**
       * Foreign key to the EM_IMAGE_PROCESSING category
       */
      em_image_processing_id?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Type of CTF correction applied
       */
      type?: string;
    },
    ...{
      /**
       * Any additional details about CTF correction
       */
      details?: string;
      /**
       * Foreign key to the EM_IMAGE_PROCESSING category
       */
      em_image_processing_id?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Type of CTF correction applied
       */
      type?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_diffraction?: [
    {
      /**
       * The camera length (in millimeters). The camera length is the
       *  product of the objective focal length and the combined magnification
       *  of the intermediate and projector lenses when the microscope is
       *  operated in the diffraction mode.
       */
      camera_length?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Foreign key to the EM_IMAGING category
       */
      imaging_id?: string;
      /**
       * Comma-separated list of tilt angles (in degrees) used in the electron diffraction experiment.
       */
      tilt_angle_list?: string;
    },
    ...{
      /**
       * The camera length (in millimeters). The camera length is the
       *  product of the objective focal length and the combined magnification
       *  of the intermediate and projector lenses when the microscope is
       *  operated in the diffraction mode.
       */
      camera_length?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Foreign key to the EM_IMAGING category
       */
      imaging_id?: string;
      /**
       * Comma-separated list of tilt angles (in degrees) used in the electron diffraction experiment.
       */
      tilt_angle_list?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_diffraction_shell?: [
    {
      /**
       * Pointer to EM CRYSTALLOGRAPHY STATS
       */
      em_diffraction_stats_id?: string;
      /**
       * Completeness of the structure factor data within this resolution shell, in percent
       */
      fourier_space_coverage?: number;
      /**
       * High resolution limit for this shell (angstroms)
       */
      high_resolution?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Low resolution limit for this shell (angstroms)
       */
      low_resolution?: number;
      /**
       * Multiplicity (average number of measurements) for the structure factors in this resolution shell
       */
      multiplicity?: number;
      /**
       * Number of measured structure factors in this resolution shell
       */
      num_structure_factors?: number;
      /**
       * Phase residual for this resolution shell, in degrees
       */
      phase_residual?: number;
    },
    ...{
      /**
       * Pointer to EM CRYSTALLOGRAPHY STATS
       */
      em_diffraction_stats_id?: string;
      /**
       * Completeness of the structure factor data within this resolution shell, in percent
       */
      fourier_space_coverage?: number;
      /**
       * High resolution limit for this shell (angstroms)
       */
      high_resolution?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Low resolution limit for this shell (angstroms)
       */
      low_resolution?: number;
      /**
       * Multiplicity (average number of measurements) for the structure factors in this resolution shell
       */
      multiplicity?: number;
      /**
       * Number of measured structure factors in this resolution shell
       */
      num_structure_factors?: number;
      /**
       * Phase residual for this resolution shell, in degrees
       */
      phase_residual?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_diffraction_stats?: [
    {
      /**
       * Any addition details about the structure factor measurements
       */
      details?: string;
      /**
       * Completeness of the structure factor data within the defined space group
       *  at the reported resolution (percent).
       */
      fourier_space_coverage?: number;
      /**
       * High resolution limit of the structure factor data, in angstroms
       */
      high_resolution?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Pointer to _em_image_processing.id
       */
      image_processing_id?: string;
      /**
       * Total number of diffraction intensities measured (before averaging)
       */
      num_intensities_measured?: number;
      /**
       * Number of structure factors obtained (merged amplitudes + phases)
       */
      num_structure_factors?: number;
      /**
       * Overall phase error in degrees
       */
      overall_phase_error?: number;
      /**
       * Overall phase residual in degrees
       */
      overall_phase_residual?: number;
      /**
       * Criteria used to reject phases
       */
      phase_error_rejection_criteria?: string;
      /**
       * Rmerge value (percent)
       */
      r_merge?: number;
      /**
       * Rsym value (percent)
       */
      r_sym?: number;
    },
    ...{
      /**
       * Any addition details about the structure factor measurements
       */
      details?: string;
      /**
       * Completeness of the structure factor data within the defined space group
       *  at the reported resolution (percent).
       */
      fourier_space_coverage?: number;
      /**
       * High resolution limit of the structure factor data, in angstroms
       */
      high_resolution?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * Pointer to _em_image_processing.id
       */
      image_processing_id?: string;
      /**
       * Total number of diffraction intensities measured (before averaging)
       */
      num_intensities_measured?: number;
      /**
       * Number of structure factors obtained (merged amplitudes + phases)
       */
      num_structure_factors?: number;
      /**
       * Overall phase error in degrees
       */
      overall_phase_error?: number;
      /**
       * Overall phase residual in degrees
       */
      overall_phase_residual?: number;
      /**
       * Criteria used to reject phases
       */
      phase_error_rejection_criteria?: string;
      /**
       * Rmerge value (percent)
       */
      r_merge?: number;
      /**
       * Rsym value (percent)
       */
      r_sym?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_embedding?: [
    {
      /**
       * Staining procedure used in the specimen preparation.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The embedding  material.
       */
      material?: string;
      /**
       * Foreign key relationship to the EM SPECIMEN category
       */
      specimen_id?: string;
    },
    ...{
      /**
       * Staining procedure used in the specimen preparation.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The embedding  material.
       */
      material?: string;
      /**
       * Foreign key relationship to the EM SPECIMEN category
       */
      specimen_id?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_entity_assembly?: [
    {
      /**
       * Additional details about the sample or sample subcomponent.
       */
      details?: string;
      entity_id_list?: string[];
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The name of the sample or sample subcomponent.
       */
      name?: string;
      /**
       * oligomeric details
       */
      oligomeric_details?: string;
      /**
       * The parent of this assembly.
       *  This data item is an internal category pointer to _em_entity_assembly.id.
       *  By convention, the full assembly (top of hierarchy) is assigned parent id 0 (zero).
       */
      parent_id?: number;
      /**
       * The type of source (e.g., natural source) for the component (sample or sample
       * subcomponent)
       */
      source?: "MULTIPLE SOURCES" | "NATURAL" | "RECOMBINANT" | "SYNTHETIC";
      /**
       * Alternative name of the component.
       */
      synonym?: string;
      /**
       * The general type of the sample or sample subcomponent.
       */
      type?: string;
    },
    ...{
      /**
       * Additional details about the sample or sample subcomponent.
       */
      details?: string;
      entity_id_list?: string[];
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The name of the sample or sample subcomponent.
       */
      name?: string;
      /**
       * oligomeric details
       */
      oligomeric_details?: string;
      /**
       * The parent of this assembly.
       *  This data item is an internal category pointer to _em_entity_assembly.id.
       *  By convention, the full assembly (top of hierarchy) is assigned parent id 0 (zero).
       */
      parent_id?: number;
      /**
       * The type of source (e.g., natural source) for the component (sample or sample
       * subcomponent)
       */
      source?: "MULTIPLE SOURCES" | "NATURAL" | "RECOMBINANT" | "SYNTHETIC";
      /**
       * Alternative name of the component.
       */
      synonym?: string;
      /**
       * The general type of the sample or sample subcomponent.
       */
      type?: string;
    }[]
  ];
  em_experiment?: {
    /**
     * The aggregation/assembly state of the imaged specimen.
     */
    aggregation_state?: "2D ARRAY" | "3D ARRAY" | "CELL" | "FILAMENT" | "HELICAL ARRAY" | "PARTICLE" | "TISSUE";
    /**
     * Foreign key to the EM_ENTITY_ASSEMBLY category
     */
    entity_assembly_id?: string;
    /**
     * PRIMARY KEY
     */
    id?: string;
    /**
     * The reconstruction method used in the EM experiment.
     */
    reconstruction_method?: "CRYSTALLOGRAPHY" | "HELICAL" | "SINGLE PARTICLE" | "SUBTOMOGRAM AVERAGING" | "TOMOGRAPHY";
  };
  /**
   * @minItems 1
   */
  em_helical_entity?: [
    {
      /**
       * The angular rotation per helical subunit in degrees. Negative values indicate left-handed helices; positive values indicate right handed helices.
       */
      angular_rotation_per_subunit?: number;
      /**
       * The axial rise per subunit in the helical assembly.
       */
      axial_rise_per_subunit?: number;
      /**
       * Symmetry of the helical axis, either cyclic (Cn) or dihedral (Dn), where n>=1.
       */
      axial_symmetry?: string;
      /**
       * Any other details regarding the helical assembly
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * This data item is a pointer to _em_image_processing.id.
       */
      image_processing_id: string;
    },
    ...{
      /**
       * The angular rotation per helical subunit in degrees. Negative values indicate left-handed helices; positive values indicate right handed helices.
       */
      angular_rotation_per_subunit?: number;
      /**
       * The axial rise per subunit in the helical assembly.
       */
      axial_rise_per_subunit?: number;
      /**
       * Symmetry of the helical axis, either cyclic (Cn) or dihedral (Dn), where n>=1.
       */
      axial_symmetry?: string;
      /**
       * Any other details regarding the helical assembly
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * This data item is a pointer to _em_image_processing.id.
       */
      image_processing_id: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_image_recording?: [
    {
      /**
       * The average exposure time for each image.
       */
      average_exposure_time?: number;
      /**
       * The electron dose received by the specimen per image (electrons per square angstrom).
       */
      avg_electron_dose_per_image?: number;
      /**
       * Any additional details about image recording.
       */
      details?: string;
      /**
       * The detector mode used during image recording.
       */
      detector_mode?: "COUNTING" | "INTEGRATING" | "OTHER" | "SUPER-RESOLUTION";
      /**
       * The detector type used for recording images.
       *  Usually film , CCD camera or direct electron detector.
       */
      film_or_detector_model?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * This data item the id of the microscopy settings used in the imaging.
       */
      imaging_id: string;
      /**
       * The number of diffraction images collected.
       */
      num_diffraction_images?: number;
      /**
       * Number of grids in the microscopy session
       */
      num_grids_imaged?: number;
      /**
       * The number of micrograph images collected.
       */
      num_real_images?: number;
    },
    ...{
      /**
       * The average exposure time for each image.
       */
      average_exposure_time?: number;
      /**
       * The electron dose received by the specimen per image (electrons per square angstrom).
       */
      avg_electron_dose_per_image?: number;
      /**
       * Any additional details about image recording.
       */
      details?: string;
      /**
       * The detector mode used during image recording.
       */
      detector_mode?: "COUNTING" | "INTEGRATING" | "OTHER" | "SUPER-RESOLUTION";
      /**
       * The detector type used for recording images.
       *  Usually film , CCD camera or direct electron detector.
       */
      film_or_detector_model?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * This data item the id of the microscopy settings used in the imaging.
       */
      imaging_id: string;
      /**
       * The number of diffraction images collected.
       */
      num_diffraction_images?: number;
      /**
       * Number of grids in the microscopy session
       */
      num_grids_imaged?: number;
      /**
       * The number of micrograph images collected.
       */
      num_real_images?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_imaging?: [
    {
      /**
       * A value of accelerating voltage (in kV) used for imaging.
       */
      accelerating_voltage?: number;
      /**
       * The type of procedure used to align the microscope electron beam.
       */
      alignment_procedure?: "BASIC" | "COMA FREE" | "NONE" | "OTHER" | "ZEMLIN TABLEAU";
      /**
       * astigmatism
       */
      astigmatism?: string;
      /**
       * The open diameter of the c2 condenser lens,
       *  in microns.
       */
      c2_aperture_diameter?: number;
      /**
       * The maximum calibrated defocus value of the objective lens (in nanometers) used
       *  to obtain the recorded images. Negative values refer to overfocus.
       */
      calibrated_defocus_max?: number;
      /**
       * The minimum calibrated defocus value of the objective lens (in nanometers) used
       *  to obtain the recorded images. Negative values refer to overfocus.
       */
      calibrated_defocus_min?: number;
      /**
       * The magnification value obtained for a known standard just
       *  prior to, during or just after the imaging experiment.
       */
      calibrated_magnification?: number;
      /**
       * Cryogen type used to maintain the specimen stage temperature during imaging
       *  in the microscope.
       */
      cryogen?: "HELIUM" | "NITROGEN";
      /**
       * Date (YYYY-MM-DD) of imaging experiment or the date at which
       *  a series of experiments began.
       */
      date?: string;
      /**
       * Any additional imaging details.
       */
      details?: string;
      /**
       * The camera length (in millimeters). The camera length is the
       *  product of the objective focal length and the combined magnification
       *  of the intermediate and projector lenses when the microscope is
       *  operated in the diffraction mode.
       */
      detector_distance?: number;
      /**
       * electron beam tilt params
       */
      electron_beam_tilt_params?: string;
      /**
       * The source of electrons. The electron gun.
       */
      electron_source?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The mode of illumination.
       */
      illumination_mode?: "FLOOD BEAM" | "OTHER" | "SPOT SCAN";
      /**
       * The name of the model of microscope.
       */
      microscope_model?:
        | "FEI MORGAGNI"
        | "FEI POLARA 300"
        | "FEI TALOS ARCTICA"
        | "FEI TECNAI 10"
        | "FEI TECNAI 12"
        | "FEI TECNAI 20"
        | "FEI TECNAI ARCTICA"
        | "FEI TECNAI F20"
        | "FEI TECNAI F30"
        | "FEI TECNAI SPHERA"
        | "FEI TECNAI SPIRIT"
        | "FEI TITAN"
        | "FEI TITAN KRIOS"
        | "FEI/PHILIPS CM10"
        | "FEI/PHILIPS CM12"
        | "FEI/PHILIPS CM120T"
        | "FEI/PHILIPS CM200FEG"
        | "FEI/PHILIPS CM200FEG/SOPHIE"
        | "FEI/PHILIPS CM200FEG/ST"
        | "FEI/PHILIPS CM200FEG/UT"
        | "FEI/PHILIPS CM200T"
        | "FEI/PHILIPS CM300FEG/HE"
        | "FEI/PHILIPS CM300FEG/ST"
        | "FEI/PHILIPS CM300FEG/T"
        | "FEI/PHILIPS EM400"
        | "FEI/PHILIPS EM420"
        | "HITACHI EF2000"
        | "HITACHI EF3000"
        | "HITACHI H-9500SD"
        | "HITACHI H3000 UHVEM"
        | "HITACHI H7600"
        | "HITACHI HF2000"
        | "HITACHI HF3000"
        | "JEOL 1000EES"
        | "JEOL 100B"
        | "JEOL 100CX"
        | "JEOL 1010"
        | "JEOL 1200"
        | "JEOL 1200EX"
        | "JEOL 1200EXII"
        | "JEOL 1230"
        | "JEOL 1400"
        | "JEOL 1400/HR + YPS FEG"
        | "JEOL 2000EX"
        | "JEOL 2000EXII"
        | "JEOL 2010"
        | "JEOL 2010F"
        | "JEOL 2010HC"
        | "JEOL 2010HT"
        | "JEOL 2010UHR"
        | "JEOL 2011"
        | "JEOL 2100"
        | "JEOL 2100F"
        | "JEOL 2200FS"
        | "JEOL 2200FSC"
        | "JEOL 3000SFF"
        | "JEOL 3100FEF"
        | "JEOL 3100FFC"
        | "JEOL 3200FS"
        | "JEOL 3200FSC"
        | "JEOL 4000"
        | "JEOL 4000EX"
        | "JEOL CRYO ARM 200"
        | "JEOL CRYO ARM 300"
        | "JEOL KYOTO-3000SFF"
        | "SIEMENS SULEIKA"
        | "TFS GLACIOS"
        | "TFS KRIOS"
        | "TFS TALOS"
        | "TFS TALOS F200C"
        | "TFS TALOS L120C"
        | "TFS TITAN THEMIS"
        | "TFS TUNDRA"
        | "ZEISS LEO912"
        | "ZEISS LIBRA120PLUS";
      /**
       * The mode of imaging.
       */
      mode?: "4D-STEM" | "BRIGHT FIELD" | "DARK FIELD" | "DIFFRACTION" | "OTHER";
      /**
       * The spherical aberration coefficient (Cs) in millimeters,
       *  of the objective lens.
       */
      nominal_cs?: number;
      /**
       * The maximum defocus value of the objective lens (in nanometers) used
       *  to obtain the recorded images. Negative values refer to overfocus.
       */
      nominal_defocus_max?: number;
      /**
       * The minimum defocus value of the objective lens (in nanometers) used
       *  to obtain the recorded images. Negative values refer to overfocus.
       */
      nominal_defocus_min?: number;
      /**
       * The magnification indicated by the microscope readout.
       */
      nominal_magnification?: number;
      /**
       * The specimen temperature maximum (kelvin) for the duration
       *  of imaging.
       */
      recording_temperature_maximum?: number;
      /**
       * The specimen temperature minimum (kelvin) for the duration
       *  of imaging.
       */
      recording_temperature_minimum?: number;
      /**
       * Residual tilt of the electron beam (in miliradians)
       */
      residual_tilt?: number;
      /**
       * The name of the model of specimen holder used during imaging.
       */
      specimen_holder_model?:
        | "FEI TITAN KRIOS AUTOGRID HOLDER"
        | "FISCHIONE 2550"
        | "FISCHIONE INSTRUMENTS DUAL AXIS TOMOGRAPHY HOLDER"
        | "GATAN 626 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN 910 MULTI-SPECIMEN SINGLE TILT CRYO TRANSFER HOLDER"
        | "GATAN 914 HIGH TILT LIQUID NITROGEN CRYO TRANSFER TOMOGRAPHY HOLDER"
        | "GATAN 915 DOUBLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN CHDT 3504 DOUBLE TILT HIGH RESOLUTION NITROGEN COOLING HOLDER"
        | "GATAN CT3500 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN CT3500TR SINGLE TILT ROTATION LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN ELSA 698 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN HC 3500 SINGLE TILT HEATING/NITROGEN COOLING HOLDER"
        | "GATAN HCHDT 3010 DOUBLE TILT HIGH RESOLUTION HELIUM COOLING HOLDER"
        | "GATAN HCHST 3008 SINGLE TILT HIGH RESOLUTION HELIUM COOLING HOLDER"
        | "GATAN HELIUM"
        | "GATAN LIQUID NITROGEN"
        | "GATAN UHRST 3500 SINGLE TILT ULTRA HIGH RESOLUTION NITROGEN COOLING HOLDER"
        | "GATAN ULTDT ULTRA LOW TEMPERATURE DOUBLE TILT HELIUM COOLING HOLDER"
        | "GATAN ULTST ULTRA LOW TEMPERATURE SINGLE TILT HELIUM COOLING HOLDER"
        | "HOME BUILD"
        | "JEOL"
        | "JEOL 3200FSC CRYOHOLDER"
        | "JEOL CRYOSPECPORTER"
        | "OTHER"
        | "PHILIPS ROTATION HOLDER"
        | "SIDE ENTRY, EUCENTRIC";
      /**
       * The type of specimen holder used during imaging.
       */
      specimen_holder_type?: string;
      /**
       * Foreign key to the EM_SPECIMEN category
       */
      specimen_id?: string;
      /**
       * The mean specimen stage temperature (in kelvin) during imaging
       *  in the microscope.
       */
      temperature?: number;
      /**
       * The maximum angle at which the specimen was tilted to obtain
       *  recorded images.
       */
      tilt_angle_max?: number;
      /**
       * The minimum angle at which the specimen was tilted to obtain
       *  recorded images.
       */
      tilt_angle_min?: number;
    },
    ...{
      /**
       * A value of accelerating voltage (in kV) used for imaging.
       */
      accelerating_voltage?: number;
      /**
       * The type of procedure used to align the microscope electron beam.
       */
      alignment_procedure?: "BASIC" | "COMA FREE" | "NONE" | "OTHER" | "ZEMLIN TABLEAU";
      /**
       * astigmatism
       */
      astigmatism?: string;
      /**
       * The open diameter of the c2 condenser lens,
       *  in microns.
       */
      c2_aperture_diameter?: number;
      /**
       * The maximum calibrated defocus value of the objective lens (in nanometers) used
       *  to obtain the recorded images. Negative values refer to overfocus.
       */
      calibrated_defocus_max?: number;
      /**
       * The minimum calibrated defocus value of the objective lens (in nanometers) used
       *  to obtain the recorded images. Negative values refer to overfocus.
       */
      calibrated_defocus_min?: number;
      /**
       * The magnification value obtained for a known standard just
       *  prior to, during or just after the imaging experiment.
       */
      calibrated_magnification?: number;
      /**
       * Cryogen type used to maintain the specimen stage temperature during imaging
       *  in the microscope.
       */
      cryogen?: "HELIUM" | "NITROGEN";
      /**
       * Date (YYYY-MM-DD) of imaging experiment or the date at which
       *  a series of experiments began.
       */
      date?: string;
      /**
       * Any additional imaging details.
       */
      details?: string;
      /**
       * The camera length (in millimeters). The camera length is the
       *  product of the objective focal length and the combined magnification
       *  of the intermediate and projector lenses when the microscope is
       *  operated in the diffraction mode.
       */
      detector_distance?: number;
      /**
       * electron beam tilt params
       */
      electron_beam_tilt_params?: string;
      /**
       * The source of electrons. The electron gun.
       */
      electron_source?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The mode of illumination.
       */
      illumination_mode?: "FLOOD BEAM" | "OTHER" | "SPOT SCAN";
      /**
       * The name of the model of microscope.
       */
      microscope_model?:
        | "FEI MORGAGNI"
        | "FEI POLARA 300"
        | "FEI TALOS ARCTICA"
        | "FEI TECNAI 10"
        | "FEI TECNAI 12"
        | "FEI TECNAI 20"
        | "FEI TECNAI ARCTICA"
        | "FEI TECNAI F20"
        | "FEI TECNAI F30"
        | "FEI TECNAI SPHERA"
        | "FEI TECNAI SPIRIT"
        | "FEI TITAN"
        | "FEI TITAN KRIOS"
        | "FEI/PHILIPS CM10"
        | "FEI/PHILIPS CM12"
        | "FEI/PHILIPS CM120T"
        | "FEI/PHILIPS CM200FEG"
        | "FEI/PHILIPS CM200FEG/SOPHIE"
        | "FEI/PHILIPS CM200FEG/ST"
        | "FEI/PHILIPS CM200FEG/UT"
        | "FEI/PHILIPS CM200T"
        | "FEI/PHILIPS CM300FEG/HE"
        | "FEI/PHILIPS CM300FEG/ST"
        | "FEI/PHILIPS CM300FEG/T"
        | "FEI/PHILIPS EM400"
        | "FEI/PHILIPS EM420"
        | "HITACHI EF2000"
        | "HITACHI EF3000"
        | "HITACHI H-9500SD"
        | "HITACHI H3000 UHVEM"
        | "HITACHI H7600"
        | "HITACHI HF2000"
        | "HITACHI HF3000"
        | "JEOL 1000EES"
        | "JEOL 100B"
        | "JEOL 100CX"
        | "JEOL 1010"
        | "JEOL 1200"
        | "JEOL 1200EX"
        | "JEOL 1200EXII"
        | "JEOL 1230"
        | "JEOL 1400"
        | "JEOL 1400/HR + YPS FEG"
        | "JEOL 2000EX"
        | "JEOL 2000EXII"
        | "JEOL 2010"
        | "JEOL 2010F"
        | "JEOL 2010HC"
        | "JEOL 2010HT"
        | "JEOL 2010UHR"
        | "JEOL 2011"
        | "JEOL 2100"
        | "JEOL 2100F"
        | "JEOL 2200FS"
        | "JEOL 2200FSC"
        | "JEOL 3000SFF"
        | "JEOL 3100FEF"
        | "JEOL 3100FFC"
        | "JEOL 3200FS"
        | "JEOL 3200FSC"
        | "JEOL 4000"
        | "JEOL 4000EX"
        | "JEOL CRYO ARM 200"
        | "JEOL CRYO ARM 300"
        | "JEOL KYOTO-3000SFF"
        | "SIEMENS SULEIKA"
        | "TFS GLACIOS"
        | "TFS KRIOS"
        | "TFS TALOS"
        | "TFS TALOS F200C"
        | "TFS TALOS L120C"
        | "TFS TITAN THEMIS"
        | "TFS TUNDRA"
        | "ZEISS LEO912"
        | "ZEISS LIBRA120PLUS";
      /**
       * The mode of imaging.
       */
      mode?: "4D-STEM" | "BRIGHT FIELD" | "DARK FIELD" | "DIFFRACTION" | "OTHER";
      /**
       * The spherical aberration coefficient (Cs) in millimeters,
       *  of the objective lens.
       */
      nominal_cs?: number;
      /**
       * The maximum defocus value of the objective lens (in nanometers) used
       *  to obtain the recorded images. Negative values refer to overfocus.
       */
      nominal_defocus_max?: number;
      /**
       * The minimum defocus value of the objective lens (in nanometers) used
       *  to obtain the recorded images. Negative values refer to overfocus.
       */
      nominal_defocus_min?: number;
      /**
       * The magnification indicated by the microscope readout.
       */
      nominal_magnification?: number;
      /**
       * The specimen temperature maximum (kelvin) for the duration
       *  of imaging.
       */
      recording_temperature_maximum?: number;
      /**
       * The specimen temperature minimum (kelvin) for the duration
       *  of imaging.
       */
      recording_temperature_minimum?: number;
      /**
       * Residual tilt of the electron beam (in miliradians)
       */
      residual_tilt?: number;
      /**
       * The name of the model of specimen holder used during imaging.
       */
      specimen_holder_model?:
        | "FEI TITAN KRIOS AUTOGRID HOLDER"
        | "FISCHIONE 2550"
        | "FISCHIONE INSTRUMENTS DUAL AXIS TOMOGRAPHY HOLDER"
        | "GATAN 626 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN 910 MULTI-SPECIMEN SINGLE TILT CRYO TRANSFER HOLDER"
        | "GATAN 914 HIGH TILT LIQUID NITROGEN CRYO TRANSFER TOMOGRAPHY HOLDER"
        | "GATAN 915 DOUBLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN CHDT 3504 DOUBLE TILT HIGH RESOLUTION NITROGEN COOLING HOLDER"
        | "GATAN CT3500 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN CT3500TR SINGLE TILT ROTATION LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN ELSA 698 SINGLE TILT LIQUID NITROGEN CRYO TRANSFER HOLDER"
        | "GATAN HC 3500 SINGLE TILT HEATING/NITROGEN COOLING HOLDER"
        | "GATAN HCHDT 3010 DOUBLE TILT HIGH RESOLUTION HELIUM COOLING HOLDER"
        | "GATAN HCHST 3008 SINGLE TILT HIGH RESOLUTION HELIUM COOLING HOLDER"
        | "GATAN HELIUM"
        | "GATAN LIQUID NITROGEN"
        | "GATAN UHRST 3500 SINGLE TILT ULTRA HIGH RESOLUTION NITROGEN COOLING HOLDER"
        | "GATAN ULTDT ULTRA LOW TEMPERATURE DOUBLE TILT HELIUM COOLING HOLDER"
        | "GATAN ULTST ULTRA LOW TEMPERATURE SINGLE TILT HELIUM COOLING HOLDER"
        | "HOME BUILD"
        | "JEOL"
        | "JEOL 3200FSC CRYOHOLDER"
        | "JEOL CRYOSPECPORTER"
        | "OTHER"
        | "PHILIPS ROTATION HOLDER"
        | "SIDE ENTRY, EUCENTRIC";
      /**
       * The type of specimen holder used during imaging.
       */
      specimen_holder_type?: string;
      /**
       * Foreign key to the EM_SPECIMEN category
       */
      specimen_id?: string;
      /**
       * The mean specimen stage temperature (in kelvin) during imaging
       *  in the microscope.
       */
      temperature?: number;
      /**
       * The maximum angle at which the specimen was tilted to obtain
       *  recorded images.
       */
      tilt_angle_max?: number;
      /**
       * The minimum angle at which the specimen was tilted to obtain
       *  recorded images.
       */
      tilt_angle_min?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_particle_selection?: [
    {
      /**
       * Additional detail such as description of filters used, if selection was
       * manual or automated, and/or template details.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The value of _em_particle_selection.image_processing_id points to
       *  the EM_IMAGE_PROCESSING category.
       */
      image_processing_id: string;
      /**
       * The number of particles selected from the projection set of images.
       */
      num_particles_selected?: number;
    },
    ...{
      /**
       * Additional detail such as description of filters used, if selection was
       * manual or automated, and/or template details.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The value of _em_particle_selection.image_processing_id points to
       *  the EM_IMAGE_PROCESSING category.
       */
      image_processing_id: string;
      /**
       * The number of particles selected from the projection set of images.
       */
      num_particles_selected?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_single_particle_entity?: [
    {
      /**
       * PRIMARY KEY
       */
      id: number;
      /**
       * pointer to _em_image_processing.id.
       */
      image_processing_id: string;
      /**
       * Point symmetry symbol, either Cn, Dn, T, O, or I
       */
      point_symmetry?: string;
    },
    ...{
      /**
       * PRIMARY KEY
       */
      id: number;
      /**
       * pointer to _em_image_processing.id.
       */
      image_processing_id: string;
      /**
       * Point symmetry symbol, either Cn, Dn, T, O, or I
       */
      point_symmetry?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_software?: [
    {
      /**
       * The purpose of the software.
       */
      category?:
        | "CLASSIFICATION"
        | "CRYSTALLOGRAPHY MERGING"
        | "CTF CORRECTION"
        | "DIFFRACTION INDEXING"
        | "EWALD SPHERE CORRECTION"
        | "FINAL EULER ASSIGNMENT"
        | "IMAGE ACQUISITION"
        | "INITIAL EULER ASSIGNMENT"
        | "LATTICE DISTORTION CORRECTION"
        | "LAYERLINE INDEXING"
        | "MASKING"
        | "MODEL FITTING"
        | "MODEL REFINEMENT"
        | "MOLECULAR REPLACEMENT"
        | "OTHER"
        | "PARTICLE SELECTION"
        | "RECONSTRUCTION"
        | "SERIES ALIGNMENT"
        | "SYMMETRY DETERMINATION"
        | "VOLUME SELECTION";
      /**
       * Details about the software used.
       */
      details?: string;
      /**
       * pointer to _em_3d_fitting.id in the EM_3D_FITTING category.
       */
      fitting_id?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.
       */
      image_processing_id?: string;
      /**
       * pointer to _em_imaging.id in the EM_IMAGING category.
       */
      imaging_id?: string;
      /**
       * The name of the software package used, e.g., RELION.  Depositors are strongly
       *   encouraged to provide a value in this field.
       */
      name?: string;
      /**
       * The version of the software.
       */
      version?: string;
    },
    ...{
      /**
       * The purpose of the software.
       */
      category?:
        | "CLASSIFICATION"
        | "CRYSTALLOGRAPHY MERGING"
        | "CTF CORRECTION"
        | "DIFFRACTION INDEXING"
        | "EWALD SPHERE CORRECTION"
        | "FINAL EULER ASSIGNMENT"
        | "IMAGE ACQUISITION"
        | "INITIAL EULER ASSIGNMENT"
        | "LATTICE DISTORTION CORRECTION"
        | "LAYERLINE INDEXING"
        | "MASKING"
        | "MODEL FITTING"
        | "MODEL REFINEMENT"
        | "MOLECULAR REPLACEMENT"
        | "OTHER"
        | "PARTICLE SELECTION"
        | "RECONSTRUCTION"
        | "SERIES ALIGNMENT"
        | "SYMMETRY DETERMINATION"
        | "VOLUME SELECTION";
      /**
       * Details about the software used.
       */
      details?: string;
      /**
       * pointer to _em_3d_fitting.id in the EM_3D_FITTING category.
       */
      fitting_id?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * pointer to _em_image_processing.id in the EM_IMAGE_PROCESSING category.
       */
      image_processing_id?: string;
      /**
       * pointer to _em_imaging.id in the EM_IMAGING category.
       */
      imaging_id?: string;
      /**
       * The name of the software package used, e.g., RELION.  Depositors are strongly
       *   encouraged to provide a value in this field.
       */
      name?: string;
      /**
       * The version of the software.
       */
      version?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  em_specimen?: [
    {
      /**
       * The concentration (in milligrams per milliliter, mg/ml)
       *  of the complex in the sample.
       */
      concentration?: number;
      /**
       * A description of any additional details of the specimen preparation.
       */
      details?: string;
      /**
       * 'YES' indicates that the specimen has been embedded.
       */
      embedding_applied?: "NO" | "YES";
      /**
       * Pointer to _em_experiment.id.
       */
      experiment_id: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * 'YES' indicates that the specimen has been shadowed.
       */
      shadowing_applied?: "NO" | "YES";
      /**
       * 'YES' indicates that the specimen has been stained.
       */
      staining_applied?: "NO" | "YES";
      /**
       * 'YES' indicates that the specimen was vitrified by cryopreservation.
       */
      vitrification_applied?: "NO" | "YES";
    },
    ...{
      /**
       * The concentration (in milligrams per milliliter, mg/ml)
       *  of the complex in the sample.
       */
      concentration?: number;
      /**
       * A description of any additional details of the specimen preparation.
       */
      details?: string;
      /**
       * 'YES' indicates that the specimen has been embedded.
       */
      embedding_applied?: "NO" | "YES";
      /**
       * Pointer to _em_experiment.id.
       */
      experiment_id: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * 'YES' indicates that the specimen has been shadowed.
       */
      shadowing_applied?: "NO" | "YES";
      /**
       * 'YES' indicates that the specimen has been stained.
       */
      staining_applied?: "NO" | "YES";
      /**
       * 'YES' indicates that the specimen was vitrified by cryopreservation.
       */
      vitrification_applied?: "NO" | "YES";
    }[]
  ];
  /**
   * @minItems 1
   */
  em_staining?: [
    {
      /**
       * Staining procedure used in the specimen preparation.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The staining  material.
       */
      material?: string;
      /**
       * Foreign key relationship to the EM SPECIMEN category
       */
      specimen_id?: string;
      /**
       * type of staining
       */
      type?: "NEGATIVE" | "NONE" | "POSITIVE";
    },
    ...{
      /**
       * Staining procedure used in the specimen preparation.
       */
      details?: string;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The staining  material.
       */
      material?: string;
      /**
       * Foreign key relationship to the EM SPECIMEN category
       */
      specimen_id?: string;
      /**
       * type of staining
       */
      type?: "NEGATIVE" | "NONE" | "POSITIVE";
    }[]
  ];
  /**
   * @minItems 1
   */
  em_vitrification?: [
    {
      /**
       * The temperature (in kelvin) of the sample just prior to vitrification.
       */
      chamber_temperature?: number;
      /**
       * This is the name of the cryogen.
       */
      cryogen_name?:
        | "ETHANE"
        | "ETHANE-PROPANE"
        | "FREON 12"
        | "FREON 22"
        | "HELIUM"
        | "METHANE"
        | "NITROGEN"
        | "OTHER"
        | "PROPANE";
      /**
       * Any additional details relating to vitrification.
       */
      details?: string;
      /**
       * Relative humidity (%) of air surrounding the specimen just prior to
       * vitrification.
       */
      humidity?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The type of instrument used in the vitrification process.
       */
      instrument?:
        | "CRYOSOL VITROJET"
        | "EMS-002 RAPID IMMERSION FREEZER"
        | "FEI VITROBOT MARK I"
        | "FEI VITROBOT MARK II"
        | "FEI VITROBOT MARK III"
        | "FEI VITROBOT MARK IV"
        | "GATAN CRYOPLUNGE 3"
        | "HOMEMADE PLUNGER"
        | "LEICA EM CPC"
        | "LEICA EM GP"
        | "LEICA KF80"
        | "LEICA PLUNGER"
        | "REICHERT-JUNG PLUNGER"
        | "SPOTITON"
        | "SPT LABTECH CHAMELEON"
        | "ZEISS PLUNGE FREEZER CRYOBOX";
      /**
       * The procedure for vitrification.
       */
      method?: string;
      /**
       * This data item is a pointer to _em_specimen.id
       */
      specimen_id: string;
      /**
       * The vitrification temperature (in kelvin), e.g.,
       *   temperature of the plunge instrument cryogen bath.
       */
      temp?: number;
      /**
       * The length of time after an event effecting the sample that
       *  vitrification was induced and a description of the event.
       */
      time_resolved_state?: string;
    },
    ...{
      /**
       * The temperature (in kelvin) of the sample just prior to vitrification.
       */
      chamber_temperature?: number;
      /**
       * This is the name of the cryogen.
       */
      cryogen_name?:
        | "ETHANE"
        | "ETHANE-PROPANE"
        | "FREON 12"
        | "FREON 22"
        | "HELIUM"
        | "METHANE"
        | "NITROGEN"
        | "OTHER"
        | "PROPANE";
      /**
       * Any additional details relating to vitrification.
       */
      details?: string;
      /**
       * Relative humidity (%) of air surrounding the specimen just prior to
       * vitrification.
       */
      humidity?: number;
      /**
       * PRIMARY KEY
       */
      id: string;
      /**
       * The type of instrument used in the vitrification process.
       */
      instrument?:
        | "CRYOSOL VITROJET"
        | "EMS-002 RAPID IMMERSION FREEZER"
        | "FEI VITROBOT MARK I"
        | "FEI VITROBOT MARK II"
        | "FEI VITROBOT MARK III"
        | "FEI VITROBOT MARK IV"
        | "GATAN CRYOPLUNGE 3"
        | "HOMEMADE PLUNGER"
        | "LEICA EM CPC"
        | "LEICA EM GP"
        | "LEICA KF80"
        | "LEICA PLUNGER"
        | "REICHERT-JUNG PLUNGER"
        | "SPOTITON"
        | "SPT LABTECH CHAMELEON"
        | "ZEISS PLUNGE FREEZER CRYOBOX";
      /**
       * The procedure for vitrification.
       */
      method?: string;
      /**
       * This data item is a pointer to _em_specimen.id
       */
      specimen_id: string;
      /**
       * The vitrification temperature (in kelvin), e.g.,
       *   temperature of the plunge instrument cryogen bath.
       */
      temp?: number;
      /**
       * The length of time after an event effecting the sample that
       *  vitrification was induced and a description of the event.
       */
      time_resolved_state?: string;
    }[]
  ];
  entry?: {
    /**
     * The value of _entry.id identifies the data block.
     *
     *  Note that this item need not be a number; it can be any unique
     *  identifier.
     */
    id: string;
    /**
     * An identifier for the model collection associated with the entry.
     */
    ma_collection_id?: string;
  };
  /**
   * @minItems 1
   */
  exptl?: [
    {
      /**
       * The total number of crystals used in the  measurement of
       *  intensities.
       */
      crystals_number?: number;
      /**
       * Any special information about the experimental work prior to the
       *  intensity measurement. See also _exptl_crystal.preparation.
       */
      details?: string;
      /**
       * The method used in the experiment.
       */
      method:
        | "ELECTRON CRYSTALLOGRAPHY"
        | "ELECTRON MICROSCOPY"
        | "EPR"
        | "FIBER DIFFRACTION"
        | "FLUORESCENCE TRANSFER"
        | "INFRARED SPECTROSCOPY"
        | "NEUTRON DIFFRACTION"
        | "POWDER DIFFRACTION"
        | "SOLID-STATE NMR"
        | "SOLUTION NMR"
        | "SOLUTION SCATTERING"
        | "THEORETICAL MODEL"
        | "X-RAY DIFFRACTION";
      /**
       * A description of special aspects of the experimental method.
       */
      method_details?: string;
    },
    ...{
      /**
       * The total number of crystals used in the  measurement of
       *  intensities.
       */
      crystals_number?: number;
      /**
       * Any special information about the experimental work prior to the
       *  intensity measurement. See also _exptl_crystal.preparation.
       */
      details?: string;
      /**
       * The method used in the experiment.
       */
      method:
        | "ELECTRON CRYSTALLOGRAPHY"
        | "ELECTRON MICROSCOPY"
        | "EPR"
        | "FIBER DIFFRACTION"
        | "FLUORESCENCE TRANSFER"
        | "INFRARED SPECTROSCOPY"
        | "NEUTRON DIFFRACTION"
        | "POWDER DIFFRACTION"
        | "SOLID-STATE NMR"
        | "SOLUTION NMR"
        | "SOLUTION SCATTERING"
        | "THEORETICAL MODEL"
        | "X-RAY DIFFRACTION";
      /**
       * A description of special aspects of the experimental method.
       */
      method_details?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  exptl_crystal?: [
    {
      /**
       * The colour of the crystal.
       */
      colour?: string;
      /**
       * The density of the crystal, expressed as the ratio of the
       *  volume of the asymmetric unit to the molecular mass of a
       *  monomer of the structure, in units of angstroms^3^ per dalton.
       *
       *  Ref: Matthews, B. W. (1968). J. Mol. Biol. 33, 491-497.
       */
      density_Matthews?: number;
      /**
       * Density values measured using standard chemical and physical
       *  methods. The units are megagrams per cubic metre (grams per
       *  cubic centimetre).
       */
      density_meas?: number;
      /**
       * Density value P calculated from the crystal cell and contents,
       *  expressed as per cent solvent.
       *
       *  P = 1 - (1.23 N MMass) / V
       *
       *  N     = the number of molecules in the unit cell
       *  MMass = the molecular mass of each molecule (gm/mole)
       *  V     = the volume of the unit cell (A^3^)
       *  1.23  = a conversion factor evaluated as:
       *
       *          (0.74 cm^3^/g) (10^24^ A^3^/cm^3^)
       *          --------------------------------------
       *               (6.02*10^23^) molecules/mole
       *
       *          where 0.74 is an assumed value for the partial specific
       *          volume of the molecule
       */
      density_percent_sol?: number;
      /**
       * A description of the quality and habit of the crystal.
       *  The crystal dimensions should not normally be reported here;
       *  use instead the specific items in the EXPTL_CRYSTAL category
       *  relating to size for the gross dimensions of the crystal and
       *  data items in the EXPTL_CRYSTAL_FACE category to describe the
       *  relationship between individual faces.
       */
      description?: string;
      /**
       * The value of _exptl_crystal.id must uniquely identify a record in
       *  the EXPTL_CRYSTAL list.
       *
       *  Note that this item need not be a number; it can be any unique
       *  identifier.
       */
      id: string;
      /**
       * Isotropic approximation of the distribution of mis-orientation angles
       * specified in degrees of all the mosaic domain blocks in the crystal,
       * represented as a standard deviation. Here, a mosaic block is a set of
       * contiguous unit cells assumed to be perfectly aligned. Lower mosaicity
       * indicates better ordered crystals. See for example:
       *
       * Nave, C. (1998). Acta Cryst. D54, 848-853.
       *
       * Note that many software packages estimate the mosaic rotation distribution
       * differently and may combine several physical properties of the experiment
       * into a single mosaic term. This term will help fit the modeled spots
       * to the observed spots without necessarily being directly related to the
       * physics of the crystal itself.
       */
      pdbx_mosaicity?: number;
      /**
       * The uncertainty in the mosaicity estimate for the crystal.
       */
      pdbx_mosaicity_esd?: number;
      /**
       * Details of crystal growth and preparation of the crystal (e.g.
       *  mounting) prior to the intensity measurements.
       */
      preparation?: string;
    },
    ...{
      /**
       * The colour of the crystal.
       */
      colour?: string;
      /**
       * The density of the crystal, expressed as the ratio of the
       *  volume of the asymmetric unit to the molecular mass of a
       *  monomer of the structure, in units of angstroms^3^ per dalton.
       *
       *  Ref: Matthews, B. W. (1968). J. Mol. Biol. 33, 491-497.
       */
      density_Matthews?: number;
      /**
       * Density values measured using standard chemical and physical
       *  methods. The units are megagrams per cubic metre (grams per
       *  cubic centimetre).
       */
      density_meas?: number;
      /**
       * Density value P calculated from the crystal cell and contents,
       *  expressed as per cent solvent.
       *
       *  P = 1 - (1.23 N MMass) / V
       *
       *  N     = the number of molecules in the unit cell
       *  MMass = the molecular mass of each molecule (gm/mole)
       *  V     = the volume of the unit cell (A^3^)
       *  1.23  = a conversion factor evaluated as:
       *
       *          (0.74 cm^3^/g) (10^24^ A^3^/cm^3^)
       *          --------------------------------------
       *               (6.02*10^23^) molecules/mole
       *
       *          where 0.74 is an assumed value for the partial specific
       *          volume of the molecule
       */
      density_percent_sol?: number;
      /**
       * A description of the quality and habit of the crystal.
       *  The crystal dimensions should not normally be reported here;
       *  use instead the specific items in the EXPTL_CRYSTAL category
       *  relating to size for the gross dimensions of the crystal and
       *  data items in the EXPTL_CRYSTAL_FACE category to describe the
       *  relationship between individual faces.
       */
      description?: string;
      /**
       * The value of _exptl_crystal.id must uniquely identify a record in
       *  the EXPTL_CRYSTAL list.
       *
       *  Note that this item need not be a number; it can be any unique
       *  identifier.
       */
      id: string;
      /**
       * Isotropic approximation of the distribution of mis-orientation angles
       * specified in degrees of all the mosaic domain blocks in the crystal,
       * represented as a standard deviation. Here, a mosaic block is a set of
       * contiguous unit cells assumed to be perfectly aligned. Lower mosaicity
       * indicates better ordered crystals. See for example:
       *
       * Nave, C. (1998). Acta Cryst. D54, 848-853.
       *
       * Note that many software packages estimate the mosaic rotation distribution
       * differently and may combine several physical properties of the experiment
       * into a single mosaic term. This term will help fit the modeled spots
       * to the observed spots without necessarily being directly related to the
       * physics of the crystal itself.
       */
      pdbx_mosaicity?: number;
      /**
       * The uncertainty in the mosaicity estimate for the crystal.
       */
      pdbx_mosaicity_esd?: number;
      /**
       * Details of crystal growth and preparation of the crystal (e.g.
       *  mounting) prior to the intensity measurements.
       */
      preparation?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  exptl_crystal_grow?: [
    {
      /**
       * This data item is a pointer to _exptl_crystal.id in the
       *  EXPTL_CRYSTAL category.
       */
      crystal_id: string;
      /**
       * A description of special aspects of the crystal growth.
       */
      details?: string;
      /**
       * The method used to grow the crystals.
       */
      method?: string;
      /**
       * The pH at which the crystal was grown. If more than one pH was
       *  employed during the crystallization process, the final pH should
       *  be noted here and the protocol involving multiple pH values
       *  should be described in _exptl_crystal_grow.details.
       */
      pH?: number;
      /**
       * Text description of crystal growth procedure.
       */
      pdbx_details?: string;
      /**
       * The range of pH values at which the crystal was grown.   Used when
       *  a point estimate of pH is not appropriate.
       */
      pdbx_pH_range?: string;
      /**
       * The temperature in kelvins at which the crystal was grown.
       *  If more than one temperature was employed during the
       *  crystallization process, the final temperature should be noted
       *  here and the protocol  involving multiple temperatures should be
       *  described in _exptl_crystal_grow.details.
       */
      temp?: number;
      /**
       * A description of special aspects of temperature control during
       *  crystal growth.
       */
      temp_details?: string;
    },
    ...{
      /**
       * This data item is a pointer to _exptl_crystal.id in the
       *  EXPTL_CRYSTAL category.
       */
      crystal_id: string;
      /**
       * A description of special aspects of the crystal growth.
       */
      details?: string;
      /**
       * The method used to grow the crystals.
       */
      method?: string;
      /**
       * The pH at which the crystal was grown. If more than one pH was
       *  employed during the crystallization process, the final pH should
       *  be noted here and the protocol involving multiple pH values
       *  should be described in _exptl_crystal_grow.details.
       */
      pH?: number;
      /**
       * Text description of crystal growth procedure.
       */
      pdbx_details?: string;
      /**
       * The range of pH values at which the crystal was grown.   Used when
       *  a point estimate of pH is not appropriate.
       */
      pdbx_pH_range?: string;
      /**
       * The temperature in kelvins at which the crystal was grown.
       *  If more than one temperature was employed during the
       *  crystallization process, the final temperature should be noted
       *  here and the protocol  involving multiple temperatures should be
       *  described in _exptl_crystal_grow.details.
       */
      temp?: number;
      /**
       * A description of special aspects of temperature control during
       *  crystal growth.
       */
      temp_details?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  ma_data?: [
    {
      /**
       * The type of data held in the dataset.
       */
      content_type?:
        | "coevolution MSA"
        | "input structure"
        | "model coordinates"
        | "other"
        | "polymeric template library"
        | "reference database"
        | "spatial restraints"
        | "target"
        | "target-template alignment"
        | "template structure";
      /**
       * Details for other content types.
       */
      content_type_other_details?: string;
      /**
       * A unique identifier for the data.
       */
      id: number;
      /**
       * An author-given name for the content held in the dataset.
       */
      name?: string;
    },
    ...{
      /**
       * The type of data held in the dataset.
       */
      content_type?:
        | "coevolution MSA"
        | "input structure"
        | "model coordinates"
        | "other"
        | "polymeric template library"
        | "reference database"
        | "spatial restraints"
        | "target"
        | "target-template alignment"
        | "template structure";
      /**
       * Details for other content types.
       */
      content_type_other_details?: string;
      /**
       * A unique identifier for the data.
       */
      id: number;
      /**
       * An author-given name for the content held in the dataset.
       */
      name?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_SG_project?: [
    {
      /**
       * The value identifies the full name of center.
       */
      full_name_of_center?:
        | "Accelerated Technologies Center for Gene to 3D Structure"
        | "Assembly, Dynamics and Evolution of Cell-Cell and Cell-Matrix Adhesions"
        | "Atoms-to-Animals: The Immune Function Network"
        | "Bacterial targets at IGS-CNRS, France"
        | "Berkeley Structural Genomics Center"
        | "Center for Eukaryotic Structural Genomics"
        | "Center for High-Throughput Structural Biology"
        | "Center for Membrane Proteins of Infectious Diseases"
        | "Center for Structural Biology of Infectious Diseases"
        | "Center for Structural Genomics of Infectious Diseases"
        | "Center for Structures of Membrane Proteins"
        | "Center for the X-ray Structure Determination of Human Transporters"
        | "Chaperone-Enabled Studies of Epigenetic Regulation Enzymes"
        | "Enzyme Discovery for Natural Product Biosynthesis"
        | "GPCR Network"
        | "Integrated Center for Structure and Function Innovation"
        | "Israel Structural Proteomics Center"
        | "Joint Center for Structural Genomics"
        | "Marseilles Structural Genomics Program @ AFMB"
        | "Medical Structural Genomics of Pathogenic Protozoa"
        | "Membrane Protein Structural Biology Consortium"
        | "Membrane Protein Structures by Solution NMR"
        | "Midwest Center for Macromolecular Research"
        | "Midwest Center for Structural Genomics"
        | "Mitochondrial Protein Partnership"
        | "Montreal-Kingston Bacterial Structural Genomics Initiative"
        | "Mycobacterium Tuberculosis Structural Proteomics Project"
        | "New York Consortium on Membrane Protein Structure"
        | "New York SGX Research Center for Structural Genomics"
        | "New York Structural GenomiX Research Consortium"
        | "New York Structural Genomics Research Consortium"
        | "Northeast Structural Genomics Consortium"
        | "Nucleocytoplasmic Transport: a Target for Cellular Control"
        | "Ontario Centre for Structural Proteomics"
        | "Oxford Protein Production Facility"
        | "Paris-Sud Yeast Structural Genomics"
        | "Partnership for Nuclear Receptor Signaling Code Biology"
        | "Partnership for Stem Cell Biology"
        | "Partnership for T-Cell Biology"
        | "Program for the Characterization of Secreted Effector Proteins"
        | "Protein Structure Factory"
        | "RIKEN Structural Genomics/Proteomics Initiative"
        | "Scottish Structural Proteomics Facility"
        | "Seattle Structural Genomics Center for Infectious Disease"
        | "South Africa Structural Targets Annotation Database"
        | "Southeast Collaboratory for Structural Genomics"
        | "Structural Genomics Consortium"
        | "Structural Genomics Consortium for Research on Gene Expression"
        | "Structural Genomics of Pathogenic Protozoa Consortium"
        | "Structural Proteomics in Europe"
        | "Structural Proteomics in Europe 2"
        | "Structure 2 Function Project"
        | "Structure, Dynamics and Activation Mechanisms of Chemokine Receptors"
        | "Structure-Function Analysis of Polymorphic CDI Toxin-Immunity Protein Complexes"
        | "Structure-Function Studies of Tight Junction Membrane Proteins"
        | "Structures of Mtb Proteins Conferring Susceptibility to Known Mtb Inhibitors"
        | "TB Structural Genomics Consortium"
        | "Transcontinental EM Initiative for Membrane Protein Structure"
        | "Transmembrane Protein Center";
      /**
       * A unique integer identifier for this center
       */
      id: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
      /**
       * The value identifies the full name of center.
       */
      initial_of_center?:
        | "ATCG3D"
        | "BIGS"
        | "BSGC"
        | "BSGI"
        | "CEBS"
        | "CELLMAT"
        | "CESG"
        | "CHSAM"
        | "CHTSB"
        | "CSBID"
        | "CSGID"
        | "CSMP"
        | "GPCR"
        | "IFN"
        | "ISFI"
        | "ISPC"
        | "JCSG"
        | "MCMR"
        | "MCSG"
        | "MPID"
        | "MPP"
        | "MPSBC"
        | "MPSbyNMR"
        | "MSGP"
        | "MSGPP"
        | "MTBI"
        | "NESG"
        | "NHRs"
        | "NPCXstals"
        | "NYCOMPS"
        | "NYSGRC"
        | "NYSGXRC"
        | "NatPro"
        | "OCSP"
        | "OPPF"
        | "PCSEP"
        | "PSF"
        | "RSGI"
        | "S2F"
        | "SASTAD"
        | "SECSG"
        | "SGC"
        | "SGCGES"
        | "SGPP"
        | "SPINE"
        | "SPINE-2"
        | "SSGCID"
        | "SSPF"
        | "STEMCELL"
        | "TBSGC"
        | "TCELL"
        | "TEMIMPS"
        | "TJMP"
        | "TMPC"
        | "TransportPDB"
        | "UC4CDI"
        | "XMTB"
        | "YSG";
      /**
       * The value identifies the Structural Genomics project.
       */
      project_name?:
        | "Enzyme Function Initiative"
        | "NIAID, National Institute of Allergy and Infectious Diseases"
        | "NPPSFA, National Project on Protein Structural and Functional Analyses"
        | "PSI, Protein Structure Initiative"
        | "PSI:Biology";
    },
    ...{
      /**
       * The value identifies the full name of center.
       */
      full_name_of_center?:
        | "Accelerated Technologies Center for Gene to 3D Structure"
        | "Assembly, Dynamics and Evolution of Cell-Cell and Cell-Matrix Adhesions"
        | "Atoms-to-Animals: The Immune Function Network"
        | "Bacterial targets at IGS-CNRS, France"
        | "Berkeley Structural Genomics Center"
        | "Center for Eukaryotic Structural Genomics"
        | "Center for High-Throughput Structural Biology"
        | "Center for Membrane Proteins of Infectious Diseases"
        | "Center for Structural Biology of Infectious Diseases"
        | "Center for Structural Genomics of Infectious Diseases"
        | "Center for Structures of Membrane Proteins"
        | "Center for the X-ray Structure Determination of Human Transporters"
        | "Chaperone-Enabled Studies of Epigenetic Regulation Enzymes"
        | "Enzyme Discovery for Natural Product Biosynthesis"
        | "GPCR Network"
        | "Integrated Center for Structure and Function Innovation"
        | "Israel Structural Proteomics Center"
        | "Joint Center for Structural Genomics"
        | "Marseilles Structural Genomics Program @ AFMB"
        | "Medical Structural Genomics of Pathogenic Protozoa"
        | "Membrane Protein Structural Biology Consortium"
        | "Membrane Protein Structures by Solution NMR"
        | "Midwest Center for Macromolecular Research"
        | "Midwest Center for Structural Genomics"
        | "Mitochondrial Protein Partnership"
        | "Montreal-Kingston Bacterial Structural Genomics Initiative"
        | "Mycobacterium Tuberculosis Structural Proteomics Project"
        | "New York Consortium on Membrane Protein Structure"
        | "New York SGX Research Center for Structural Genomics"
        | "New York Structural GenomiX Research Consortium"
        | "New York Structural Genomics Research Consortium"
        | "Northeast Structural Genomics Consortium"
        | "Nucleocytoplasmic Transport: a Target for Cellular Control"
        | "Ontario Centre for Structural Proteomics"
        | "Oxford Protein Production Facility"
        | "Paris-Sud Yeast Structural Genomics"
        | "Partnership for Nuclear Receptor Signaling Code Biology"
        | "Partnership for Stem Cell Biology"
        | "Partnership for T-Cell Biology"
        | "Program for the Characterization of Secreted Effector Proteins"
        | "Protein Structure Factory"
        | "RIKEN Structural Genomics/Proteomics Initiative"
        | "Scottish Structural Proteomics Facility"
        | "Seattle Structural Genomics Center for Infectious Disease"
        | "South Africa Structural Targets Annotation Database"
        | "Southeast Collaboratory for Structural Genomics"
        | "Structural Genomics Consortium"
        | "Structural Genomics Consortium for Research on Gene Expression"
        | "Structural Genomics of Pathogenic Protozoa Consortium"
        | "Structural Proteomics in Europe"
        | "Structural Proteomics in Europe 2"
        | "Structure 2 Function Project"
        | "Structure, Dynamics and Activation Mechanisms of Chemokine Receptors"
        | "Structure-Function Analysis of Polymorphic CDI Toxin-Immunity Protein Complexes"
        | "Structure-Function Studies of Tight Junction Membrane Proteins"
        | "Structures of Mtb Proteins Conferring Susceptibility to Known Mtb Inhibitors"
        | "TB Structural Genomics Consortium"
        | "Transcontinental EM Initiative for Membrane Protein Structure"
        | "Transmembrane Protein Center";
      /**
       * A unique integer identifier for this center
       */
      id: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
      /**
       * The value identifies the full name of center.
       */
      initial_of_center?:
        | "ATCG3D"
        | "BIGS"
        | "BSGC"
        | "BSGI"
        | "CEBS"
        | "CELLMAT"
        | "CESG"
        | "CHSAM"
        | "CHTSB"
        | "CSBID"
        | "CSGID"
        | "CSMP"
        | "GPCR"
        | "IFN"
        | "ISFI"
        | "ISPC"
        | "JCSG"
        | "MCMR"
        | "MCSG"
        | "MPID"
        | "MPP"
        | "MPSBC"
        | "MPSbyNMR"
        | "MSGP"
        | "MSGPP"
        | "MTBI"
        | "NESG"
        | "NHRs"
        | "NPCXstals"
        | "NYCOMPS"
        | "NYSGRC"
        | "NYSGXRC"
        | "NatPro"
        | "OCSP"
        | "OPPF"
        | "PCSEP"
        | "PSF"
        | "RSGI"
        | "S2F"
        | "SASTAD"
        | "SECSG"
        | "SGC"
        | "SGCGES"
        | "SGPP"
        | "SPINE"
        | "SPINE-2"
        | "SSGCID"
        | "SSPF"
        | "STEMCELL"
        | "TBSGC"
        | "TCELL"
        | "TEMIMPS"
        | "TJMP"
        | "TMPC"
        | "TransportPDB"
        | "UC4CDI"
        | "XMTB"
        | "YSG";
      /**
       * The value identifies the Structural Genomics project.
       */
      project_name?:
        | "Enzyme Function Initiative"
        | "NIAID, National Institute of Allergy and Infectious Diseases"
        | "NPPSFA, National Project on Protein Structural and Functional Analyses"
        | "PSI, Protein Structure Initiative"
        | "PSI:Biology";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_audit_revision_category?: [
    {
      /**
       * The category updated in the pdbx_audit_revision_category record.
       */
      category?: string;
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * A unique identifier for the pdbx_audit_revision_category record.
       */
      ordinal: number;
      /**
       * A pointer to  _pdbx_audit_revision_history.ordinal
       */
      revision_ordinal: number;
    },
    ...{
      /**
       * The category updated in the pdbx_audit_revision_category record.
       */
      category?: string;
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * A unique identifier for the pdbx_audit_revision_category record.
       */
      ordinal: number;
      /**
       * A pointer to  _pdbx_audit_revision_history.ordinal
       */
      revision_ordinal: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_audit_revision_details?: [
    {
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * Additional details describing the revision.
       */
      description?: string;
      /**
       * Further details describing the revision.
       */
      details?: string;
      /**
       * A unique identifier for the pdbx_audit_revision_details record.
       */
      ordinal: number;
      /**
       * The provider of the revision.
       */
      provider?: "author" | "repository";
      /**
       * A pointer to  _pdbx_audit_revision_history.ordinal
       */
      revision_ordinal: number;
      /**
       * A type classification of the revision
       */
      type?:
        | "Coordinate replacement"
        | "Data added"
        | "Data removed"
        | "Data updated"
        | "Initial release"
        | "Obsolete"
        | "Remediation";
    },
    ...{
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * Additional details describing the revision.
       */
      description?: string;
      /**
       * Further details describing the revision.
       */
      details?: string;
      /**
       * A unique identifier for the pdbx_audit_revision_details record.
       */
      ordinal: number;
      /**
       * The provider of the revision.
       */
      provider?: "author" | "repository";
      /**
       * A pointer to  _pdbx_audit_revision_history.ordinal
       */
      revision_ordinal: number;
      /**
       * A type classification of the revision
       */
      type?:
        | "Coordinate replacement"
        | "Data added"
        | "Data removed"
        | "Data updated"
        | "Initial release"
        | "Obsolete"
        | "Remediation";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_audit_revision_group?: [
    {
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * The collection of categories updated with this revision.
       */
      group?:
        | "Advisory"
        | "Atomic model"
        | "Author supporting evidence"
        | "Data collection"
        | "Data processing"
        | "Database references"
        | "Derived calculations"
        | "Experimental data"
        | "Experimental preparation"
        | "Experimental summary"
        | "Non-polymer description"
        | "Other"
        | "Polymer sequence"
        | "Refinement description"
        | "Source and taxonomy"
        | "Structure summary"
        | "Version format compliance";
      /**
       * A unique identifier for the pdbx_audit_revision_group record.
       */
      ordinal: number;
      /**
       * A pointer to  _pdbx_audit_revision_history.ordinal
       */
      revision_ordinal: number;
    },
    ...{
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * The collection of categories updated with this revision.
       */
      group?:
        | "Advisory"
        | "Atomic model"
        | "Author supporting evidence"
        | "Data collection"
        | "Data processing"
        | "Database references"
        | "Derived calculations"
        | "Experimental data"
        | "Experimental preparation"
        | "Experimental summary"
        | "Non-polymer description"
        | "Other"
        | "Polymer sequence"
        | "Refinement description"
        | "Source and taxonomy"
        | "Structure summary"
        | "Version format compliance";
      /**
       * A unique identifier for the pdbx_audit_revision_group record.
       */
      ordinal: number;
      /**
       * A pointer to  _pdbx_audit_revision_history.ordinal
       */
      revision_ordinal: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_audit_revision_history?: [
    {
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * The major version number of deposition release.
       */
      major_revision?: number;
      /**
       * The minor version number of deposition release.
       */
      minor_revision?: number;
      /**
       * A unique identifier for the pdbx_audit_revision_history record.
       */
      ordinal: number;
      /**
       * The release date of the revision
       */
      revision_date?: string;
    },
    ...{
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * The major version number of deposition release.
       */
      major_revision?: number;
      /**
       * The minor version number of deposition release.
       */
      minor_revision?: number;
      /**
       * A unique identifier for the pdbx_audit_revision_history record.
       */
      ordinal: number;
      /**
       * The release date of the revision
       */
      revision_date?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_audit_revision_item?: [
    {
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * A high level explanation the author has provided for submitting a revision.
       */
      item?: string;
      /**
       * A unique identifier for the pdbx_audit_revision_item record.
       */
      ordinal: number;
      /**
       * A pointer to  _pdbx_audit_revision_history.ordinal
       */
      revision_ordinal: number;
    },
    ...{
      /**
       * The type of file that the pdbx_audit_revision_history record refers to.
       */
      data_content_type:
        | "Additional map"
        | "Chemical component"
        | "EM metadata"
        | "FSC"
        | "Half map"
        | "Image"
        | "Mask"
        | "NMR restraints"
        | "NMR shifts"
        | "Primary map"
        | "Structure factors"
        | "Structure model";
      /**
       * A high level explanation the author has provided for submitting a revision.
       */
      item?: string;
      /**
       * A unique identifier for the pdbx_audit_revision_item record.
       */
      ordinal: number;
      /**
       * A pointer to  _pdbx_audit_revision_history.ordinal
       */
      revision_ordinal: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_audit_support?: [
    {
      /**
       * The country/region providing the funding support for the entry.
       *  Funding information is optionally provided for entries after June 2016.
       */
      country?: string;
      /**
       * The name of the organization providing funding support for the
       *  entry. Funding information is optionally provided for entries
       *  after June 2016.
       */
      funding_organization?: string;
      /**
       * The grant number associated with this source of support.
       */
      grant_number?: string;
      /**
       * A unique sequential integer identifier for each source of support for this entry.
       */
      ordinal: number;
    },
    ...{
      /**
       * The country/region providing the funding support for the entry.
       *  Funding information is optionally provided for entries after June 2016.
       */
      country?: string;
      /**
       * The name of the organization providing funding support for the
       *  entry. Funding information is optionally provided for entries
       *  after June 2016.
       */
      funding_organization?: string;
      /**
       * The grant number associated with this source of support.
       */
      grant_number?: string;
      /**
       * A unique sequential integer identifier for each source of support for this entry.
       */
      ordinal: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_database_PDB_obs_spr?: [
    {
      /**
       * The date of replacement.
       */
      date?: string;
      /**
       * Details related to the replaced or replacing entry.
       */
      details?: string;
      /**
       * Identifier for the type of obsolete entry to be added to this entry.
       */
      id?: "OBSLTE" | "SPRSDE";
      /**
       * The new PDB identifier for the replaced entry.
       */
      pdb_id: string;
      /**
       * The PDB identifier for the replaced (OLD) entry/entries.
       */
      replace_pdb_id: string;
    },
    ...{
      /**
       * The date of replacement.
       */
      date?: string;
      /**
       * Details related to the replaced or replacing entry.
       */
      details?: string;
      /**
       * Identifier for the type of obsolete entry to be added to this entry.
       */
      id?: "OBSLTE" | "SPRSDE";
      /**
       * The new PDB identifier for the replaced entry.
       */
      pdb_id: string;
      /**
       * The PDB identifier for the replaced (OLD) entry/entries.
       */
      replace_pdb_id: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_database_related?: [
    {
      /**
       * The identifying content type of the related entry.
       */
      content_type:
        | "associated EM volume"
        | "associated NMR restraints"
        | "associated SAS data"
        | "associated structure factors"
        | "complete structure"
        | "consensus EM volume"
        | "derivative structure"
        | "ensemble"
        | "focused EM volume"
        | "minimized average structure"
        | "native structure"
        | "other"
        | "other EM volume"
        | "protein target sequence and/or protocol data"
        | "re-refinement"
        | "representative structure"
        | "split"
        | "unspecified";
      /**
       * The identifying code in the related database.
       */
      db_id: string;
      /**
       * The name of the database containing the related entry.
       */
      db_name: "BIOISIS" | "BMCD" | "BMRB" | "EMDB" | "NDB" | "PDB" | "PDB-Dev" | "SASBDB" | "TargetDB" | "TargetTrack";
      /**
       * A description of the related entry.
       */
      details?: string;
    },
    ...{
      /**
       * The identifying content type of the related entry.
       */
      content_type:
        | "associated EM volume"
        | "associated NMR restraints"
        | "associated SAS data"
        | "associated structure factors"
        | "complete structure"
        | "consensus EM volume"
        | "derivative structure"
        | "ensemble"
        | "focused EM volume"
        | "minimized average structure"
        | "native structure"
        | "other"
        | "other EM volume"
        | "protein target sequence and/or protocol data"
        | "re-refinement"
        | "representative structure"
        | "split"
        | "unspecified";
      /**
       * The identifying code in the related database.
       */
      db_id: string;
      /**
       * The name of the database containing the related entry.
       */
      db_name: "BIOISIS" | "BMCD" | "BMRB" | "EMDB" | "NDB" | "PDB" | "PDB-Dev" | "SASBDB" | "TargetDB" | "TargetTrack";
      /**
       * A description of the related entry.
       */
      details?: string;
    }[]
  ];
  pdbx_database_status?: {
    /**
     * This code indicates whether the entry belongs to
     *  Structural Genomics Project.
     */
    SG_entry?: "N" | "Y";
    /**
     * The site where the file was deposited.
     */
    deposit_site?: "BMRB" | "BNL" | "NDB" | "PDBC" | "PDBE" | "PDBJ" | "RCSB";
    /**
     * The methods development category in which this
     *  entry has been placed.
     */
    methods_development_category?: "CAPRI" | "CASD-NMR" | "CASP" | "D3R" | "FoldIt" | "GPCR Dock" | "RNA-Puzzles";
    /**
     * A flag indicating that the entry is compatible with the PDB format.
     *
     *  A value of 'N' indicates that the no PDB format data file is
     *  corresponding to this entry is available in the PDB archive.
     */
    pdb_format_compatible?: "N" | "Y";
    /**
     * The site where the file was deposited.
     */
    process_site?: "BNL" | "NDB" | "PDBC" | "PDBE" | "PDBJ" | "RCSB";
    /**
     * The date of initial deposition.  (The first message for
     *  deposition has been received.)
     */
    recvd_initial_deposition_date?: string;
    /**
     * Code for status of file.
     */
    status_code?:
      | "AUCO"
      | "AUTH"
      | "BIB"
      | "DEL"
      | "HOLD"
      | "HPUB"
      | "OBS"
      | "POLC"
      | "PROC"
      | "REFI"
      | "REL"
      | "REPL"
      | "REV"
      | "RMVD"
      | "TRSF"
      | "UPD"
      | "WAIT"
      | "WDRN";
    /**
     * Code for status of chemical shift data file.
     */
    status_code_cs?:
      | "AUCO"
      | "AUTH"
      | "HOLD"
      | "HPUB"
      | "OBS"
      | "POLC"
      | "PROC"
      | "REL"
      | "REPL"
      | "RMVD"
      | "WAIT"
      | "WDRN";
    /**
     * Code for status of NMR constraints file.
     */
    status_code_mr?:
      | "AUCO"
      | "AUTH"
      | "HOLD"
      | "HPUB"
      | "OBS"
      | "POLC"
      | "PROC"
      | "REL"
      | "REPL"
      | "RMVD"
      | "WAIT"
      | "WDRN";
    /**
     * Code for status of structure factor file.
     */
    status_code_sf?: "AUTH" | "HOLD" | "HPUB" | "OBS" | "POLC" | "PROC" | "REL" | "REPL" | "RMVD" | "WAIT" | "WDRN";
  };
  /**
   * @minItems 1
   */
  pdbx_deposit_group?: [
    {
      /**
       * A description of the contents of entries in the collection.
       */
      group_description?: string;
      /**
       * A unique identifier for a group of entries deposited as a collection.
       */
      group_id: string;
      /**
       * A title to describe the group of entries deposited in the collection.
       */
      group_title?: string;
      /**
       * Text to describe a grouping of entries in multiple collections
       */
      group_type?: "changed state" | "ground state" | "undefined";
    },
    ...{
      /**
       * A description of the contents of entries in the collection.
       */
      group_description?: string;
      /**
       * A unique identifier for a group of entries deposited as a collection.
       */
      group_id: string;
      /**
       * A title to describe the group of entries deposited in the collection.
       */
      group_title?: string;
      /**
       * Text to describe a grouping of entries in multiple collections
       */
      group_type?: "changed state" | "ground state" | "undefined";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_initial_refinement_model?: [
    {
      /**
       * This item identifies an accession code of the resource where the initial model
       *  is used
       */
      accession_code?: string;
      /**
       * A description of special aspects of the initial model
       */
      details?: string;
      entity_id_list?: string[];
      /**
       * A unique identifier for the starting model record.
       */
      id: number;
      /**
       * This item identifies the resource of initial model used for refinement
       */
      source_name?:
        | "AlphaFold"
        | "ITasser"
        | "InsightII"
        | "ModelArchive"
        | "Modeller"
        | "Other"
        | "PDB"
        | "PDB-Dev"
        | "PHYRE"
        | "Robetta"
        | "RoseTTAFold"
        | "SwissModel";
      /**
       * This item describes the type of the initial model was generated
       */
      type?: "experimental model" | "in silico model" | "integrative model" | "other";
    },
    ...{
      /**
       * This item identifies an accession code of the resource where the initial model
       *  is used
       */
      accession_code?: string;
      /**
       * A description of special aspects of the initial model
       */
      details?: string;
      entity_id_list?: string[];
      /**
       * A unique identifier for the starting model record.
       */
      id: number;
      /**
       * This item identifies the resource of initial model used for refinement
       */
      source_name?:
        | "AlphaFold"
        | "ITasser"
        | "InsightII"
        | "ModelArchive"
        | "Modeller"
        | "Other"
        | "PDB"
        | "PDB-Dev"
        | "PHYRE"
        | "Robetta"
        | "RoseTTAFold"
        | "SwissModel";
      /**
       * This item describes the type of the initial model was generated
       */
      type?: "experimental model" | "in silico model" | "integrative model" | "other";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_molecule_features?: [
    {
      /**
       * Broadly defines the function of the molecule.
       */
      class?:
        | "Antagonist"
        | "Anthelmintic"
        | "Antibiotic"
        | "Antibiotic, Anthelmintic"
        | "Antibiotic, Antimicrobial"
        | "Antibiotic, Antineoplastic"
        | "Anticancer"
        | "Anticoagulant"
        | "Anticoagulant, Antithrombotic"
        | "Antifungal"
        | "Antigen"
        | "Antiinflammatory"
        | "Antimicrobial"
        | "Antimicrobial, Antiparasitic, Antibiotic"
        | "Antimicrobial, Antiretroviral"
        | "Antimicrobial, Antitumor"
        | "Antineoplastic"
        | "Antiparasitic"
        | "Antiretroviral"
        | "Antithrombotic"
        | "Antitumor"
        | "Antiviral"
        | "CASPASE inhibitor"
        | "Chaperone binding"
        | "Drug delivery"
        | "Enzyme inhibitor"
        | "Glycan component"
        | "Growth factor"
        | "Immunosuppressant"
        | "Inducer"
        | "Inhibitor"
        | "Lantibiotic"
        | "Metabolism"
        | "Metal transport"
        | "Nutrient"
        | "Oxidation-reduction"
        | "Protein binding"
        | "Receptor"
        | "Substrate analog"
        | "Synthetic opioid"
        | "Thrombin inhibitor"
        | "Thrombin inhibitor, Trypsin inhibitor"
        | "Toxin"
        | "Transition state mimetic"
        | "Transport activator"
        | "Trypsin inhibitor"
        | "Unknown"
        | "Water retention";
      /**
       * Additional details describing the molecule.
       */
      details?: string;
      /**
       * A name of the molecule.
       */
      name?: string;
      /**
       * The value of _pdbx_molecule_features.prd_id is the accession code for this
       *  reference molecule.
       */
      prd_id: string;
      /**
       * Defines the structural classification of the molecule.
       */
      type?:
        | "Amino acid"
        | "Aminoglycoside"
        | "Ansamycin"
        | "Anthracycline"
        | "Anthraquinone"
        | "Chalkophore"
        | "Chalkophore, Polypeptide"
        | "Chromophore"
        | "Cyclic depsipeptide"
        | "Cyclic lipopeptide"
        | "Cyclic peptide"
        | "Glycopeptide"
        | "Heterocyclic"
        | "Imino sugar"
        | "Keto acid"
        | "Lipoglycopeptide"
        | "Lipopeptide"
        | "Macrolide"
        | "Non-polymer"
        | "Nucleoside"
        | "Oligopeptide"
        | "Oligosaccharide"
        | "Peptaibol"
        | "Peptide-like"
        | "Polycyclic"
        | "Polypeptide"
        | "Polysaccharide"
        | "Quinolone"
        | "Siderophore"
        | "Thiolactone"
        | "Thiopeptide"
        | "Unknown";
    },
    ...{
      /**
       * Broadly defines the function of the molecule.
       */
      class?:
        | "Antagonist"
        | "Anthelmintic"
        | "Antibiotic"
        | "Antibiotic, Anthelmintic"
        | "Antibiotic, Antimicrobial"
        | "Antibiotic, Antineoplastic"
        | "Anticancer"
        | "Anticoagulant"
        | "Anticoagulant, Antithrombotic"
        | "Antifungal"
        | "Antigen"
        | "Antiinflammatory"
        | "Antimicrobial"
        | "Antimicrobial, Antiparasitic, Antibiotic"
        | "Antimicrobial, Antiretroviral"
        | "Antimicrobial, Antitumor"
        | "Antineoplastic"
        | "Antiparasitic"
        | "Antiretroviral"
        | "Antithrombotic"
        | "Antitumor"
        | "Antiviral"
        | "CASPASE inhibitor"
        | "Chaperone binding"
        | "Drug delivery"
        | "Enzyme inhibitor"
        | "Glycan component"
        | "Growth factor"
        | "Immunosuppressant"
        | "Inducer"
        | "Inhibitor"
        | "Lantibiotic"
        | "Metabolism"
        | "Metal transport"
        | "Nutrient"
        | "Oxidation-reduction"
        | "Protein binding"
        | "Receptor"
        | "Substrate analog"
        | "Synthetic opioid"
        | "Thrombin inhibitor"
        | "Thrombin inhibitor, Trypsin inhibitor"
        | "Toxin"
        | "Transition state mimetic"
        | "Transport activator"
        | "Trypsin inhibitor"
        | "Unknown"
        | "Water retention";
      /**
       * Additional details describing the molecule.
       */
      details?: string;
      /**
       * A name of the molecule.
       */
      name?: string;
      /**
       * The value of _pdbx_molecule_features.prd_id is the accession code for this
       *  reference molecule.
       */
      prd_id: string;
      /**
       * Defines the structural classification of the molecule.
       */
      type?:
        | "Amino acid"
        | "Aminoglycoside"
        | "Ansamycin"
        | "Anthracycline"
        | "Anthraquinone"
        | "Chalkophore"
        | "Chalkophore, Polypeptide"
        | "Chromophore"
        | "Cyclic depsipeptide"
        | "Cyclic lipopeptide"
        | "Cyclic peptide"
        | "Glycopeptide"
        | "Heterocyclic"
        | "Imino sugar"
        | "Keto acid"
        | "Lipoglycopeptide"
        | "Lipopeptide"
        | "Macrolide"
        | "Non-polymer"
        | "Nucleoside"
        | "Oligopeptide"
        | "Oligosaccharide"
        | "Peptaibol"
        | "Peptide-like"
        | "Polycyclic"
        | "Polypeptide"
        | "Polysaccharide"
        | "Quinolone"
        | "Siderophore"
        | "Thiolactone"
        | "Thiopeptide"
        | "Unknown";
    }[]
  ];
  pdbx_nmr_details?: {
    /**
     * Additional details describing the NMR experiment.
     */
    text?: string;
  };
  pdbx_nmr_ensemble?: {
    /**
     * The average number of constraint violations on a per residue basis for
     *  the ensemble.
     */
    average_constraint_violations_per_residue?: number;
    /**
     * The average number of constraints per residue for the ensemble
     */
    average_constraints_per_residue?: number;
    /**
     * The average distance restraint violation for the ensemble.
     */
    average_distance_constraint_violation?: number;
    /**
     * The average torsion angle constraint violation for the ensemble.
     */
    average_torsion_angle_constraint_violation?: number;
    /**
     * By highlighting the appropriate choice(s), describe how the submitted
     * conformer (models) were selected.
     */
    conformer_selection_criteria?: string;
    /**
     * The total number of conformer (models) that were calculated in the final round.
     */
    conformers_calculated_total_number?: number;
    /**
     * The number of conformer (models) that are submitted for the ensemble.
     */
    conformers_submitted_total_number?: number;
    /**
     * Describe the method used to calculate the distance constraint violation statistics,
     *  i.e. are they calculated over all the distance constraints or calculated for
     *  violations only?
     */
    distance_constraint_violation_method?: string;
    /**
     * The maximum distance constraint violation for the ensemble.
     */
    maximum_distance_constraint_violation?: number;
    /**
     * The maximum lower distance constraint violation for the ensemble.
     */
    maximum_lower_distance_constraint_violation?: number;
    /**
     * The maximum torsion angle constraint violation for the ensemble.
     */
    maximum_torsion_angle_constraint_violation?: number;
    /**
     * The maximum upper distance constraint violation for the ensemble.
     */
    maximum_upper_distance_constraint_violation?: number;
    /**
     * The number of the conformer identified as most representative.
     */
    representative_conformer?: number;
    /**
     * This item describes the method used to calculate the torsion angle constraint violation statistics.
     * i.e. are the entered values based on all torsion angle or calculated for violations only?
     */
    torsion_angle_constraint_violation_method?: string;
  };
  /**
   * @minItems 1
   */
  pdbx_nmr_exptl?: [
    {
      /**
       * The number to identify the set of sample conditions.
       */
      conditions_id: string;
      /**
       * A numerical ID for each experiment.
       */
      experiment_id: string;
      /**
       * Physical state of the sample either anisotropic or isotropic.
       */
      sample_state?: "anisotropic" | "isotropic";
      /**
       * The solution_id from the Experimental Sample to identify the sample
       *  that these conditions refer to.
       *
       *  [Remember to save the entries here before returning to the
       *   Experimental Sample form]
       */
      solution_id: string;
      /**
       * Pointer to '_pdbx_nmr_spectrometer.spectrometer_id'
       */
      spectrometer_id?: number;
      /**
       * The type of NMR experiment.
       */
      type?: string;
    },
    ...{
      /**
       * The number to identify the set of sample conditions.
       */
      conditions_id: string;
      /**
       * A numerical ID for each experiment.
       */
      experiment_id: string;
      /**
       * Physical state of the sample either anisotropic or isotropic.
       */
      sample_state?: "anisotropic" | "isotropic";
      /**
       * The solution_id from the Experimental Sample to identify the sample
       *  that these conditions refer to.
       *
       *  [Remember to save the entries here before returning to the
       *   Experimental Sample form]
       */
      solution_id: string;
      /**
       * Pointer to '_pdbx_nmr_spectrometer.spectrometer_id'
       */
      spectrometer_id?: number;
      /**
       * The type of NMR experiment.
       */
      type?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_nmr_exptl_sample_conditions?: [
    {
      /**
       * The condition number as defined above.
       */
      conditions_id: string;
      /**
       * General details describing conditions of both the sample and the environment
       * during measurements.
       */
      details?: string;
      /**
       * The ionic strength at which the NMR data were collected -in lieu of
       *  this enter the concentration and identity of the salt in the sample.
       */
      ionic_strength?: string;
      /**
       * Estimate of the standard error for the value for the sample ionic strength.
       */
      ionic_strength_err?: number;
      /**
       * Units for the value of the sample condition ionic strength..
       */
      ionic_strength_units?: "M" | "Not defined" | "mM";
      /**
       * A descriptive label that uniquely identifies this set of sample conditions.
       */
      label?: string;
      /**
       * The pH at which the NMR data were collected.
       */
      pH?: string;
      /**
       * Estimate of the standard error for the value for the sample pH.
       */
      pH_err?: number;
      /**
       * Units for the value of the sample condition pH.
       */
      pH_units?: "Not defined" | "pD" | "pH" | "pH*";
      /**
       * The pressure at which NMR data were collected.
       */
      pressure?: string;
      /**
       * Estimate of the standard error for the value for the sample pressure.
       */
      pressure_err?: number;
      /**
       * The units of pressure at which NMR data were collected.
       */
      pressure_units?: string;
      /**
       * The temperature (in kelvin) at which NMR data were
       *  collected.
       */
      temperature?: string;
      /**
       * Estimate of the standard error for the value for the sample temperature.
       */
      temperature_err?: number;
      /**
       * Units for the value of the sample condition temperature.
       */
      temperature_units?: "C" | "K" | "Not defined";
    },
    ...{
      /**
       * The condition number as defined above.
       */
      conditions_id: string;
      /**
       * General details describing conditions of both the sample and the environment
       * during measurements.
       */
      details?: string;
      /**
       * The ionic strength at which the NMR data were collected -in lieu of
       *  this enter the concentration and identity of the salt in the sample.
       */
      ionic_strength?: string;
      /**
       * Estimate of the standard error for the value for the sample ionic strength.
       */
      ionic_strength_err?: number;
      /**
       * Units for the value of the sample condition ionic strength..
       */
      ionic_strength_units?: "M" | "Not defined" | "mM";
      /**
       * A descriptive label that uniquely identifies this set of sample conditions.
       */
      label?: string;
      /**
       * The pH at which the NMR data were collected.
       */
      pH?: string;
      /**
       * Estimate of the standard error for the value for the sample pH.
       */
      pH_err?: number;
      /**
       * Units for the value of the sample condition pH.
       */
      pH_units?: "Not defined" | "pD" | "pH" | "pH*";
      /**
       * The pressure at which NMR data were collected.
       */
      pressure?: string;
      /**
       * Estimate of the standard error for the value for the sample pressure.
       */
      pressure_err?: number;
      /**
       * The units of pressure at which NMR data were collected.
       */
      pressure_units?: string;
      /**
       * The temperature (in kelvin) at which NMR data were
       *  collected.
       */
      temperature?: string;
      /**
       * Estimate of the standard error for the value for the sample temperature.
       */
      temperature_err?: number;
      /**
       * Units for the value of the sample condition temperature.
       */
      temperature_units?: "C" | "K" | "Not defined";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_nmr_refine?: [
    {
      /**
       * Additional details about the NMR refinement.
       */
      details?: string;
      /**
       * The method used to determine the structure.
       */
      method?: string;
      /**
       * Pointer to _software.ordinal
       */
      software_ordinal: number;
    },
    ...{
      /**
       * Additional details about the NMR refinement.
       */
      details?: string;
      /**
       * The method used to determine the structure.
       */
      method?: string;
      /**
       * Pointer to _software.ordinal
       */
      software_ordinal: number;
    }[]
  ];
  pdbx_nmr_representative?: {
    /**
     * If a member of the ensemble has been selected as a representative
     *  structure, identify it by its model number.
     */
    conformer_id?: string;
    /**
     * By highlighting the appropriate choice(s), describe the criteria used to
     * select this structure as a representative structure, or if an average
     * structure has been calculated describe how this was done.
     */
    selection_criteria?: string;
  };
  /**
   * @minItems 1
   */
  pdbx_nmr_sample_details?: [
    {
      /**
       * A complete description of each NMR sample. Include the concentration
       * and concentration units for each component (include buffers, etc.). For each
       * component describe the isotopic composition, including the % labeling level,
       * if known.
       *
       * For example:
       * 1. Uniform (random) labeling with 15N: U-15N
       * 2. Uniform (random) labeling with 13C, 15N at known labeling
       *    levels: U-95% 13C;U-98% 15N
       * 3. Residue selective labeling: U-95% 15N-Thymine
       * 4. Site specific labeling: 95% 13C-Ala18,
       * 5. Natural abundance labeling in an otherwise uniformly labeled
       *    biomolecule is designated by NA: U-13C; NA-K,H
       */
      contents?: string;
      /**
       * Brief description of the sample providing additional information not captured by other items in the category.
       */
      details?: string;
      /**
       * A value that uniquely identifies this sample from the other samples listed
       * in the entry.
       */
      label?: string;
      /**
       * The name (number) of the sample.
       */
      solution_id: string;
      /**
       * The solvent system used for this sample.
       */
      solvent_system?: string;
      /**
       * A descriptive term for the sample that defines the general physical properties
       * of the sample.
       */
      type?:
        | "bicelle"
        | "emulsion"
        | "fiber"
        | "fibrous protein"
        | "filamentous virus"
        | "gel solid"
        | "gel solution"
        | "liposome"
        | "lyophilized powder"
        | "membrane"
        | "micelle"
        | "oriented membrane film"
        | "polycrystalline powder"
        | "reverse micelle"
        | "single crystal"
        | "solid"
        | "solution";
    },
    ...{
      /**
       * A complete description of each NMR sample. Include the concentration
       * and concentration units for each component (include buffers, etc.). For each
       * component describe the isotopic composition, including the % labeling level,
       * if known.
       *
       * For example:
       * 1. Uniform (random) labeling with 15N: U-15N
       * 2. Uniform (random) labeling with 13C, 15N at known labeling
       *    levels: U-95% 13C;U-98% 15N
       * 3. Residue selective labeling: U-95% 15N-Thymine
       * 4. Site specific labeling: 95% 13C-Ala18,
       * 5. Natural abundance labeling in an otherwise uniformly labeled
       *    biomolecule is designated by NA: U-13C; NA-K,H
       */
      contents?: string;
      /**
       * Brief description of the sample providing additional information not captured by other items in the category.
       */
      details?: string;
      /**
       * A value that uniquely identifies this sample from the other samples listed
       * in the entry.
       */
      label?: string;
      /**
       * The name (number) of the sample.
       */
      solution_id: string;
      /**
       * The solvent system used for this sample.
       */
      solvent_system?: string;
      /**
       * A descriptive term for the sample that defines the general physical properties
       * of the sample.
       */
      type?:
        | "bicelle"
        | "emulsion"
        | "fiber"
        | "fibrous protein"
        | "filamentous virus"
        | "gel solid"
        | "gel solution"
        | "liposome"
        | "lyophilized powder"
        | "membrane"
        | "micelle"
        | "oriented membrane film"
        | "polycrystalline powder"
        | "reverse micelle"
        | "single crystal"
        | "solid"
        | "solution";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_nmr_software?: [
    {
      /**
       * The name of the authors of the software used in this
       *  procedure.
       */
      authors?: string;
      /**
       * The purpose of the software.
       */
      classification?: string;
      /**
       * The name of the software used for the task.
       */
      name?: string;
      /**
       * An ordinal index for this category
       */
      ordinal: number;
      /**
       * The version of the software.
       */
      version?: string;
    },
    ...{
      /**
       * The name of the authors of the software used in this
       *  procedure.
       */
      authors?: string;
      /**
       * The purpose of the software.
       */
      classification?: string;
      /**
       * The name of the software used for the task.
       */
      name?: string;
      /**
       * An ordinal index for this category
       */
      ordinal: number;
      /**
       * The version of the software.
       */
      version?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_nmr_spectrometer?: [
    {
      /**
       * A text description of the NMR spectrometer.
       */
      details?: string;
      /**
       * The field strength in MHz of the spectrometer
       */
      field_strength?: number;
      /**
       * The name of the manufacturer of the spectrometer.
       */
      manufacturer?: string;
      /**
       * The model of the NMR spectrometer.
       */
      model?: string;
      /**
       * Assign a numerical ID to each instrument.
       */
      spectrometer_id: string;
      /**
       * Select the instrument manufacturer(s) and the model(s) of the NMR(s)
       * used for this work.
       */
      type?: string;
    },
    ...{
      /**
       * A text description of the NMR spectrometer.
       */
      details?: string;
      /**
       * The field strength in MHz of the spectrometer
       */
      field_strength?: number;
      /**
       * The name of the manufacturer of the spectrometer.
       */
      manufacturer?: string;
      /**
       * The model of the NMR spectrometer.
       */
      model?: string;
      /**
       * Assign a numerical ID to each instrument.
       */
      spectrometer_id: string;
      /**
       * Select the instrument manufacturer(s) and the model(s) of the NMR(s)
       * used for this work.
       */
      type?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_reflns_twin?: [
    {
      /**
       * The crystal identifier.  A reference to
       *  _exptl_crystal.id in category EXPTL_CRYSTAL.
       */
      crystal_id: string;
      /**
       * The diffraction data set identifier.  A reference to
       *  _diffrn.id in category DIFFRN.
       */
      diffrn_id: string;
      /**
       * An identifier for the twin domain.
       */
      domain_id?: string;
      /**
       * The twin fraction or twin factor represents a quantitative parameter for the
       * crystal twinning.  The value 0 represents no twinning, < 0.5 partial twinning,
       *  = 0.5 for perfect twinning.
       */
      fraction?: number;
      /**
       * The possible merohedral or hemihedral twinning operators for different
       * point groups are:
       *
       * True point group  	Twin operation  	hkl related to
       * 3                      	2 along a,b             h,-h-k,-l
       *                        	2 along a*,b*           h+k,-k,-l
       *                         2 along c               -h,-k,l
       * 4                       2 along a,b,a*,b*       h,-k,-l
       * 6                       2 along a,b,a*,b*       h,-h-k,-l
       * 321                     2 along a*,b*,c         -h,-k,l
       * 312                     2 along a,b,c           -h,-k,l
       * 23                      4 along a,b,c            k,-h,l
       *
       * References:
       *  Yeates, T.O. (1997) Methods in Enzymology 276, 344-358. Detecting and
       *  Overcoming Crystal Twinning.
       *
       *  and information from the following on-line sites:
       *
       *    CNS site http://cns.csb.yale.edu/v1.1/
       *    CCP4 site http://www.ccp4.ac.uk/dist/html/detwin.html
       *    SHELX site http://shelx.uni-ac.gwdg.de/~rherbst/twin.html
       */
      operator: string;
      /**
       * There are two types of twinning: merohedral or hemihedral
       *                                  non-merohedral or epitaxial
       *
       * For merohedral twinning the diffraction patterns from the different domains are
       * completely superimposable.   Hemihedral twinning is a special case of merohedral
       * twinning. It only involves two distinct domains.  Pseudo-merohedral twinning is
       * a subclass merohedral twinning in which lattice is coincidentally superimposable.
       *
       * In the case of non-merohedral or epitaxial twinning  the reciprocal
       * lattices do not superimpose exactly. In this case the  diffraction pattern
       * consists of two (or more) interpenetrating lattices, which can in principle
       * be separated.
       */
      type?: "epitaxial" | "hemihedral" | "merohedral" | "non-merohedral" | "pseudo-merohedral" | "tetartohedral";
    },
    ...{
      /**
       * The crystal identifier.  A reference to
       *  _exptl_crystal.id in category EXPTL_CRYSTAL.
       */
      crystal_id: string;
      /**
       * The diffraction data set identifier.  A reference to
       *  _diffrn.id in category DIFFRN.
       */
      diffrn_id: string;
      /**
       * An identifier for the twin domain.
       */
      domain_id?: string;
      /**
       * The twin fraction or twin factor represents a quantitative parameter for the
       * crystal twinning.  The value 0 represents no twinning, < 0.5 partial twinning,
       *  = 0.5 for perfect twinning.
       */
      fraction?: number;
      /**
       * The possible merohedral or hemihedral twinning operators for different
       * point groups are:
       *
       * True point group  	Twin operation  	hkl related to
       * 3                      	2 along a,b             h,-h-k,-l
       *                        	2 along a*,b*           h+k,-k,-l
       *                         2 along c               -h,-k,l
       * 4                       2 along a,b,a*,b*       h,-k,-l
       * 6                       2 along a,b,a*,b*       h,-h-k,-l
       * 321                     2 along a*,b*,c         -h,-k,l
       * 312                     2 along a,b,c           -h,-k,l
       * 23                      4 along a,b,c            k,-h,l
       *
       * References:
       *  Yeates, T.O. (1997) Methods in Enzymology 276, 344-358. Detecting and
       *  Overcoming Crystal Twinning.
       *
       *  and information from the following on-line sites:
       *
       *    CNS site http://cns.csb.yale.edu/v1.1/
       *    CCP4 site http://www.ccp4.ac.uk/dist/html/detwin.html
       *    SHELX site http://shelx.uni-ac.gwdg.de/~rherbst/twin.html
       */
      operator: string;
      /**
       * There are two types of twinning: merohedral or hemihedral
       *                                  non-merohedral or epitaxial
       *
       * For merohedral twinning the diffraction patterns from the different domains are
       * completely superimposable.   Hemihedral twinning is a special case of merohedral
       * twinning. It only involves two distinct domains.  Pseudo-merohedral twinning is
       * a subclass merohedral twinning in which lattice is coincidentally superimposable.
       *
       * In the case of non-merohedral or epitaxial twinning  the reciprocal
       * lattices do not superimpose exactly. In this case the  diffraction pattern
       * consists of two (or more) interpenetrating lattices, which can in principle
       * be separated.
       */
      type?: "epitaxial" | "hemihedral" | "merohedral" | "non-merohedral" | "pseudo-merohedral" | "tetartohedral";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_related_exp_data_set?: [
    {
      /**
       * A DOI reference to the related data set.
       */
      data_reference?: string;
      /**
       * The type of the experimenatal data set.
       */
      data_set_type?: string;
      /**
       * Additional details describing the content of the related data set and its application to
       *  the current investigation.
       */
      details?: string;
      /**
       * A DOI reference to the metadata decribing the related data set.
       */
      metadata_reference?: string;
    },
    ...{
      /**
       * A DOI reference to the related data set.
       */
      data_reference?: string;
      /**
       * The type of the experimenatal data set.
       */
      data_set_type?: string;
      /**
       * Additional details describing the content of the related data set and its application to
       *  the current investigation.
       */
      details?: string;
      /**
       * A DOI reference to the metadata decribing the related data set.
       */
      metadata_reference?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_serial_crystallography_data_reduction?: [
    {
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of frames collected
       *  in which the crystal was hit.
       */
      crystal_hits?: number;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of frames collected
       *  in which a droplet was hit.
       */
      droplet_hits?: number;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of data frames collected
       *  in which the sample was hit.
       */
      frame_hits?: number;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of data frames collected
       *  that contained a "hit" but failed to index.
       */
      frames_failed_index?: number;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of data frames collected
       *  that were indexed.
       */
      frames_indexed?: number;
      /**
       * The total number of data frames collected for this
       *  data set.
       */
      frames_total?: number;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of lattices indexed.
       */
      lattices_indexed?: number;
      /**
       * For experiments in which samples are provided in a
       *             continuous stream, the total number of crystal lattices
       *             that were merged in the final dataset.  Can be
       *             less than frames_indexed depending on filtering during merging or
       * 	    can be more than frames_indexed if there are multiple lattices.
       * 	    per frame.
       */
      lattices_merged?: number;
      /**
       * For FEL experiments, the number of pulse events in the dataset.
       */
      xfel_pulse_events?: number;
      /**
       * For FEL experiments, in which data collection was performed
       * 	       in batches, indicates which subset of the data collected
       *                were used in producing this dataset.
       */
      xfel_run_numbers?: string;
    },
    ...{
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of frames collected
       *  in which the crystal was hit.
       */
      crystal_hits?: number;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of frames collected
       *  in which a droplet was hit.
       */
      droplet_hits?: number;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of data frames collected
       *  in which the sample was hit.
       */
      frame_hits?: number;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of data frames collected
       *  that contained a "hit" but failed to index.
       */
      frames_failed_index?: number;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of data frames collected
       *  that were indexed.
       */
      frames_indexed?: number;
      /**
       * The total number of data frames collected for this
       *  data set.
       */
      frames_total?: number;
      /**
       * For experiments in which samples are provided in a
       *  continuous stream, the total number of lattices indexed.
       */
      lattices_indexed?: number;
      /**
       * For experiments in which samples are provided in a
       *             continuous stream, the total number of crystal lattices
       *             that were merged in the final dataset.  Can be
       *             less than frames_indexed depending on filtering during merging or
       * 	    can be more than frames_indexed if there are multiple lattices.
       * 	    per frame.
       */
      lattices_merged?: number;
      /**
       * For FEL experiments, the number of pulse events in the dataset.
       */
      xfel_pulse_events?: number;
      /**
       * For FEL experiments, in which data collection was performed
       * 	       in batches, indicates which subset of the data collected
       *                were used in producing this dataset.
       */
      xfel_run_numbers?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_serial_crystallography_measurement?: [
    {
      /**
       * The total number of hours required to measure this data set.
       */
      collection_time_total?: number;
      /**
       * The collimation or type of focusing optics applied to the radiation.
       */
      collimation?: string;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The focal spot size of the beam
       *  impinging on the sample (micrometres squared).
       */
      focal_spot_size?: number;
      /**
       * The photons per pulse measured in  (tera photons (10^(12)^)/pulse units).
       */
      photons_per_pulse?: number;
      /**
       * The average duration (femtoseconds)
       * 	       of the pulse energy measured at the sample.
       */
      pulse_duration?: number;
      /**
       * The energy/pulse of the X-ray pulse impacting the sample measured in microjoules.
       */
      pulse_energy?: number;
      /**
       * The photon energy of the X-ray pulse measured in KeV.
       */
      pulse_photon_energy?: number;
      /**
       * The distance from source to the sample along the optical axis (metres).
       */
      source_distance?: number;
      /**
       * The dimension of the source beam measured at the source (micrometres squared).
       */
      source_size?: number;
      /**
       * For FEL experiments, the pulse repetition rate measured in cycles per seconds.
       */
      xfel_pulse_repetition_rate?: number;
    },
    ...{
      /**
       * The total number of hours required to measure this data set.
       */
      collection_time_total?: number;
      /**
       * The collimation or type of focusing optics applied to the radiation.
       */
      collimation?: string;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The focal spot size of the beam
       *  impinging on the sample (micrometres squared).
       */
      focal_spot_size?: number;
      /**
       * The photons per pulse measured in  (tera photons (10^(12)^)/pulse units).
       */
      photons_per_pulse?: number;
      /**
       * The average duration (femtoseconds)
       * 	       of the pulse energy measured at the sample.
       */
      pulse_duration?: number;
      /**
       * The energy/pulse of the X-ray pulse impacting the sample measured in microjoules.
       */
      pulse_energy?: number;
      /**
       * The photon energy of the X-ray pulse measured in KeV.
       */
      pulse_photon_energy?: number;
      /**
       * The distance from source to the sample along the optical axis (metres).
       */
      source_distance?: number;
      /**
       * The dimension of the source beam measured at the source (micrometres squared).
       */
      source_size?: number;
      /**
       * For FEL experiments, the pulse repetition rate measured in cycles per seconds.
       */
      xfel_pulse_repetition_rate?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_serial_crystallography_sample_delivery?: [
    {
      /**
       * The description of the mechanism by which the specimen in placed in the path
       *  of the source.
       */
      description?: string;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The description of the mechanism by which the specimen in placed in the path
       *  of the source.
       */
      method?: "fixed target" | "injection";
    },
    ...{
      /**
       * The description of the mechanism by which the specimen in placed in the path
       *  of the source.
       */
      description?: string;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The description of the mechanism by which the specimen in placed in the path
       *  of the source.
       */
      method?: "fixed target" | "injection";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_serial_crystallography_sample_delivery_fixed_target?: [
    {
      /**
       * The number of crystals per dropplet or pore in fixed target
       */
      crystals_per_unit?: number;
      /**
       * For a fixed target sample, a description of sample preparation
       */
      description?: string;
      /**
       * Any details pertinent to the fixed sample target
       */
      details?: string;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * Device used to control movement of the fixed sample
       */
      motion_control?: string;
      /**
       * Method to prevent dehydration of sample
       */
      sample_dehydration_prevention?: string;
      /**
       * For a fixed target sample, mechanism to hold sample in the beam
       */
      sample_holding?: string;
      /**
       * The sample solution content and concentration
       */
      sample_solvent?: string;
      /**
       * Size of pore in grid supporting sample. Diameter or length in micrometres,
       *  e.g. pore diameter
       */
      sample_unit_size?: number;
      /**
       * Type of base holding the support
       */
      support_base?: string;
      /**
       * Velocity of sample horizontally relative to a perpendicular beam in millimetres/second
       */
      velocity_horizontal?: number;
      /**
       * Velocity of sample vertically relative to a perpendicular beam in millimetres/second
       */
      velocity_vertical?: number;
    },
    ...{
      /**
       * The number of crystals per dropplet or pore in fixed target
       */
      crystals_per_unit?: number;
      /**
       * For a fixed target sample, a description of sample preparation
       */
      description?: string;
      /**
       * Any details pertinent to the fixed sample target
       */
      details?: string;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * Device used to control movement of the fixed sample
       */
      motion_control?: string;
      /**
       * Method to prevent dehydration of sample
       */
      sample_dehydration_prevention?: string;
      /**
       * For a fixed target sample, mechanism to hold sample in the beam
       */
      sample_holding?: string;
      /**
       * The sample solution content and concentration
       */
      sample_solvent?: string;
      /**
       * Size of pore in grid supporting sample. Diameter or length in micrometres,
       *  e.g. pore diameter
       */
      sample_unit_size?: number;
      /**
       * Type of base holding the support
       */
      support_base?: string;
      /**
       * Velocity of sample horizontally relative to a perpendicular beam in millimetres/second
       */
      velocity_horizontal?: number;
      /**
       * Velocity of sample vertically relative to a perpendicular beam in millimetres/second
       */
      velocity_vertical?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_serial_crystallography_sample_delivery_injection?: [
    {
      /**
       * For continuous sample flow experiments, the carrier buffer used
       *  to move the sample into the beam. Should include protein
       *  concentration.
       */
      carrier_solvent?: string;
      /**
       * For continuous sample flow experiments, the concentration of
       *  crystals in the solution being injected.
       *
       *  The concentration is measured in million crystals/ml.
       */
      crystal_concentration?: number;
      /**
       * For continuous sample flow experiments, a description of the injector used
       *  to move the sample into the beam.
       */
      description?: string;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The size of filter in micrometres in filtering crystals
       */
      filter_size?: number;
      /**
       * For continuous sample flow experiments, the flow rate of
       *  solution being injected  measured in ul/min.
       */
      flow_rate?: number;
      /**
       * For continuous sample flow experiments, the diameter of the
       *  injector in micrometres.
       */
      injector_diameter?: number;
      /**
       * The type of nozzle to deliver and focus sample jet
       */
      injector_nozzle?: string;
      /**
       * For continuous sample flow experiments, the mean pressure
       *  in kilopascals at which the sample is injected into the beam.
       */
      injector_pressure?: number;
      /**
       * For continuous sample flow experiments, the temperature in
       *  Kelvins of the speciman injected. This may be different from
       *  the temperature of the sample.
       */
      injector_temperature?: number;
      /**
       * Diameter in micrometres of jet stream of sample delivery
       */
      jet_diameter?: number;
      /**
       * Sample deliver driving force, e.g. Gas, Electronic Potential
       */
      power_by?: string;
      /**
       * Details of crystal growth and preparation of the crystals
       */
      preparation?: string;
    },
    ...{
      /**
       * For continuous sample flow experiments, the carrier buffer used
       *  to move the sample into the beam. Should include protein
       *  concentration.
       */
      carrier_solvent?: string;
      /**
       * For continuous sample flow experiments, the concentration of
       *  crystals in the solution being injected.
       *
       *  The concentration is measured in million crystals/ml.
       */
      crystal_concentration?: number;
      /**
       * For continuous sample flow experiments, a description of the injector used
       *  to move the sample into the beam.
       */
      description?: string;
      /**
       * The data item is a pointer to _diffrn.id in the DIFFRN
       *  category.
       */
      diffrn_id: string;
      /**
       * The size of filter in micrometres in filtering crystals
       */
      filter_size?: number;
      /**
       * For continuous sample flow experiments, the flow rate of
       *  solution being injected  measured in ul/min.
       */
      flow_rate?: number;
      /**
       * For continuous sample flow experiments, the diameter of the
       *  injector in micrometres.
       */
      injector_diameter?: number;
      /**
       * The type of nozzle to deliver and focus sample jet
       */
      injector_nozzle?: string;
      /**
       * For continuous sample flow experiments, the mean pressure
       *  in kilopascals at which the sample is injected into the beam.
       */
      injector_pressure?: number;
      /**
       * For continuous sample flow experiments, the temperature in
       *  Kelvins of the speciman injected. This may be different from
       *  the temperature of the sample.
       */
      injector_temperature?: number;
      /**
       * Diameter in micrometres of jet stream of sample delivery
       */
      jet_diameter?: number;
      /**
       * Sample deliver driving force, e.g. Gas, Electronic Potential
       */
      power_by?: string;
      /**
       * Details of crystal growth and preparation of the crystals
       */
      preparation?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_soln_scatter?: [
    {
      /**
       * The name of the buffer used for the sample in the solution scattering
       *  experiment.
       */
      buffer_name?: string;
      /**
       * The concentration range (mg/mL) of the complex in the
       *  sample used in the solution scattering experiment to
       *  determine the mean radius of structural elongation.
       */
      concentration_range?: string;
      /**
       * A list of the software used in the data analysis
       */
      data_analysis_software_list?: string;
      /**
       * A list of the software used in the data reduction
       */
      data_reduction_software_list?: string;
      /**
       * The particular radiation detector. In general this will be a
       *   manufacturer, description, model number or some combination of
       *   these.
       */
      detector_specific?: string;
      /**
       * The general class of the radiation detector.
       */
      detector_type?: string;
      /**
       * The value of _pdbx_soln_scatter.id must
       *  uniquely identify the sample in the category PDBX_SOLN_SCATTER
       */
      id: string;
      /**
       * The maximum mean radius of structural elongation of the sample.
       *  In a given solute-solvent contrast, the radius of gyration
       *  R_G is a measure of structural elongation if the internal
       *  inhomogeneity of scattering densities has no effect. Guiner
       *  analysis at low Q give the R_G and the forward scattering at
       *  zero angle I(0).
       *
       *     lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       *  where
       *        Q = 4(pi)sin(theta/lamda)
       *        2theta = scattering angle
       *        lamda = wavelength
       *
       *  The above expression is valid in a QR_G range for extended
       *  rod-like particles. The relative I(0)/c values ( where
       *   c = sample concentration) for sample measurements in a
       *  constant buffer for a single sample data session, gives the
       *  relative masses of the protein(s) studied when referenced
       *  against a standard.
       *
       *  see:
       *      O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *       X-ray Scattering, Academic Press, New York.
       *      O.Kratky. (1963). X-ray small angle scattering with
       *       substances of biological interest in diluted solutions.
       *       Prog. Biophys. Chem., 13, 105-173.
       *      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *       of X-ray and neutron scatter from rigid rods of non-uniform
       *       cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       *  If the structure is elongated, the mean radius of gyration
       *  of the cross-sectional structure R_XS  and the mean cross sectional
       *  intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      max_mean_cross_sectional_radii_gyration?: number;
      /**
       * The estimated standard deviation for the
       * minimum mean radius of structural elongation of the sample.
       * In a given solute-solvent contrast, the radius of gyration
       * R_G is a measure of structural elongation if the internal
       * inhomogeneity of scattering densities has no effect. Guiner
       * analysis at low Q give the R_G and the forward scattering at
       * zero angle I(0).
       *
       *     lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       * where
       *       Q = 4(pi)sin(theta/lamda)
       *       2theta = scattering angle
       *       lamda = wavelength
       *
       * The above expression is valid in a QR_G range for extended
       * rod-like particles. The relative I(0)/c values ( where
       *  c = sample concentration) for sample measurements in a
       * constant buffer for a single sample data session, gives the
       * relative masses of the protein(s) studied when referenced
       * against a standard.
       *
       * see:
       *     O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *      X-ray Scattering, Academic Press, New York.
       *     O.Kratky. (1963). X-ray small angle scattering with
       *      substances of biological interest in diluted solutions.
       *      Prog. Biophys. Chem., 13, 105-173.
       *     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *      of X-ray and neutron scatter from rigid rods of non-uniform
       *      cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       * If the structure is elongated, the mean radius of gyration
       * of the cross-sectional structure R_XS  and the mean cross sectional
       * intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      max_mean_cross_sectional_radii_gyration_esd?: number;
      /**
       * The mean radius of structural elongation of the sample.
       *  In a given solute-solvent contrast, the radius of gyration
       *  R_G is a measure of structural elongation if the internal
       *  inhomogeneity of scattering densities has no effect. Guiner
       *  analysis at low Q gives the R_G and the forward scattering at
       *  zero angle I(0).
       *
       *      lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       *  where
       *        Q = 4(pi)sin(theta/lamda)
       *        2theta = scattering angle
       *        lamda = wavelength
       *
       *  The above expression is valid in a QR_G range for extended
       *  rod-like particles. The relative I(0)/c values ( where
       *   c = sample concentration) for sample measurements in a
       *  constant buffer for a single sample data session, gives the
       *  relative masses of the protein(s) studied when referenced
       *  against a standard.
       *
       *  see: O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *       X-ray Scattering, Academic Press, New York.
       *       O.Kratky. (1963). X-ray small angle scattering with
       *       substances of biological interest in diluted solutions.
       *       Prog. Biophys. Chem., 13, 105-173.
       *
       *       G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *       of X-ray and neutron scatter from rigid rods of non-uniform
       *       cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       *  If the structure is elongated, the mean radius of gyration
       *  of the cross-sectional structure R_XS  and the mean cross sectional
       *  intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *
       *     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      mean_guiner_radius?: number;
      /**
       * The estimated standard deviation for the
       *  mean radius of structural elongation of the sample.
       *  In a given solute-solvent contrast, the radius of gyration
       *  R_G is a measure of structural elongation if the internal
       *  inhomogeneity of scattering densities has no effect. Guiner
       *  analysis at low Q give the R_G and the forward scattering at
       *  zero angle I(0).
       *
       *      lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       *  where
       *        Q = 4(pi)sin(theta/lamda)
       *        2theta = scattering angle
       *        lamda = wavelength
       *
       *  The above expression is valid in a QR_G range for extended
       *  rod-like particles. The relative I(0)/c values ( where
       *   c = sample concentration) for sample measurements in a
       *  constant buffer for a single sample data session, gives the
       *  relative masses of the protein(s) studied when referenced
       *  against a standard.
       *
       *  see:
       *      O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *       X-ray Scattering, Academic Press, New York.
       *      O.Kratky. (1963). X-ray small angle scattering with
       *       substances of biological interest in diluted solutions.
       *       Prog. Biophys. Chem., 13, 105-173.
       *      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *       of X-ray and neutron scatter from rigid rods of non-uniform
       *       cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       *  If the structure is elongated, the mean radius of gyration
       *  of the cross-sectional structure R_XS  and the mean cross sectional
       *  intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      mean_guiner_radius_esd?: number;
      /**
       * The minimum mean radius of structural elongation of the sample.
       * In a given solute-solvent contrast, the radius of gyration
       * R_G is a measure of structural elongation if the internal
       * inhomogeneity of scattering densities has no effect. Guiner
       * analysis at low Q give the R_G and the forward scattering at
       * zero angle I(0).
       *
       *     lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       * where
       *       Q = 4(pi)sin(theta/lamda)
       *       2theta = scattering angle
       *       lamda = wavelength
       *
       * The above expression is valid in a QR_G range for extended
       * rod-like particles. The relative I(0)/c values ( where
       *  c = sample concentration) for sample measurements in a
       * constant buffer for a single sample data session, gives the
       * relative masses of the protein(s) studied when referenced
       * against a standard.
       *
       * see:
       *     O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *      X-ray Scattering, Academic Press, New York.
       *     O.Kratky. (1963). X-ray small angle scattering with
       *      substances of biological interest in diluted solutions.
       *      Prog. Biophys. Chem., 13, 105-173.
       *     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *      of X-ray and neutron scatter from rigid rods of non-uniform
       *      cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       * If the structure is elongated, the mean radius of gyration
       * of the cross-sectional structure R_XS  and the mean cross sectional
       * intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      min_mean_cross_sectional_radii_gyration?: number;
      /**
       * The estimated standard deviation for the
       * minimum mean radius of structural elongation of the sample.
       * In a given solute-solvent contrast, the radius of gyration
       * R_G is a measure of structural elongation if the internal
       * inhomogeneity of scattering densities has no effect. Guiner
       * analysis at low Q give the R_G and the forward scattering at
       * zero angle I(0).
       *
       *    lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       * where
       *       Q = 4(pi)sin(theta/lamda)
       *       2theta = scattering angle
       *       lamda = wavelength
       *
       * The above expression is valid in a QR_G range for extended
       * rod-like particles. The relative I(0)/c values ( where
       *  c = sample concentration) for sample measurements in a
       * constant buffer for a single sample data session, gives the
       * relative masses of the protein(s) studied when referenced
       * against a standard.
       *
       * see:
       *     O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *      X-ray Scattering, Academic Press, New York.
       *     O.Kratky. (1963). X-ray small angle scattering with
       *      substances of biological interest in diluted solutions.
       *      Prog. Biophys. Chem., 13, 105-173.
       *     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *      of X-ray and neutron scatter from rigid rods of non-uniform
       *      cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       * If the structure is elongated, the mean radius of gyration
       * of the cross-sectional structure R_XS  and the mean cross sectional
       * intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *
       *    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      min_mean_cross_sectional_radii_gyration_esd?: number;
      /**
       * The number of time frame solution scattering images used.
       */
      num_time_frames?: number;
      /**
       * The length (or range) of the protein sample under study.
       * If the solution structure is approximated as an elongated elliptical
       * cyclinder the length L is determined from,
       *
       *   L = sqrt [12( (R_G)^2  -  (R_XS)^2 ) ]
       *
       * The length should also be given by
       *
       *   L = pi I(0) / [ I(Q).Q]_Q->0
       */
      protein_length?: string;
      /**
       * The pH value of the buffered sample.
       */
      sample_pH?: number;
      /**
       * The beamline name used for the experiment
       */
      source_beamline?: string;
      /**
       * The instrumentation used on the beamline
       */
      source_beamline_instrument?: string;
      /**
       * The general class of the radiation source.
       */
      source_class?: string;
      /**
       * The make, model, name or beamline of the source of radiation.
       */
      source_type?: string;
      /**
       * The temperature in kelvins at which the experiment
       *  was conducted
       */
      temperature?: number;
      /**
       * The type of solution scattering experiment carried out
       */
      type?: "modelling" | "neutron" | "x-ray";
    },
    ...{
      /**
       * The name of the buffer used for the sample in the solution scattering
       *  experiment.
       */
      buffer_name?: string;
      /**
       * The concentration range (mg/mL) of the complex in the
       *  sample used in the solution scattering experiment to
       *  determine the mean radius of structural elongation.
       */
      concentration_range?: string;
      /**
       * A list of the software used in the data analysis
       */
      data_analysis_software_list?: string;
      /**
       * A list of the software used in the data reduction
       */
      data_reduction_software_list?: string;
      /**
       * The particular radiation detector. In general this will be a
       *   manufacturer, description, model number or some combination of
       *   these.
       */
      detector_specific?: string;
      /**
       * The general class of the radiation detector.
       */
      detector_type?: string;
      /**
       * The value of _pdbx_soln_scatter.id must
       *  uniquely identify the sample in the category PDBX_SOLN_SCATTER
       */
      id: string;
      /**
       * The maximum mean radius of structural elongation of the sample.
       *  In a given solute-solvent contrast, the radius of gyration
       *  R_G is a measure of structural elongation if the internal
       *  inhomogeneity of scattering densities has no effect. Guiner
       *  analysis at low Q give the R_G and the forward scattering at
       *  zero angle I(0).
       *
       *     lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       *  where
       *        Q = 4(pi)sin(theta/lamda)
       *        2theta = scattering angle
       *        lamda = wavelength
       *
       *  The above expression is valid in a QR_G range for extended
       *  rod-like particles. The relative I(0)/c values ( where
       *   c = sample concentration) for sample measurements in a
       *  constant buffer for a single sample data session, gives the
       *  relative masses of the protein(s) studied when referenced
       *  against a standard.
       *
       *  see:
       *      O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *       X-ray Scattering, Academic Press, New York.
       *      O.Kratky. (1963). X-ray small angle scattering with
       *       substances of biological interest in diluted solutions.
       *       Prog. Biophys. Chem., 13, 105-173.
       *      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *       of X-ray and neutron scatter from rigid rods of non-uniform
       *       cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       *  If the structure is elongated, the mean radius of gyration
       *  of the cross-sectional structure R_XS  and the mean cross sectional
       *  intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      max_mean_cross_sectional_radii_gyration?: number;
      /**
       * The estimated standard deviation for the
       * minimum mean radius of structural elongation of the sample.
       * In a given solute-solvent contrast, the radius of gyration
       * R_G is a measure of structural elongation if the internal
       * inhomogeneity of scattering densities has no effect. Guiner
       * analysis at low Q give the R_G and the forward scattering at
       * zero angle I(0).
       *
       *     lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       * where
       *       Q = 4(pi)sin(theta/lamda)
       *       2theta = scattering angle
       *       lamda = wavelength
       *
       * The above expression is valid in a QR_G range for extended
       * rod-like particles. The relative I(0)/c values ( where
       *  c = sample concentration) for sample measurements in a
       * constant buffer for a single sample data session, gives the
       * relative masses of the protein(s) studied when referenced
       * against a standard.
       *
       * see:
       *     O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *      X-ray Scattering, Academic Press, New York.
       *     O.Kratky. (1963). X-ray small angle scattering with
       *      substances of biological interest in diluted solutions.
       *      Prog. Biophys. Chem., 13, 105-173.
       *     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *      of X-ray and neutron scatter from rigid rods of non-uniform
       *      cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       * If the structure is elongated, the mean radius of gyration
       * of the cross-sectional structure R_XS  and the mean cross sectional
       * intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      max_mean_cross_sectional_radii_gyration_esd?: number;
      /**
       * The mean radius of structural elongation of the sample.
       *  In a given solute-solvent contrast, the radius of gyration
       *  R_G is a measure of structural elongation if the internal
       *  inhomogeneity of scattering densities has no effect. Guiner
       *  analysis at low Q gives the R_G and the forward scattering at
       *  zero angle I(0).
       *
       *      lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       *  where
       *        Q = 4(pi)sin(theta/lamda)
       *        2theta = scattering angle
       *        lamda = wavelength
       *
       *  The above expression is valid in a QR_G range for extended
       *  rod-like particles. The relative I(0)/c values ( where
       *   c = sample concentration) for sample measurements in a
       *  constant buffer for a single sample data session, gives the
       *  relative masses of the protein(s) studied when referenced
       *  against a standard.
       *
       *  see: O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *       X-ray Scattering, Academic Press, New York.
       *       O.Kratky. (1963). X-ray small angle scattering with
       *       substances of biological interest in diluted solutions.
       *       Prog. Biophys. Chem., 13, 105-173.
       *
       *       G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *       of X-ray and neutron scatter from rigid rods of non-uniform
       *       cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       *  If the structure is elongated, the mean radius of gyration
       *  of the cross-sectional structure R_XS  and the mean cross sectional
       *  intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *
       *     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      mean_guiner_radius?: number;
      /**
       * The estimated standard deviation for the
       *  mean radius of structural elongation of the sample.
       *  In a given solute-solvent contrast, the radius of gyration
       *  R_G is a measure of structural elongation if the internal
       *  inhomogeneity of scattering densities has no effect. Guiner
       *  analysis at low Q give the R_G and the forward scattering at
       *  zero angle I(0).
       *
       *      lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       *  where
       *        Q = 4(pi)sin(theta/lamda)
       *        2theta = scattering angle
       *        lamda = wavelength
       *
       *  The above expression is valid in a QR_G range for extended
       *  rod-like particles. The relative I(0)/c values ( where
       *   c = sample concentration) for sample measurements in a
       *  constant buffer for a single sample data session, gives the
       *  relative masses of the protein(s) studied when referenced
       *  against a standard.
       *
       *  see:
       *      O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *       X-ray Scattering, Academic Press, New York.
       *      O.Kratky. (1963). X-ray small angle scattering with
       *       substances of biological interest in diluted solutions.
       *       Prog. Biophys. Chem., 13, 105-173.
       *      G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *       of X-ray and neutron scatter from rigid rods of non-uniform
       *       cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       *  If the structure is elongated, the mean radius of gyration
       *  of the cross-sectional structure R_XS  and the mean cross sectional
       *  intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *     ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      mean_guiner_radius_esd?: number;
      /**
       * The minimum mean radius of structural elongation of the sample.
       * In a given solute-solvent contrast, the radius of gyration
       * R_G is a measure of structural elongation if the internal
       * inhomogeneity of scattering densities has no effect. Guiner
       * analysis at low Q give the R_G and the forward scattering at
       * zero angle I(0).
       *
       *     lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       * where
       *       Q = 4(pi)sin(theta/lamda)
       *       2theta = scattering angle
       *       lamda = wavelength
       *
       * The above expression is valid in a QR_G range for extended
       * rod-like particles. The relative I(0)/c values ( where
       *  c = sample concentration) for sample measurements in a
       * constant buffer for a single sample data session, gives the
       * relative masses of the protein(s) studied when referenced
       * against a standard.
       *
       * see:
       *     O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *      X-ray Scattering, Academic Press, New York.
       *     O.Kratky. (1963). X-ray small angle scattering with
       *      substances of biological interest in diluted solutions.
       *      Prog. Biophys. Chem., 13, 105-173.
       *     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *      of X-ray and neutron scatter from rigid rods of non-uniform
       *      cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       * If the structure is elongated, the mean radius of gyration
       * of the cross-sectional structure R_XS  and the mean cross sectional
       * intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      min_mean_cross_sectional_radii_gyration?: number;
      /**
       * The estimated standard deviation for the
       * minimum mean radius of structural elongation of the sample.
       * In a given solute-solvent contrast, the radius of gyration
       * R_G is a measure of structural elongation if the internal
       * inhomogeneity of scattering densities has no effect. Guiner
       * analysis at low Q give the R_G and the forward scattering at
       * zero angle I(0).
       *
       *    lnl(Q) = lnl(0) - R_G^2Q^2/3
       *
       * where
       *       Q = 4(pi)sin(theta/lamda)
       *       2theta = scattering angle
       *       lamda = wavelength
       *
       * The above expression is valid in a QR_G range for extended
       * rod-like particles. The relative I(0)/c values ( where
       *  c = sample concentration) for sample measurements in a
       * constant buffer for a single sample data session, gives the
       * relative masses of the protein(s) studied when referenced
       * against a standard.
       *
       * see:
       *     O.Glatter & O.Kratky, (1982). Editors of "Small angle
       *      X-ray Scattering, Academic Press, New York.
       *     O.Kratky. (1963). X-ray small angle scattering with
       *      substances of biological interest in diluted solutions.
       *      Prog. Biophys. Chem., 13, 105-173.
       *     G.D.Wignall & F.S.Bates, (1987). The small-angle approximation
       *      of X-ray and neutron scatter from rigid rods of non-uniform
       *      cross section and finite length. J.Appl. Crystallog., 18, 452-460.
       *
       * If the structure is elongated, the mean radius of gyration
       * of the cross-sectional structure R_XS  and the mean cross sectional
       * intensity at zero angle [I(Q).Q]_Q->0 is obtained from
       *
       *    ln[I(Q).Q] = ln[l(Q).(Q)]_Q->0 - ((R_XS)^2Q^2)/2
       */
      min_mean_cross_sectional_radii_gyration_esd?: number;
      /**
       * The number of time frame solution scattering images used.
       */
      num_time_frames?: number;
      /**
       * The length (or range) of the protein sample under study.
       * If the solution structure is approximated as an elongated elliptical
       * cyclinder the length L is determined from,
       *
       *   L = sqrt [12( (R_G)^2  -  (R_XS)^2 ) ]
       *
       * The length should also be given by
       *
       *   L = pi I(0) / [ I(Q).Q]_Q->0
       */
      protein_length?: string;
      /**
       * The pH value of the buffered sample.
       */
      sample_pH?: number;
      /**
       * The beamline name used for the experiment
       */
      source_beamline?: string;
      /**
       * The instrumentation used on the beamline
       */
      source_beamline_instrument?: string;
      /**
       * The general class of the radiation source.
       */
      source_class?: string;
      /**
       * The make, model, name or beamline of the source of radiation.
       */
      source_type?: string;
      /**
       * The temperature in kelvins at which the experiment
       *  was conducted
       */
      temperature?: number;
      /**
       * The type of solution scattering experiment carried out
       */
      type?: "modelling" | "neutron" | "x-ray";
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_soln_scatter_model?: [
    {
      /**
       * A description of the conformer selection criteria
       *  used.
       */
      conformer_selection_criteria?: string;
      /**
       * A description of any additional details concerning the experiment.
       */
      details?: string;
      /**
       * A list of the entries used to fit the model
       *  to the scattering data
       */
      entry_fitting_list?: string;
      /**
       * The value of _pdbx_soln_scatter_model.id must
       *  uniquely identify the sample in the category PDBX_SOLN_SCATTER_MODEL
       */
      id: string;
      /**
       * A description of the methods used in the modelling
       */
      method?: string;
      /**
       * The number of model conformers calculated.
       */
      num_conformers_calculated?: number;
      /**
       * The number of model conformers submitted in the entry
       */
      num_conformers_submitted?: number;
      /**
       * The index of the representative conformer among the submitted conformers for the entry
       */
      representative_conformer?: number;
      /**
       * This data item is a pointer to  _pdbx_soln_scatter.id in the  PDBX_SOLN_SCATTER category.
       */
      scatter_id: string;
      /**
       * A list of the software authors
       */
      software_author_list?: string;
      /**
       * A list of the software used in the modeeling
       */
      software_list?: string;
    },
    ...{
      /**
       * A description of the conformer selection criteria
       *  used.
       */
      conformer_selection_criteria?: string;
      /**
       * A description of any additional details concerning the experiment.
       */
      details?: string;
      /**
       * A list of the entries used to fit the model
       *  to the scattering data
       */
      entry_fitting_list?: string;
      /**
       * The value of _pdbx_soln_scatter_model.id must
       *  uniquely identify the sample in the category PDBX_SOLN_SCATTER_MODEL
       */
      id: string;
      /**
       * A description of the methods used in the modelling
       */
      method?: string;
      /**
       * The number of model conformers calculated.
       */
      num_conformers_calculated?: number;
      /**
       * The number of model conformers submitted in the entry
       */
      num_conformers_submitted?: number;
      /**
       * The index of the representative conformer among the submitted conformers for the entry
       */
      representative_conformer?: number;
      /**
       * This data item is a pointer to  _pdbx_soln_scatter.id in the  PDBX_SOLN_SCATTER category.
       */
      scatter_id: string;
      /**
       * A list of the software authors
       */
      software_author_list?: string;
      /**
       * A list of the software used in the modeeling
       */
      software_list?: string;
    }[]
  ];
  pdbx_vrpt_summary?: {
    /**
     * The MolProbity conformer-match quality parameter for RNA structures.
     * Low values are worse. Specific to structures that contain RNA polymers.
     */
    RNA_suiteness?: number;
    /**
     * The steps that were attempted by the validation pipeline software.
     * A step typically involves running a 3rd party validation tool, for instance "mogul"
     * Each step will be enumerated in _pdbx_vrpt_software category.
     */
    attempted_validation_steps?: string;
    /**
     * A flag indicating if there are ligands in the model used for detailed Buster analysis.
     */
    ligands_for_buster_report?: "N" | "Y";
    /**
     * The date, time and time-zone that the validation report  was created.
     * The string will be formatted like yyyy-mm-dd:hh:mm in GMT time.
     */
    report_creation_date?: string;
    restypes_notchecked_for_bond_angle_geometry?: string[];
  };
  /**
   * @minItems 1
   */
  pdbx_vrpt_summary_diffraction?: [
    {
      /**
       * An indicator if isotropic B factors are partial or full values.
       */
      B_factor_type?: "FULL" | "PARTIAL";
      /**
       * REFMAC scaling parameter as reported in log output line starting 'bulk solvent: scale'.
       * X-ray entry specific, obtained in the EDS step from REFMAC calculation.
       */
      Babinet_b?: number;
      /**
       * REFMAC scaling parameter as reported in log output line starting 'bulk solvent: scale'.
       * X-ray entry specific, obtained in the EDS step from REFMAC calculation.
       */
      Babinet_k?: number;
      /**
       * The version of CCP4 suite used in the analysis.
       */
      CCP4_version?: string;
      /**
       * The overall R-factor from a DCC recalculation of an electron density map.
       * Currently value is rounded to 2 decimal places.
       * X-ray entry specific, obtained from the DCC program.
       */
      DCC_R?: number;
      /**
       * Rfree as calculated by DCC.
       */
      DCC_Rfree?: number;
      /**
       * The overall R factor from the EDS REFMAC calculation (no free set is used in this).
       * Currently value is rounded to 2 decimal places.
       * X-ray entry specific, obtained in the eds step from REFMAC calculation.
       */
      EDS_R?: number;
      /**
       * Warning message when EDS calculated R vs reported R is higher than a threshold
       */
      EDS_R_warning?: string;
      /**
       * The data high resolution diffraction limit, in Angstroms, found in the input structure factor file.
       * X-ray entry specific, obtained in the EDS step.
       */
      EDS_res_high?: number;
      /**
       * The data low resolution diffraction limit, in Angstroms, found in the input structure factor file.
       * X-ray entry specific, obtained in the EDS step.
       */
      EDS_res_low?: number;
      /**
       * Fo,Fc correlation: The difference between the observed structure factors (Fo) and the
       * calculated structure factors (Fc) measures the correlation between the model and the
       * experimental data.
       * X-ray entry specific, obtained in the eds step from REFMAC calculation.
       */
      Fo_Fc_correlation?: number;
      /**
       * Each reflection has an intensity (I) and an uncertainty in measurement
       * (sigma(I)), so I/sigma(I) is the signal-to-noise ratio. This
       * ratio decreases at higher resolution. <I/sigma(I)> is the mean of individual I/sigma(I)
       * values. Value for outer resolution shell is given in parentheses. In case
       * structure factor amplitudes are deposited, Xtriage estimates the intensities
       * first and then calculates this metric. When intensities are available in the
       * deposited file, these are converted to amplitudes and then back to intensity
       * estimate before calculating the metric.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      I_over_sigma?: string;
      /**
       * Padilla and Yeates twinning parameter <|L**2|>.
       * Theoretical values is 0.333 in the untwinned case, and 0.2 in the perfectly twinned case.
       * X-ray entry specific, obtained from the Xtriage program.
       */
      Padilla_Yeates_L2_mean?: number;
      /**
       * Padilla and Yeates twinning parameter <|L|>.
       * Theoretical values is 0.5 in the untwinned case, and 0.375 in the perfectly twinned case.
       * X-ray entry specific, obtained from the Xtriage program.
       */
      Padilla_Yeates_L_mean?: number;
      /**
       * The overall Q-score of the fit of coordinates to the electron map.
       * The Q-score is defined in Pintilie, GH. et al., Nature Methods, 17, 328-334 (2020)
       */
      Q_score?: number;
      /**
       * Result of absolute likelihood based Wilson scaling,
       * The anisotropic B value of the data is determined using a likelihood based approach.
       * The resulting B tensor is reported, the 3 diagonal values are given first, followed
       * by the 3 off diagonal values.
       * A large spread in (especially the diagonal) values indicates anisotropy.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      Wilson_B_aniso?: string;
      /**
       * An estimate of the overall B-value of the structure, calculated from the diffraction data.
       * Units Angstroms squared.
       * It serves as an indicator of the degree of order in the crystal and the value is usually
       * not hugely different from the average B-value calculated from the model.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      Wilson_B_estimate?: number;
      /**
       * The number of acentric reflections that Xtriage identifies as outliers on the basis
       * of Wilson statistics. Note that if pseudo translational symmetry is present,
       * a large number of 'outliers' will be present.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      acentric_outliers?: number;
      /**
       * REFMAC scaling parameter as reported in log output file.
       * X-ray entry specific, obtained in the EDS step from REFMAC calculation.
       */
      bulk_solvent_b?: number;
      /**
       * REFMAC reported scaling parameter.
       * X-ray entry specific, obtained in the EDS step from REFMAC calculation.
       */
      bulk_solvent_k?: number;
      /**
       * The number of centric reflections that Xtriage identifies as outliers.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      centric_outliers?: number;
      /**
       * The ratio (Bmax - Bmin) / Bmean where Bmax, Bmin and Bmean are computed from the B-values
       * associated with the principal axes of the anisotropic thermal ellipsoid.
       * This ratio is usually less than 0.5; for only 1% of PDB entries it is more than 1.0 (Read et al., 2011).
       * X-ray entry specific, obtained from the Xtriage program.
       */
      data_anisotropy?: number;
      /**
       * The percent completeness of diffraction data.
       */
      data_completeness?: number;
      /**
       * The version of density-fitness suite programs used in the analysis.
       */
      density_fitness_version?: string;
      /**
       * Experimental method for statistics
       */
      exp_method?: string;
      /**
       * The number of Miller Indices reported by the Xtriage program. This should be the same as the
       * number of _refln in the input structure factor file.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      num_miller_indices?: number;
      /**
       * The number of reflections in the free set as defined in the input structure factor file supplied to the validation pipeline.
       * X-ray entry specific, obtained from the DCC program.
       */
      number_reflns_R_free?: number;
      /**
       * The percent of RSRZ outliers.
       */
      percent_RSRZ_outliers?: number;
      /**
       * A percentage, Normally percent proportion of the total number. Between 0% and 100%.
       */
      percent_free_reflections?: number;
      /**
       * The version of Servalcat program used in the analysis.
       */
      servalcat_version?: string;
      /**
       * A sentence giving the result of Xtriage's analysis on translational NCS.
       * X-ray entry specific, obtained from the Xtriage program.
       */
      trans_NCS_details?: string;
      /**
       * Estimated twinning fraction for operators as identified by Xtriage. A semicolon separated
       * list of operators with fractions is givens
       * X-ray entry specific, obtained from the Xtriage program.
       */
      twin_fraction?: string;
    },
    ...{
      /**
       * An indicator if isotropic B factors are partial or full values.
       */
      B_factor_type?: "FULL" | "PARTIAL";
      /**
       * REFMAC scaling parameter as reported in log output line starting 'bulk solvent: scale'.
       * X-ray entry specific, obtained in the EDS step from REFMAC calculation.
       */
      Babinet_b?: number;
      /**
       * REFMAC scaling parameter as reported in log output line starting 'bulk solvent: scale'.
       * X-ray entry specific, obtained in the EDS step from REFMAC calculation.
       */
      Babinet_k?: number;
      /**
       * The version of CCP4 suite used in the analysis.
       */
      CCP4_version?: string;
      /**
       * The overall R-factor from a DCC recalculation of an electron density map.
       * Currently value is rounded to 2 decimal places.
       * X-ray entry specific, obtained from the DCC program.
       */
      DCC_R?: number;
      /**
       * Rfree as calculated by DCC.
       */
      DCC_Rfree?: number;
      /**
       * The overall R factor from the EDS REFMAC calculation (no free set is used in this).
       * Currently value is rounded to 2 decimal places.
       * X-ray entry specific, obtained in the eds step from REFMAC calculation.
       */
      EDS_R?: number;
      /**
       * Warning message when EDS calculated R vs reported R is higher than a threshold
       */
      EDS_R_warning?: string;
      /**
       * The data high resolution diffraction limit, in Angstroms, found in the input structure factor file.
       * X-ray entry specific, obtained in the EDS step.
       */
      EDS_res_high?: number;
      /**
       * The data low resolution diffraction limit, in Angstroms, found in the input structure factor file.
       * X-ray entry specific, obtained in the EDS step.
       */
      EDS_res_low?: number;
      /**
       * Fo,Fc correlation: The difference between the observed structure factors (Fo) and the
       * calculated structure factors (Fc) measures the correlation between the model and the
       * experimental data.
       * X-ray entry specific, obtained in the eds step from REFMAC calculation.
       */
      Fo_Fc_correlation?: number;
      /**
       * Each reflection has an intensity (I) and an uncertainty in measurement
       * (sigma(I)), so I/sigma(I) is the signal-to-noise ratio. This
       * ratio decreases at higher resolution. <I/sigma(I)> is the mean of individual I/sigma(I)
       * values. Value for outer resolution shell is given in parentheses. In case
       * structure factor amplitudes are deposited, Xtriage estimates the intensities
       * first and then calculates this metric. When intensities are available in the
       * deposited file, these are converted to amplitudes and then back to intensity
       * estimate before calculating the metric.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      I_over_sigma?: string;
      /**
       * Padilla and Yeates twinning parameter <|L**2|>.
       * Theoretical values is 0.333 in the untwinned case, and 0.2 in the perfectly twinned case.
       * X-ray entry specific, obtained from the Xtriage program.
       */
      Padilla_Yeates_L2_mean?: number;
      /**
       * Padilla and Yeates twinning parameter <|L|>.
       * Theoretical values is 0.5 in the untwinned case, and 0.375 in the perfectly twinned case.
       * X-ray entry specific, obtained from the Xtriage program.
       */
      Padilla_Yeates_L_mean?: number;
      /**
       * The overall Q-score of the fit of coordinates to the electron map.
       * The Q-score is defined in Pintilie, GH. et al., Nature Methods, 17, 328-334 (2020)
       */
      Q_score?: number;
      /**
       * Result of absolute likelihood based Wilson scaling,
       * The anisotropic B value of the data is determined using a likelihood based approach.
       * The resulting B tensor is reported, the 3 diagonal values are given first, followed
       * by the 3 off diagonal values.
       * A large spread in (especially the diagonal) values indicates anisotropy.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      Wilson_B_aniso?: string;
      /**
       * An estimate of the overall B-value of the structure, calculated from the diffraction data.
       * Units Angstroms squared.
       * It serves as an indicator of the degree of order in the crystal and the value is usually
       * not hugely different from the average B-value calculated from the model.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      Wilson_B_estimate?: number;
      /**
       * The number of acentric reflections that Xtriage identifies as outliers on the basis
       * of Wilson statistics. Note that if pseudo translational symmetry is present,
       * a large number of 'outliers' will be present.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      acentric_outliers?: number;
      /**
       * REFMAC scaling parameter as reported in log output file.
       * X-ray entry specific, obtained in the EDS step from REFMAC calculation.
       */
      bulk_solvent_b?: number;
      /**
       * REFMAC reported scaling parameter.
       * X-ray entry specific, obtained in the EDS step from REFMAC calculation.
       */
      bulk_solvent_k?: number;
      /**
       * The number of centric reflections that Xtriage identifies as outliers.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      centric_outliers?: number;
      /**
       * The ratio (Bmax - Bmin) / Bmean where Bmax, Bmin and Bmean are computed from the B-values
       * associated with the principal axes of the anisotropic thermal ellipsoid.
       * This ratio is usually less than 0.5; for only 1% of PDB entries it is more than 1.0 (Read et al., 2011).
       * X-ray entry specific, obtained from the Xtriage program.
       */
      data_anisotropy?: number;
      /**
       * The percent completeness of diffraction data.
       */
      data_completeness?: number;
      /**
       * The version of density-fitness suite programs used in the analysis.
       */
      density_fitness_version?: string;
      /**
       * Experimental method for statistics
       */
      exp_method?: string;
      /**
       * The number of Miller Indices reported by the Xtriage program. This should be the same as the
       * number of _refln in the input structure factor file.
       * X-ray entry specific, calculated by Phenix Xtriage program.
       */
      num_miller_indices?: number;
      /**
       * The number of reflections in the free set as defined in the input structure factor file supplied to the validation pipeline.
       * X-ray entry specific, obtained from the DCC program.
       */
      number_reflns_R_free?: number;
      /**
       * The percent of RSRZ outliers.
       */
      percent_RSRZ_outliers?: number;
      /**
       * A percentage, Normally percent proportion of the total number. Between 0% and 100%.
       */
      percent_free_reflections?: number;
      /**
       * The version of Servalcat program used in the analysis.
       */
      servalcat_version?: string;
      /**
       * A sentence giving the result of Xtriage's analysis on translational NCS.
       * X-ray entry specific, obtained from the Xtriage program.
       */
      trans_NCS_details?: string;
      /**
       * Estimated twinning fraction for operators as identified by Xtriage. A semicolon separated
       * list of operators with fractions is givens
       * X-ray entry specific, obtained from the Xtriage program.
       */
      twin_fraction?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_vrpt_summary_em?: [
    {
      /**
       * The overall Q-score of the fit of coordinates to the electron map.
       * The Q-score is defined in Pintilie, GH. et al., Nature Methods, 17, 328-334 (2020)
       */
      Q_score?: number;
      /**
       * The proportion of all non hydrogen atoms within density.
       */
      atom_inclusion_all_atoms?: number;
      /**
       * The proportion of backbone atoms within density.
       */
      atom_inclusion_backbone?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve halfbit.
       */
      author_provided_fsc_resolution_by_cutoff_halfbit?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve onebit.
       */
      author_provided_fsc_resolution_by_cutoff_onebit?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve 0.143.
       */
      author_provided_fsc_resolution_by_cutoff_pt_143?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve 0.333.
       */
      author_provided_fsc_resolution_by_cutoff_pt_333?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve 0.5.
       */
      author_provided_fsc_resolution_by_cutoff_pt_5?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve threesigma.
       */
      author_provided_fsc_resolution_by_cutoff_threesigma?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve halfbit.
       */
      calculated_fsc_resolution_by_cutoff_halfbit?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve onebit.
       */
      calculated_fsc_resolution_by_cutoff_onebit?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve 0.143.
       */
      calculated_fsc_resolution_by_cutoff_pt_143?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve 0.333.
       */
      calculated_fsc_resolution_by_cutoff_pt_333?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve 0.5.
       */
      calculated_fsc_resolution_by_cutoff_pt_5?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve threesigma.
       */
      calculated_fsc_resolution_by_cutoff_threesigma?: number;
      /**
       * The recommended contour level for the primary map of this deposition.
       */
      contour_level_primary_map?: number;
      /**
       * Experimental method for statistics
       */
      exp_method?: string;
    },
    ...{
      /**
       * The overall Q-score of the fit of coordinates to the electron map.
       * The Q-score is defined in Pintilie, GH. et al., Nature Methods, 17, 328-334 (2020)
       */
      Q_score?: number;
      /**
       * The proportion of all non hydrogen atoms within density.
       */
      atom_inclusion_all_atoms?: number;
      /**
       * The proportion of backbone atoms within density.
       */
      atom_inclusion_backbone?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve halfbit.
       */
      author_provided_fsc_resolution_by_cutoff_halfbit?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve onebit.
       */
      author_provided_fsc_resolution_by_cutoff_onebit?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve 0.143.
       */
      author_provided_fsc_resolution_by_cutoff_pt_143?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve 0.333.
       */
      author_provided_fsc_resolution_by_cutoff_pt_333?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve 0.5.
       */
      author_provided_fsc_resolution_by_cutoff_pt_5?: number;
      /**
       * The resolution from the intersection of the author provided fsc and the indicator curve threesigma.
       */
      author_provided_fsc_resolution_by_cutoff_threesigma?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve halfbit.
       */
      calculated_fsc_resolution_by_cutoff_halfbit?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve onebit.
       */
      calculated_fsc_resolution_by_cutoff_onebit?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve 0.143.
       */
      calculated_fsc_resolution_by_cutoff_pt_143?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve 0.333.
       */
      calculated_fsc_resolution_by_cutoff_pt_333?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve 0.5.
       */
      calculated_fsc_resolution_by_cutoff_pt_5?: number;
      /**
       * The resolution from the intersection of the fsc curve generated by from the provided halfmaps and the indicator curve threesigma.
       */
      calculated_fsc_resolution_by_cutoff_threesigma?: number;
      /**
       * The recommended contour level for the primary map of this deposition.
       */
      contour_level_primary_map?: number;
      /**
       * Experimental method for statistics
       */
      exp_method?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_vrpt_summary_geometry?: [
    {
      /**
       * The overall root mean square of the Z-score for deviations of bond angles in comparison to
       * "standard geometry" made using the MolProbity dangle program.
       * Standard geometry parameters are taken from Engh and Huber (2001) and Parkinson et al. (1996).
       * This value is for all chains in the structure.
       */
      angles_RMSZ?: number;
      /**
       * The overall root mean square of the Z-score for deviations of bond lengths in comparison to
       * "standard geometry" made using the MolProbity dangle program.
       * Standard geometry parameters are taken from Engh and Huber (2001) and Parkinson et al. (1996).
       * This value is for all chains in the structure.
       */
      bonds_RMSZ?: number;
      /**
       * This score is derived from the number of pairs of atoms in the PDB_model_num that are unusually close to each other.
       * It is calculated by the MolProbity pdbx_vrpt_software and expressed as the number or such clashes per thousand atoms.
       * For structures determined by NMR the clashscore value here will only consider label_atom_id pairs in the
       * well-defined (core) residues from ensemble analysis.
       */
      clashscore?: number;
      /**
       * Only given for structures determined by NMR. The MolProbity pdbx_vrpt_instance_clashes score for all label_atom_id pairs.
       */
      clashscore_full_length?: number;
      /**
       * This is the number of hydrogen atoms added and optimized by the MolProbity reduce pdbx_vrpt_software as part of the
       * all-atom clashscore.
       */
      num_H_reduce?: number;
      /**
       * The number of bond angles compared to "standard geometry" made using the MolProbity dangle program.
       * Standard geometry parameters are taken from Engh and Huber (2001) and Parkinson et al. (1996).
       * This value is for all chains in the structure.
       */
      num_angles_RMSZ?: number;
      /**
       * The number of bond lengths compared to "standard geometry" made using the MolProbity dangle program.
       * Standard geometry parameters are taken from Engh and Huber (2001) and Parkinson et al. (1996).
       * This value is for all chains in the structure.
       */
      num_bonds_RMSZ?: number;
      /**
       * The percentage of residues with Ramachandran outliers.
       */
      percent_ramachandran_outliers?: number;
      /**
       * Only given for structures determined by NMR. The MolProbity Ramachandran outlier score
       * for all atoms in the structure rather than just the well-defined (core) residues.
       */
      percent_ramachandran_outliers_full_length?: number;
      /**
       * The MolProbity sidechain outlier score (a percentage).
       * Protein sidechains mostly adopt certain (combinations of) preferred torsion angle values
       * (called rotamers or rotameric conformers), much like their backbone torsion angles
       * (as assessed in the Ramachandran analysis). MolProbity considers the sidechain conformation
       * of a residue to be an outlier if its set of torsion angles is not similar to any preferred
       * combination. The sidechain outlier score is calculated as the percentage of residues
       * with an unusual sidechain conformation with respect to the total number of residues for
       * which the assessment is available.
       * Example: percent-rota-outliers="2.44".
       * Specific to structure that contain protein chains and have sidechains modelled.
       * For NMR structures only the  well-defined (core) residues from ensemble analysis will be considered.
       * The percentage of residues with rotamer outliers.
       */
      percent_rotamer_outliers?: number;
      /**
       * Only given for structures determined by NMR. The MolProbity sidechain outlier score
       * for all atoms in the structure rather than just the well-defined (core) residues.
       */
      percent_rotamer_outliers_full_length?: number;
    },
    ...{
      /**
       * The overall root mean square of the Z-score for deviations of bond angles in comparison to
       * "standard geometry" made using the MolProbity dangle program.
       * Standard geometry parameters are taken from Engh and Huber (2001) and Parkinson et al. (1996).
       * This value is for all chains in the structure.
       */
      angles_RMSZ?: number;
      /**
       * The overall root mean square of the Z-score for deviations of bond lengths in comparison to
       * "standard geometry" made using the MolProbity dangle program.
       * Standard geometry parameters are taken from Engh and Huber (2001) and Parkinson et al. (1996).
       * This value is for all chains in the structure.
       */
      bonds_RMSZ?: number;
      /**
       * This score is derived from the number of pairs of atoms in the PDB_model_num that are unusually close to each other.
       * It is calculated by the MolProbity pdbx_vrpt_software and expressed as the number or such clashes per thousand atoms.
       * For structures determined by NMR the clashscore value here will only consider label_atom_id pairs in the
       * well-defined (core) residues from ensemble analysis.
       */
      clashscore?: number;
      /**
       * Only given for structures determined by NMR. The MolProbity pdbx_vrpt_instance_clashes score for all label_atom_id pairs.
       */
      clashscore_full_length?: number;
      /**
       * This is the number of hydrogen atoms added and optimized by the MolProbity reduce pdbx_vrpt_software as part of the
       * all-atom clashscore.
       */
      num_H_reduce?: number;
      /**
       * The number of bond angles compared to "standard geometry" made using the MolProbity dangle program.
       * Standard geometry parameters are taken from Engh and Huber (2001) and Parkinson et al. (1996).
       * This value is for all chains in the structure.
       */
      num_angles_RMSZ?: number;
      /**
       * The number of bond lengths compared to "standard geometry" made using the MolProbity dangle program.
       * Standard geometry parameters are taken from Engh and Huber (2001) and Parkinson et al. (1996).
       * This value is for all chains in the structure.
       */
      num_bonds_RMSZ?: number;
      /**
       * The percentage of residues with Ramachandran outliers.
       */
      percent_ramachandran_outliers?: number;
      /**
       * Only given for structures determined by NMR. The MolProbity Ramachandran outlier score
       * for all atoms in the structure rather than just the well-defined (core) residues.
       */
      percent_ramachandran_outliers_full_length?: number;
      /**
       * The MolProbity sidechain outlier score (a percentage).
       * Protein sidechains mostly adopt certain (combinations of) preferred torsion angle values
       * (called rotamers or rotameric conformers), much like their backbone torsion angles
       * (as assessed in the Ramachandran analysis). MolProbity considers the sidechain conformation
       * of a residue to be an outlier if its set of torsion angles is not similar to any preferred
       * combination. The sidechain outlier score is calculated as the percentage of residues
       * with an unusual sidechain conformation with respect to the total number of residues for
       * which the assessment is available.
       * Example: percent-rota-outliers="2.44".
       * Specific to structure that contain protein chains and have sidechains modelled.
       * For NMR structures only the  well-defined (core) residues from ensemble analysis will be considered.
       * The percentage of residues with rotamer outliers.
       */
      percent_rotamer_outliers?: number;
      /**
       * Only given for structures determined by NMR. The MolProbity sidechain outlier score
       * for all atoms in the structure rather than just the well-defined (core) residues.
       */
      percent_rotamer_outliers_full_length?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  pdbx_vrpt_summary_nmr?: [
    {
      /**
       * Overall completeness of the chemical shift assignments for the well-defined
       * regions of the structure.
       */
      chemical_shift_completeness?: number;
      /**
       * Overall completeness of the chemical shift assignments for the full
       * macromolecule or complex as suggested by the molecular description of an entry
       * (whether some portion of it is modelled or not).
       */
      chemical_shift_completeness_full_length?: number;
      /**
       * Diagnostic message from the wrapper of Cyrange software which identifies the
       * well-defined cores (domains) of NMR protein structures.
       */
      cyrange_error?: string;
      /**
       * Total number of well-defined cores (domains) identified by Cyrange
       */
      cyrange_number_of_domains?: number;
      /**
       * Experimental method for statistics
       */
      exp_method?: string;
      /**
       * For each Cyrange well-defined core ("cyrange_domain") the id of the PDB_model_num which is most
       * similar to other models as measured by pairwise RMSDs over the domain.
       * For the whole entry ("Entry"), the medoid PDB_model_num of the largest core is taken as an overall
       * representative of the structure.
       */
      medoid_model?: number;
      /**
       * A flag indicating if all models in the NMR ensemble contain the exact
       * same atoms ("True") or if the models differ in this respect ("False").
       */
      nmr_models_consistency_flag?: string;
      /**
       * Diagnostic message from the wrapper of NMRClust software which clusters NMR models.
       */
      nmrclust_error?: string;
      /**
       * Total number of clusters in the NMR ensemble identified by NMRClust.
       */
      nmrclust_number_of_clusters?: number;
      /**
       * Number of models analysed by NMRClust - should in almost all cases be the
       * same as the number of models in the NMR ensemble.
       */
      nmrclust_number_of_models?: number;
      /**
       * Number of models that do not belong to any cluster as deemed by NMRClust.
       */
      nmrclust_number_of_outliers?: number;
      /**
       * Overall representative PDB_model_num of the NMR ensemble as identified by NMRClust.
       */
      nmrclust_representative_model?: number;
    },
    ...{
      /**
       * Overall completeness of the chemical shift assignments for the well-defined
       * regions of the structure.
       */
      chemical_shift_completeness?: number;
      /**
       * Overall completeness of the chemical shift assignments for the full
       * macromolecule or complex as suggested by the molecular description of an entry
       * (whether some portion of it is modelled or not).
       */
      chemical_shift_completeness_full_length?: number;
      /**
       * Diagnostic message from the wrapper of Cyrange software which identifies the
       * well-defined cores (domains) of NMR protein structures.
       */
      cyrange_error?: string;
      /**
       * Total number of well-defined cores (domains) identified by Cyrange
       */
      cyrange_number_of_domains?: number;
      /**
       * Experimental method for statistics
       */
      exp_method?: string;
      /**
       * For each Cyrange well-defined core ("cyrange_domain") the id of the PDB_model_num which is most
       * similar to other models as measured by pairwise RMSDs over the domain.
       * For the whole entry ("Entry"), the medoid PDB_model_num of the largest core is taken as an overall
       * representative of the structure.
       */
      medoid_model?: number;
      /**
       * A flag indicating if all models in the NMR ensemble contain the exact
       * same atoms ("True") or if the models differ in this respect ("False").
       */
      nmr_models_consistency_flag?: string;
      /**
       * Diagnostic message from the wrapper of NMRClust software which clusters NMR models.
       */
      nmrclust_error?: string;
      /**
       * Total number of clusters in the NMR ensemble identified by NMRClust.
       */
      nmrclust_number_of_clusters?: number;
      /**
       * Number of models analysed by NMRClust - should in almost all cases be the
       * same as the number of models in the NMR ensemble.
       */
      nmrclust_number_of_models?: number;
      /**
       * Number of models that do not belong to any cluster as deemed by NMRClust.
       */
      nmrclust_number_of_outliers?: number;
      /**
       * Overall representative PDB_model_num of the NMR ensemble as identified by NMRClust.
       */
      nmrclust_representative_model?: number;
    }[]
  ];
  rcsb_accession_info?: {
    /**
     * The entry deposition date.
     */
    deposit_date?: string;
    /**
     * A code indicating the current availibility of experimental data in the repository.
     */
    has_released_experimental_data?: "N" | "Y";
    /**
     * The entry initial release date.
     */
    initial_release_date?: string;
    /**
     * The latest entry major revision number.
     */
    major_revision?: number;
    /**
     * The latest entry minor revision number.
     */
    minor_revision?: number;
    /**
     * The latest entry revision date.
     */
    revision_date?: string;
    /**
     * The release status for the entry.
     */
    status_code?: "AUCO" | "AUTH" | "HOLD" | "HPUB" | "POLC" | "PROC" | "REFI" | "REL" | "REPL" | "WAIT" | "WDRN";
  };
  rcsb_comp_model_provenance?: {
    /**
     * Entry identifier corresponding to the computed structure model.
     */
    entry_id: string;
    /**
     * Source database for the computed structure model.
     */
    source_db?: "AlphaFoldDB" | "ModelArchive";
    /**
     * Source filename for the computed structure model.
     */
    source_filename?: string;
    /**
     * Source URL for computed structure model predicted aligned error (PAE) json file.
     */
    source_pae_url?: string;
    /**
     * Source URL for computed structure model file.
     */
    source_url?: string;
  };
  rcsb_entry_container_identifiers: {
    assembly_ids?: string[];
    branched_entity_ids?: string[];
    emdb_ids?: string[];
    entity_ids?: string[];
    /**
     * Entry identifier for the container.
     */
    entry_id: string;
    model_ids?: number[];
    non_polymer_entity_ids?: string[];
    polymer_entity_ids?: string[];
    /**
     * A unique identifier for each object in this entry container.
     */
    rcsb_id?: string;
    related_emdb_ids?: string[];
    water_entity_ids?: string[];
    /**
     * Unique integer value assigned to each PubMed record.
     */
    pubmed_id?: number;
  };
  rcsb_entry_info: {
    /**
     * The number of assemblies defined for this entry including the deposited assembly.
     */
    assembly_count?: number;
    /**
     * The number of distinct branched entities in the structure entry.
     */
    branched_entity_count?: number;
    /**
     * The maximum molecular mass (KDa) of a branched entity in the deposited structure entry.
     */
    branched_molecular_weight_maximum?: number;
    /**
     * The minimum molecular mass (KDa) of a branched entity in the deposited structure entry.
     */
    branched_molecular_weight_minimum?: number;
    /**
     * The number of cis-peptide linkages per deposited structure model.
     */
    cis_peptide_count?: number;
    /**
     * The number of heavy atom coordinates records per deposited structure model.
     */
    deposited_atom_count?: number;
    /**
     * The number of deuterated water molecules per deposited structure model.
     */
    deposited_deuterated_water_count?: number;
    /**
     * The number of hydrogen atom coordinates records per deposited structure model.
     */
    deposited_hydrogen_atom_count?: number;
    /**
     * The number of model structures deposited.
     */
    deposited_model_count?: number;
    /**
     * The number of modeled polymer monomers in the deposited coordinate data.
     *  This is the total count of monomers with reported coordinate data for all polymer
     *  entity instances in the deposited coordinate data.
     */
    deposited_modeled_polymer_monomer_count?: number;
    /**
     * The number of non-polymer instances in the deposited data set.
     *  This is the total count of non-polymer entity instances reported
     *  per deposited structure model.
     */
    deposited_nonpolymer_entity_instance_count?: number;
    /**
     * The number of polymer instances in the deposited data set.
     *  This is the total count of polymer entity instances reported
     *  per deposited structure model.
     */
    deposited_polymer_entity_instance_count?: number;
    /**
     * The number of polymer monomers in sample entity instances in the deposited data set.
     *  This is the total count of monomers for all polymer entity instances reported
     *  per deposited structure model.
     */
    deposited_polymer_monomer_count?: number;
    /**
     * The number of heavy solvent atom coordinates records per deposited structure model.
     */
    deposited_solvent_atom_count?: number;
    /**
     * The number of unmodeled polymer monomers in the deposited coordinate data. This is
     *  the total count of monomers with unreported coordinate data for all polymer
     *  entity instances per deposited structure model.
     */
    deposited_unmodeled_polymer_monomer_count?: number;
    /**
     * The maximum radiation wavelength in angstroms.
     */
    diffrn_radiation_wavelength_maximum?: number;
    /**
     * The minimum radiation wavelength in angstroms.
     */
    diffrn_radiation_wavelength_minimum?: number;
    /**
     * The number of disulfide bonds per deposited structure model.
     */
    disulfide_bond_count?: number;
    /**
     * The number of distinct polymer, non-polymer, branched molecular, and solvent entities per deposited structure model.
     */
    entity_count?: number;
    /**
     * The category of experimental method(s) used to determine the structure entry.
     */
    experimental_method?: "EM" | "Multiple methods" | "NMR" | "Neutron" | "Other" | "X-ray";
    /**
     * The number of experimental methods contributing data to the structure determination.
     */
    experimental_method_count?: number;
    /**
     * The number of intermolecular covalent bonds.
     */
    inter_mol_covalent_bond_count?: number;
    /**
     * The number of intermolecular metalic bonds.
     */
    inter_mol_metalic_bond_count?: number;
    /**
     * The molecular mass (KDa) of polymer and non-polymer entities (exclusive of solvent) in the deposited structure entry.
     */
    molecular_weight?: number;
    /**
     * Nucleic acid polymer entity type categories describing the entry.
     */
    na_polymer_entity_types?: "DNA (only)" | "DNA/RNA (only)" | "NA-hybrid (only)" | "Other" | "RNA (only)";
    ndb_struct_conf_na_feature_combined?: (
      | "a-form double helix"
      | "b-form double helix"
      | "bulge loop"
      | "double helix"
      | "four-way junction"
      | "hairpin loop"
      | "internal loop"
      | "mismatched base pair"
      | "other right-handed double helix"
      | "parallel strands"
      | "quadruple helix"
      | "tetraloop"
      | "three-way junction"
      | "triple helix"
      | "two-way junction"
      | "z-form double helix"
    )[];
    nonpolymer_bound_components?: string[];
    /**
     * The number of distinct non-polymer entities in the structure entry exclusive of solvent.
     */
    nonpolymer_entity_count?: number;
    /**
     * The maximum molecular mass (KDa) of a non-polymer entity in the deposited structure entry.
     */
    nonpolymer_molecular_weight_maximum?: number;
    /**
     * The minimum molecular mass (KDa) of a non-polymer entity in the deposited structure entry.
     */
    nonpolymer_molecular_weight_minimum?: number;
    /**
     * Categories describing the polymer entity composition for the entry.
     */
    polymer_composition?:
      | "DNA"
      | "DNA/RNA"
      | "NA-hybrid"
      | "NA/oligosaccharide"
      | "RNA"
      | "heteromeric protein"
      | "homomeric protein"
      | "oligosaccharide"
      | "other"
      | "other type composition"
      | "other type pair"
      | "protein/NA"
      | "protein/NA/oligosaccharide"
      | "protein/oligosaccharide";
    /**
     * The number of distinct polymer entities in the structure entry.
     */
    polymer_entity_count?: number;
    /**
     * The number of distinct DNA polymer entities.
     */
    polymer_entity_count_DNA?: number;
    /**
     * The number of distinct RNA polymer entities.
     */
    polymer_entity_count_RNA?: number;
    /**
     * The number of distinct nucleic acid polymer entities (DNA or RNA).
     */
    polymer_entity_count_nucleic_acid?: number;
    /**
     * The number of distinct hybrid nucleic acid polymer entities.
     */
    polymer_entity_count_nucleic_acid_hybrid?: number;
    /**
     * The number of distinct protein polymer entities.
     */
    polymer_entity_count_protein?: number;
    /**
     * The number of distinct taxonomies represented among the polymer entities in the entry.
     */
    polymer_entity_taxonomy_count?: number;
    /**
     * The maximum molecular mass (KDa) of a polymer entity in the deposited structure entry.
     */
    polymer_molecular_weight_maximum?: number;
    /**
     * The minimum molecular mass (KDa) of a polymer entity in the deposited structure entry.
     */
    polymer_molecular_weight_minimum?: number;
    /**
     * The maximum monomer count of a polymer entity per deposited structure model.
     */
    polymer_monomer_count_maximum?: number;
    /**
     * The minimum monomer count of a polymer entity per deposited structure model.
     */
    polymer_monomer_count_minimum?: number;
    resolution_combined?: number[];
    /**
     * Selected polymer entity type categories describing the entry.
     */
    selected_polymer_entity_types?:
      | "Nucleic acid (only)"
      | "Oligosaccharide (only)"
      | "Other"
      | "Protein (only)"
      | "Protein/NA"
      | "Protein/Oligosaccharide";
    software_programs_combined?: string[];
    /**
     * The number of distinct solvent entities per deposited structure model.
     */
    solvent_entity_count?: number;
    /**
     * Indicates if the structure was determined using experimental or computational methods.
     */
    structure_determination_methodology: "computational" | "experimental";
    /**
     * Indicates the priority of the value in _rcsb_entry_info.structure_determination_methodology.
     *  The lower the number the higher the priority.
     *  Priority values for "experimental" structures is currently set to 10 and
     *  the values for "computational" structures is set to 100.
     */
    structure_determination_methodology_priority?: number;
    diffrn_resolution_high?: {
      /**
       * The provenence source for the high resolution limit of data collection.
       */
      provenance_source?: "Depositor assigned" | "From refinement resolution cutoff" | "From the high resolution shell";
      /**
       * The high resolution limit of data collection.
       */
      value?: number;
    };
  };
  /**
   * @minItems 1
   */
  rcsb_ma_qa_metric_global?: [
    {
      /**
       * The model identifier.
       */
      model_id: number;
      ma_qa_metric_global?: {
        /**
         * Description of the global QA metric.
         */
        description?: string;
        /**
         * Name of the global QA metric.
         */
        name: string;
        /**
         * The type of global QA metric.
         */
        type:
          | "PAE"
          | "contact probability"
          | "distance"
          | "energy"
          | "ipTM"
          | "normalized score"
          | "other"
          | "pLDDT"
          | "pLDDT all-atom"
          | "pLDDT all-atom in [0,1]"
          | "pLDDT in [0,1]"
          | "pTM"
          | "zscore";
        /**
         * Details for other type of global QA metric.
         */
        type_other_details?: string;
        /**
         * Value of the global QA metric.
         */
        value: number;
      }[];
    },
    ...{
      /**
       * The model identifier.
       */
      model_id: number;
      ma_qa_metric_global?: {
        /**
         * Description of the global QA metric.
         */
        description?: string;
        /**
         * Name of the global QA metric.
         */
        name: string;
        /**
         * The type of global QA metric.
         */
        type:
          | "PAE"
          | "contact probability"
          | "distance"
          | "energy"
          | "ipTM"
          | "normalized score"
          | "other"
          | "pLDDT"
          | "pLDDT all-atom"
          | "pLDDT all-atom in [0,1]"
          | "pLDDT in [0,1]"
          | "pTM"
          | "zscore";
        /**
         * Details for other type of global QA metric.
         */
        type_other_details?: string;
        /**
         * Value of the global QA metric.
         */
        value: number;
      }[];
    }[]
  ];
  rcsb_primary_citation?: {
    /**
     * The International Standard Book Number (ISBN) code assigned to
     *  the book cited; relevant for books or book chapters.
     */
    book_id_ISBN?: string;
    /**
     * The name of the publisher of the citation; relevant
     *  for books or book chapters.
     */
    book_publisher?: string;
    /**
     * The location of the publisher of the citation; relevant
     *  for books or book chapters.
     */
    book_publisher_city?: string;
    /**
     * The title of the book in which the citation appeared; relevant
     *  for books or book chapters.
     */
    book_title?: string;
    /**
     * _rcsb_primary_citation.coordinate_linkage states whether this citation
     *  is concerned with precisely the set of coordinates given in the
     *  data block. If, for instance, the publication described the same
     *  structure, but the coordinates had undergone further refinement
     *  prior to the creation of the data block, the value of this data
     *  item would be 'no'.
     */
    coordinate_linkage?: "n" | "no" | "y" | "yes";
    /**
     * The country/region of publication; relevant for books
     *  and book chapters.
     */
    country?: string;
    /**
     * The value of _rcsb_primary_citation.id must uniquely identify a record in the
     *  CITATION list.
     *
     *  The _rcsb_primary_citation.id 'primary' should be used to indicate the
     *  citation that the author(s) consider to be the most pertinent to
     *  the contents of the data block.
     *
     *  Note that this item need not be a number; it can be any unique
     *  identifier.
     */
    id: string;
    /**
     * Abbreviated name of the cited journal as given in the
     *  Chemical Abstracts Service Source Index.
     */
    journal_abbrev?: string;
    /**
     * The American Society for Testing and Materials (ASTM) code
     *  assigned to the journal cited (also referred to as the CODEN
     *  designator of the Chemical Abstracts Service); relevant for
     *  journal articles.
     */
    journal_id_ASTM?: string;
    /**
     * The Cambridge Structural Database (CSD) code assigned to the
     *  journal cited; relevant for journal articles. This is also the
     *  system used at the Protein Data Bank (PDB).
     */
    journal_id_CSD?: string;
    /**
     * The International Standard Serial Number (ISSN) code assigned to
     *  the journal cited; relevant for journal articles.
     */
    journal_id_ISSN?: string;
    /**
     * Issue number of the journal cited; relevant for journal
     *  articles.
     */
    journal_issue?: string;
    /**
     * Volume number of the journal cited; relevant for journal
     *  articles.
     */
    journal_volume?: string;
    /**
     * Language in which the cited article is written.
     */
    language?: string;
    /**
     * The first page of the citation; relevant for journal
     *  articles, books and book chapters.
     */
    page_first?: string;
    /**
     * The last page of the citation; relevant for journal
     *  articles, books and book chapters.
     */
    page_last?: string;
    /**
     * Document Object Identifier used by doi.org to uniquely
     *  specify bibliographic entry.
     */
    pdbx_database_id_DOI?: string;
    /**
     * Ascession number used by PubMed to categorize a specific
     *  bibliographic entry.
     */
    pdbx_database_id_PubMed?: number;
    rcsb_ORCID_identifiers?: string[];
    rcsb_authors?: string[];
    /**
     * Normalized journal abbreviation.
     */
    rcsb_journal_abbrev?: string;
    /**
     * The title of the citation; relevant for journal articles, books
     *  and book chapters.
     */
    title?: string;
    /**
     * The year of the citation; relevant for journal articles, books
     *  and book chapters.
     */
    year?: number;
  };
  /**
   * @minItems 1
   */
  refine?: [
    {
      /**
       * The maximum isotropic displacement parameter (B value)
       *  found in the coordinate set.
       */
      B_iso_max?: number;
      /**
       * The mean isotropic displacement parameter (B value)
       *  for the coordinate set.
       */
      B_iso_mean?: number;
      /**
       * The minimum isotropic displacement parameter (B value)
       *  found in the coordinate set.
       */
      B_iso_min?: number;
      /**
       * The [1][1] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_1_1?: number;
      /**
       * The [1][2] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_1_2?: number;
      /**
       * The [1][3] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_1_3?: number;
      /**
       * The [2][2] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_2_2?: number;
      /**
       * The [2][3] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_2_3?: number;
      /**
       * The [3][3] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_3_3?: number;
      /**
       * The correlation coefficient between the observed and
       *              calculated structure factors for reflections included in
       *              the refinement.
       *
       *              The correlation coefficient is scale-independent and gives
       *              an idea of the quality of the refined model.
       *
       *                           sum~i~(Fo~i~ Fc~i~ - <Fo><Fc>)
       * R~corr~ = ------------------------------------------------------------
       *           SQRT{sum~i~(Fo~i~)^2^-<Fo>^2^} SQRT{sum~i~(Fc~i~)^2^-<Fc>^2^}
       *
       *              Fo = observed structure factors
       *              Fc = calculated structure factors
       *              <>   denotes average value
       *
       *              summation is over reflections included in the refinement
       */
      correlation_coeff_Fo_to_Fc?: number;
      /**
       * The correlation coefficient between the observed and
       *              calculated structure factors for reflections not included
       *              in the refinement (free reflections).
       *
       *               The correlation coefficient is scale-independent and gives
       *               an idea of the quality of the refined model.
       *
       *                           sum~i~(Fo~i~ Fc~i~ - <Fo><Fc>)
       * R~corr~ = ------------------------------------------------------------
       *           SQRT{sum~i~(Fo~i~)^2^-<Fo>^2^} SQRT{sum~i~(Fc~i~)^2^-<Fc>^2^}
       *
       *               Fo  = observed structure factors
       *               Fc  = calculated structure factors
       *               <>    denotes average value
       *
       *               summation is over reflections not included
       *               in the refinement (free reflections)
       */
      correlation_coeff_Fo_to_Fc_free?: number;
      /**
       * Description of special aspects of the refinement process.
       */
      details?: string;
      /**
       * Residual factor R for reflections that satisfy the resolution
       *  limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the test
       *  reflections (i.e. were excluded from the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       *
       *      sum|F~obs~ - F~calc~|
       *  R = ---------------------
       *           sum|F~obs~|
       *
       *  F~obs~  = the observed structure-factor amplitudes
       *  F~calc~ = the calculated structure-factor amplitudes
       *
       *  sum is taken over the specified reflections
       */
      ls_R_factor_R_free?: number;
      /**
       * The estimated error in _refine.ls_R_factor_R_free.
       *  The method used to estimate the error is described in the
       *  item _refine.ls_R_factor_R_free_error_details.
       */
      ls_R_factor_R_free_error?: number;
      /**
       * Special aspects of the method used to estimated the error in
       *  _refine.ls_R_factor_R_free.
       */
      ls_R_factor_R_free_error_details?: string;
      /**
       * Residual factor R for reflections that satisfy the resolution
       *  limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the working
       *  reflections (i.e. were included in the refinement)  when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       *
       *  _refine.ls_R_factor_obs should not be confused with
       *  _refine.ls_R_factor_R_work; the former reports the results of a
       *  refinement in which all observed reflections were used, the
       *  latter a refinement in which a subset of the observed
       *  reflections were excluded from refinement for the calculation
       *  of a 'free' R factor. However, it would be meaningful to quote
       *  both values if a 'free' R factor were calculated for most of
       *  the refinement, but all of the observed reflections were used
       *  in the final rounds of refinement; such a protocol should be
       *  explained in _refine.details.
       *
       *      sum|F~obs~ - F~calc~|
       *  R = ---------------------
       *           sum|F~obs~|
       *
       *  F~obs~  = the observed structure-factor amplitudes
       *  F~calc~ = the calculated structure-factor amplitudes
       *
       *  sum is taken over the specified reflections
       */
      ls_R_factor_R_work?: number;
      /**
       * Residual factor R for all reflections that satisfy the resolution
       *  limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low.
       *
       *      sum|F~obs~ - F~calc~|
       *  R = ---------------------
       *           sum|F~obs~|
       *
       *  F~obs~  = the observed structure-factor amplitudes
       *  F~calc~ = the calculated structure-factor amplitudes
       *
       *  sum is taken over the specified reflections
       */
      ls_R_factor_all?: number;
      /**
       * Residual factor R for reflections that satisfy the resolution
       *  limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion.
       *
       *  _refine.ls_R_factor_obs should not be confused with
       *  _refine.ls_R_factor_R_work; the former reports the results of a
       *  refinement in which all observed reflections were used, the
       *  latter a refinement in which a subset of the observed
       *  reflections were excluded from refinement for the calculation
       *  of a 'free' R factor. However, it would be meaningful to quote
       *  both values if a 'free' R factor were calculated for most of
       *  the refinement, but all of the observed reflections were used
       *  in the final rounds of refinement; such a protocol should be
       *  explained in _refine.details.
       *
       *      sum|F~obs~ - F~calc~|
       *  R = ---------------------
       *           sum|F~obs~|
       *
       *  F~obs~  = the observed structure-factor amplitudes
       *  F~calc~ = the calculated structure-factor amplitudes
       *
       *  sum is taken over the specified reflections
       */
      ls_R_factor_obs?: number;
      /**
       * The smallest value for the interplanar spacings for the
       *  reflection data used in the refinement in angstroms. This is
       *  called the highest resolution.
       */
      ls_d_res_high?: number;
      /**
       * The largest value for the interplanar spacings for
       *  the reflection data used in the refinement in angstroms.
       *  This is called the lowest resolution.
       */
      ls_d_res_low?: number;
      /**
       * Type of matrix used to accumulate the least-squares derivatives.
       */
      ls_matrix_type?: "atomblock" | "diagonal" | "full" | "fullcycle" | "sparse" | "userblock";
      /**
       * The number of parameters refined in the least-squares process.
       *  If possible, this number should include some contribution from
       *  the restrained parameters. The restrained parameters are
       *  distinct from the constrained parameters (where one or more
       *  parameters are linearly dependent on the refined value of
       *  another). Least-squares restraints often depend on geometry or
       *  energy considerations and this makes their direct contribution
       *  to this number, and to the goodness-of-fit calculation,
       *  difficult to assess.
       */
      ls_number_parameters?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the test
       *  reflections (i.e. were excluded from the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       */
      ls_number_reflns_R_free?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the working
       *  reflections (i.e. were included in the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       */
      ls_number_reflns_R_work?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low.
       */
      ls_number_reflns_all?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion.
       */
      ls_number_reflns_obs?: number;
      /**
       * The number of restrained parameters. These are parameters which
       *  are not directly dependent on another refined parameter.
       *  Restrained parameters often involve geometry or energy
       *  dependencies.
       *  See also _atom_site.constraints and _atom_site.refinement_flags.
       *  A general description of refinement constraints may appear in
       *  _refine.details.
       */
      ls_number_restraints?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the test
       *  reflections (i.e. were excluded from the refinement) when the
       *  refinement included the calculation of a 'free' R factor,
       *  expressed as a percentage of the number of geometrically
       *  observable reflections that satisfy the resolution limits.
       */
      ls_percent_reflns_R_free?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion, expressed as a percentage of the
       *  number of geometrically observable reflections that satisfy
       *  the resolution limits.
       */
      ls_percent_reflns_obs?: number;
      /**
       * The ratio of the total number of observations of the
       *  reflections that satisfy the resolution limits established by
       *  _refine.ls_d_res_high and _refine.ls_d_res_low to the number
       *  of crystallographically unique reflections that satisfy the
       *  same limits.
       */
      ls_redundancy_reflns_all?: number;
      /**
       * The ratio of the total number of observations of the
       *  reflections that satisfy the resolution limits established by
       *  _refine.ls_d_res_high and _refine.ls_d_res_low and the
       *  observation limit established by _reflns.observed_criterion to
       *  the number of crystallographically unique reflections that
       *  satisfy the same limits.
       */
      ls_redundancy_reflns_obs?: number;
      /**
       * Weighted residual factor wR for reflections that satisfy the
       *  resolution limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the test
       *  reflections (i.e. were excluded from the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       *
       *       ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^
       *  wR = ( ---------------------------- )
       *       (        sum|w Y~obs~^2^|      )
       *
       *  Y~obs~  = the observed amplitude specified by
       *            _refine.ls_structure_factor_coef
       *  Y~calc~ = the calculated amplitude specified by
       *            _refine.ls_structure_factor_coef
       *  w       = the least-squares weight
       *
       *  sum is taken over the specified reflections
       */
      ls_wR_factor_R_free?: number;
      /**
       * Weighted residual factor wR for reflections that satisfy the
       *  resolution limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the working
       *  reflections (i.e. were included in the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       *
       *       ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^
       *  wR = ( ---------------------------- )
       *       (        sum|w Y~obs~^2^|      )
       *
       *  Y~obs~  = the observed amplitude specified by
       *            _refine.ls_structure_factor_coef
       *  Y~calc~ = the calculated amplitude specified by
       *            _refine.ls_structure_factor_coef
       *  w       = the least-squares weight
       *
       *  sum is taken over the specified reflections
       */
      ls_wR_factor_R_work?: number;
      /**
       * The maximum value for occupancy found in the coordinate set.
       */
      occupancy_max?: number;
      /**
       * The minimum value for occupancy found in the coordinate set.
       */
      occupancy_min?: number;
      /**
       * Average figure of merit of phases of reflections not included
       *  in the refinement.
       *
       *  This value is derived from the likelihood function.
       *
       *  FOM           = I~1~(X)/I~0~(X)
       *
       *  I~0~, I~1~     = zero- and first-order modified Bessel functions
       *                  of the first kind
       *  X              = sigma~A~ |E~o~| |E~c~|/SIGMA
       *  E~o~, E~c~     = normalized observed and calculated structure
       *                  factors
       *  sigma~A~       = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)
       *                  estimated using maximum likelihood
       *  Sigma~P~       = sum~{atoms in model}~ f^2^
       *  Sigma~N~       = sum~{atoms in crystal}~ f^2^
       *  f              = form factor of atoms
       *  delta~x~       = expected error
       *  SIGMA          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]
       *  sigma~{E;exp}~ = uncertainties of normalized observed
       *                  structure factors
       *  epsilon       = multiplicity of the diffracting plane
       *
       *  Ref: Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).
       *       Acta Cryst. D53, 240-255.
       */
      overall_FOM_free_R_set?: number;
      /**
       * Average figure of merit of phases of reflections included in
       *  the refinement.
       *
       *  This value is derived from the likelihood function.
       *
       *  FOM           = I~1~(X)/I~0~(X)
       *
       *  I~0~, I~1~     = zero- and first-order modified Bessel functions
       *                  of the first kind
       *  X              = sigma~A~ |E~o~| |E~c~|/SIGMA
       *  E~o~, E~c~     = normalized observed and calculated structure
       *                  factors
       *  sigma~A~       = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)
       *                  estimated using maximum likelihood
       *  Sigma~P~       = sum~{atoms in model}~ f^2^
       *  Sigma~N~       = sum~{atoms in crystal}~ f^2^
       *  f              = form factor of atoms
       *  delta~x~       = expected error
       *  SIGMA          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]
       *  sigma~{E;exp}~ = uncertainties of normalized observed
       *                  structure factors
       *  epsilon       = multiplicity of the diffracting plane
       *
       *  Ref: Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).
       *       Acta Cryst. D53, 240-255.
       */
      overall_FOM_work_R_set?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *            of the displacement parameters based on a maximum-likelihood
       *            residual.
       *
       *            The overall standard uncertainty (sigma~B~)^2^ gives an idea
       *            of the uncertainty in the B values of averagely defined
       *            atoms (atoms with B values equal to the average B value).
       *
       *                                          N~a~
       * (sigma~B~)^2^ = 8 ----------------------------------------------
       *                   sum~i~ {[1/Sigma - (E~o~)^2^ (1-m^2^)](SUM_AS)s^4^}
       *
       *            N~a~           = number of atoms
       *            E~o~           = normalized structure factors
       *            m              = figure of merit of phases of reflections
       *                             included in the summation
       *            s              = reciprocal-space vector
       *
       *            SUM_AS         = (sigma~A~)^2^/Sigma^2^
       *            Sigma          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]
       *            sigma~{E;exp}~  = experimental uncertainties of normalized
       *                             structure factors
       *            sigma~A~        = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)
       *                             estimated using maximum likelihood
       *            Sigma~P~        = sum~{atoms in model}~ f^2^
       *            Sigma~N~        = sum~{atoms in crystal}~ f^2^
       *            f               = atom form factor
       *            delta~x~        = expected error
       *            epsilon         = multiplicity of diffracting plane
       *
       *            summation is over all reflections included in refinement
       *
       *            Ref: (sigma~A~ estimation) "Refinement of macromolecular
       *                 structures by the maximum-likelihood method",
       *                 Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).
       *                 Acta Cryst. D53, 240-255.
       *
       *                 (SU B estimation) Murshudov, G. N. & Dodson,
       *                 E. J. (1997). Simplified error estimation a la
       *                 Cruickshank in macromolecular crystallography.
       *                 CCP4 Newsletter on Protein Crystallography, No. 33,
       *                 January 1997, pp. 31-39.
       *
       *                http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html
       */
      overall_SU_B?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *            of the positional parameters based on a maximum likelihood
       *            residual.
       *
       *            The overall standard uncertainty (sigma~X~)^2^ gives an
       *            idea of the uncertainty in the position of averagely
       *            defined atoms (atoms with B values equal to average B value)
       *
       *                  3                         N~a~
       * (sigma~X~)^2^  = ---------------------------------------------------------
       *                  8 pi^2^ sum~i~ {[1/Sigma - (E~o~)^2^ (1-m^2^)](SUM_AS)s^2^}
       *
       *            N~a~           = number of atoms
       *            E~o~           = normalized structure factors
       *            m              = figure of merit of phases of reflections
       *                             included in the summation
       *            s              = reciprocal-space vector
       *
       *            SUM_AS         = (sigma~A~)^2^/Sigma^2^
       *            Sigma          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]
       *            sigma~{E;exp}~  = experimental uncertainties of normalized
       *                             structure factors
       *            sigma~A~        = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)
       *                             estimated using maximum likelihood
       *            Sigma~P~        = sum~{atoms in model}~ f^2^
       *            Sigma~N~        = sum~{atoms in crystal}~ f^2^
       *            f               = atom form factor
       *            delta~x~        = expected error
       *            epsilon         = multiplicity of diffracting plane
       *
       *            summation is over all reflections included in refinement
       *
       *            Ref: (sigma_A estimation) "Refinement of macromolecular
       *                 structures by the maximum-likelihood method",
       *                 Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).
       *                 Acta Cryst. D53, 240-255.
       *
       *                 (SU ML estimation) Murshudov, G. N. & Dodson,
       *                 E. J. (1997). Simplified error estimation a la
       *                 Cruickshank in macromolecular crystallography.
       *                 CCP4 Newsletter on Protein Crystallography, No. 33,
       *                 January 1997, pp. 31-39.
       *
       *                http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html
       */
      overall_SU_ML?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the crystallographic
       *  R value, expressed in a formalism known as the dispersion
       *  precision indicator (DPI).
       *
       *  The overall standard uncertainty (sigma~B~) gives an idea
       *  of the uncertainty in the B values of averagely defined
       *  atoms (atoms with B values equal to the average B value).
       *
       *                         N~a~
       *  (sigma~B~)^2^ = 0.65 ---------- (R~value~)^2^ (D~min~)^2^ C^-2/3^
       *                       (N~o~-N~p~)
       *
       *
       *  N~a~     = number of atoms included in refinement
       *  N~o~     = number of observations
       *  N~p~     = number of parameters refined
       *  R~value~ = conventional crystallographic R value
       *  D~min~   = maximum resolution
       *  C        = completeness of data
       *
       *  Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.
       *
       *       Murshudov, G. N. & Dodson,
       *       E. J. (1997). Simplified error estimation a la
       *       Cruickshank in macromolecular crystallography.
       *       CCP4 Newsletter on Protein Crystallography, No. 33,
       *       January 1997, pp. 31-39.
       *
       *      http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html
       */
      overall_SU_R_Cruickshank_DPI?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the free R value.
       *
       *  The overall standard uncertainty (sigma~B~) gives an idea
       *  of the uncertainty in the B values of averagely defined
       *  atoms (atoms with B values equal to the average B value).
       *
       *                         N~a~
       *  (sigma~B~)^2^ = 0.65 ---------- (R~free~)^2^ (D~min~)^2^ C^-2/3^
       *                       (N~o~-N~p~)
       *
       *
       *  N~a~     = number of atoms included in refinement
       *  N~o~     = number of observations
       *  N~p~     = number of parameters refined
       *  R~free~  = conventional free crystallographic R value calculated
       *           using reflections not included in refinement
       *  D~min~   = maximum resolution
       *  C        = completeness of data
       *
       *  Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.
       *
       *       Murshudov, G. N. & Dodson,
       *       E. J. (1997). Simplified error estimation a la
       *       Cruickshank in macromolecular crystallography.
       *       CCP4 Newsletter on Protein Crystallography, No. 33,
       *       January 1997, pp. 31-39.
       *
       *      http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html
       */
      overall_SU_R_free?: number;
      /**
       * Details of the manner in which the cross validation
       *  reflections were selected.
       */
      pdbx_R_Free_selection_details?: string;
      /**
       * A flag for TLS refinements identifying the type of atomic displacement parameters stored
       *  in _atom_site.B_iso_or_equiv.
       */
      pdbx_TLS_residual_ADP_flag?: "LIKELY RESIDUAL" | "UNVERIFIED";
      /**
       * Average Fourier Shell Correlation (avgFSC) between model and
       *  observed structure factors for reflections not included in refinement.
       *
       *  The average FSC is a measure of the agreement between observed
       *  and calculated structure factors.
       *
       *                   sum(N~i~ FSC~free-i~)
       *  avgFSC~free~   = ---------------------
       *                   sum(N~i~)
       *
       *
       *  N~i~          = the number of free reflections in the resolution shell i
       *  FSC~free-i~   = FSC for free reflections in the i-th resolution shell calculated as:
       *
       *                 (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))
       *  FSC~free-i~  = -------------------------------------------
       *                 (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^
       *
       *  |F~o~|   = amplitude of observed structure factor
       *  |F~c~|   = amplitude of calculated structure factor
       *  phi~o~   = phase of observed structure factor
       *  phi~c~   = phase of calculated structure factor
       *  fom      = figure of merit of the experimental phases.
       *
       *  Summation of FSC~free-i~ is carried over all free reflections in the resolution shell.
       *
       *  Summation of avgFSC~free~ is carried over all resolution shells.
       *
       *
       *  Ref:  Rosenthal P.B., Henderson R.
       *        "Optimal determination of particle orientation, absolute hand,
       *        and contrast loss in single-particle electron cryomicroscopy.
       *        Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).
       */
      pdbx_average_fsc_free?: number;
      /**
       * Overall average Fourier Shell Correlation (avgFSC) between model and
       *  observed structure factors for all reflections.
       *
       *  The average FSC is a measure of the agreement between observed
       *  and calculated structure factors.
       *
       *             sum(N~i~ FSC~i~)
       *  avgFSC   = ----------------
       *             sum(N~i~)
       *
       *
       *  N~i~     = the number of all reflections in the resolution shell i
       *  FSC~i~   = FSC for all reflections in the i-th resolution shell calculated as:
       *
       *            (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))
       *  FSC~i~  = -------------------------------------------
       *            (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^
       *
       *  |F~o~|   = amplitude of observed structure factor
       *  |F~c~|   = amplitude of calculated structure factor
       *  phi~o~   = phase of observed structure factor
       *  phi~c~   = phase of calculated structure factor
       *  fom      = figure of merit of the experimental phases.
       *
       *  Summation of FSC~i~ is carried over all reflections in the resolution shell.
       *
       *  Summation of avgFSC is carried over all resolution shells.
       *
       *
       *  Ref:  Rosenthal P.B., Henderson R.
       *        "Optimal determination of particle orientation, absolute hand,
       *        and contrast loss in single-particle electron cryomicroscopy.
       *        Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).
       */
      pdbx_average_fsc_overall?: number;
      /**
       * Average Fourier Shell Correlation (avgFSC) between model and
       *  observed structure factors for reflections included in refinement.
       *
       *  The average FSC is a measure of the agreement between observed
       *  and calculated structure factors.
       *
       *                   sum(N~i~ FSC~work-i~)
       *  avgFSC~work~   = ---------------------
       *                   sum(N~i~)
       *
       *
       *  N~i~          = the number of working reflections in the resolution shell i
       *  FSC~work-i~   = FSC for working reflections in the i-th resolution shell calculated as:
       *
       *                 (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))
       *  FSC~work-i~  = -------------------------------------------
       *                 (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^
       *
       *  |F~o~|   = amplitude of observed structure factor
       *  |F~c~|   = amplitude of calculated structure factor
       *  phi~o~   = phase of observed structure factor
       *  phi~c~   = phase of calculated structure factor
       *  fom      = figure of merit of the experimental phases.
       *
       *  Summation of FSC~work-i~ is carried over all working reflections in the resolution shell.
       *
       *  Summation of avgFSC~work~ is carried over all resolution shells.
       *
       *
       *  Ref:  Rosenthal P.B., Henderson R.
       *        "Optimal determination of particle orientation, absolute hand,
       *        and contrast loss in single-particle electron cryomicroscopy.
       *        Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).
       */
      pdbx_average_fsc_work?: number;
      /**
       * Value of F at "high end" of data cutoff.
       */
      pdbx_data_cutoff_high_absF?: number;
      /**
       * Value of RMS |F| used as high data cutoff.
       */
      pdbx_data_cutoff_high_rms_absF?: number;
      /**
       * Value of F at "low end" of data cutoff.
       */
      pdbx_data_cutoff_low_absF?: number;
      pdbx_diffrn_id?: string[];
      /**
       * Whether the structure was refined with indvidual
       * isotropic, anisotropic or overall temperature factor.
       */
      pdbx_isotropic_thermal_model?: string;
      /**
       * Whether the cross validataion method was used through
       * out or only at the end.
       */
      pdbx_ls_cross_valid_method?: string;
      /**
       * Data cutoff (SIGMA(F))
       */
      pdbx_ls_sigma_F?: number;
      /**
       * Data cutoff (SIGMA(F^2))
       */
      pdbx_ls_sigma_Fsqd?: number;
      /**
       * Data cutoff (SIGMA(I))
       */
      pdbx_ls_sigma_I?: number;
      /**
       * Method(s) used to determine the structure.
       */
      pdbx_method_to_determine_struct?: string;
      /**
       * Overall estimated standard uncertainties of positional
       *  parameters based on R value.
       */
      pdbx_overall_ESU_R?: number;
      /**
       * Overall estimated standard uncertainties of positional parameters based on R free value.
       */
      pdbx_overall_ESU_R_Free?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the crystallographic
       *  R value, expressed in a formalism known as the dispersion
       *  precision indicator (DPI).
       *
       *  Ref: Blow, D (2002) Acta Cryst. D58, 792-797
       */
      pdbx_overall_SU_R_Blow_DPI?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the crystallographic
       *  R-free value, expressed in a formalism known as the dispersion
       *  precision indicator (DPI).
       *
       *  Ref: Blow, D (2002) Acta Cryst. D58, 792-797
       */
      pdbx_overall_SU_R_free_Blow_DPI?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the crystallographic
       *  R-free value, expressed in a formalism known as the dispersion
       *  precision indicator (DPI).
       *
       *  Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.
       */
      pdbx_overall_SU_R_free_Cruickshank_DPI?: number;
      /**
       * The overall phase error for all reflections after refinement using
       *  the current refinement target.
       */
      pdbx_overall_phase_error?: number;
      /**
       * This data item uniquely identifies a refinement within an entry.
       *  _refine.pdbx_refine_id can be used to distinguish the results of
       *  joint refinements.
       */
      pdbx_refine_id: string;
      /**
       * For bulk solvent mask calculation, the amount that the ionic radii of atoms, which can be ions, are increased used.
       */
      pdbx_solvent_ion_probe_radii?: number;
      /**
       * For bulk solvent mask calculation, amount mask is shrunk after taking away atoms with new radii and a constant value assigned to this new region.
       */
      pdbx_solvent_shrinkage_radii?: number;
      /**
       * For bulk solvent mask calculation, the value by which the vdw radii of non-ion atoms (like carbon) are increased and used.
       */
      pdbx_solvent_vdw_probe_radii?: number;
      /**
       * Starting model for refinement.  Starting model for
       *  molecular replacement should refer to a previous
       *  structure or experiment.
       */
      pdbx_starting_model?: string;
      /**
       * Special case of stereochemistry target values used
       * in SHELXL refinement.
       */
      pdbx_stereochem_target_val_spec_case?: string;
      /**
       * Stereochemistry target values used in refinement.
       */
      pdbx_stereochemistry_target_values?: string;
      /**
       * Special aspects of the solvent model used during refinement.
       */
      solvent_model_details?: string;
      /**
       * The value of the BSOL solvent-model parameter describing
       *  the average isotropic displacement parameter of disordered
       *  solvent atoms.
       *
       *  This is one of the two parameters (the other is
       *  _refine.solvent_model_param_ksol) in Tronrud's method of
       *  modelling the contribution of bulk solvent to the
       *  scattering. The standard scale factor is modified according
       *  to the expression
       *
       *      k0 exp(-B0 * s^2^)[1-KSOL * exp(-BSOL * s^2^)]
       *
       *  where k0 and B0 are the scale factors for the protein.
       *
       *  Ref: Tronrud, D. E. (1997). Methods Enzymol. 277, 243-268.
       */
      solvent_model_param_bsol?: number;
      /**
       * The value of the KSOL solvent-model parameter describing
       *  the ratio of the electron density in the bulk solvent to the
       *  electron density in the molecular solute.
       *
       *  This is one of the two parameters (the other is
       *  _refine.solvent_model_param_bsol) in Tronrud's method of
       *  modelling the contribution of bulk solvent to the
       *  scattering. The standard scale factor is modified according
       *  to the expression
       *
       *      k0 exp(-B0 * s^2^)[1-KSOL * exp(-BSOL * s^2^)]
       *
       *  where k0 and B0 are the scale factors for the protein.
       *
       *  Ref: Tronrud, D. E. (1997). Methods Enzymol. 277, 243-268.
       */
      solvent_model_param_ksol?: number;
    },
    ...{
      /**
       * The maximum isotropic displacement parameter (B value)
       *  found in the coordinate set.
       */
      B_iso_max?: number;
      /**
       * The mean isotropic displacement parameter (B value)
       *  for the coordinate set.
       */
      B_iso_mean?: number;
      /**
       * The minimum isotropic displacement parameter (B value)
       *  found in the coordinate set.
       */
      B_iso_min?: number;
      /**
       * The [1][1] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_1_1?: number;
      /**
       * The [1][2] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_1_2?: number;
      /**
       * The [1][3] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_1_3?: number;
      /**
       * The [2][2] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_2_2?: number;
      /**
       * The [2][3] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_2_3?: number;
      /**
       * The [3][3] element of the matrix that defines the overall
       *  anisotropic displacement model if one was refined for this
       *  structure.
       */
      aniso_B_3_3?: number;
      /**
       * The correlation coefficient between the observed and
       *              calculated structure factors for reflections included in
       *              the refinement.
       *
       *              The correlation coefficient is scale-independent and gives
       *              an idea of the quality of the refined model.
       *
       *                           sum~i~(Fo~i~ Fc~i~ - <Fo><Fc>)
       * R~corr~ = ------------------------------------------------------------
       *           SQRT{sum~i~(Fo~i~)^2^-<Fo>^2^} SQRT{sum~i~(Fc~i~)^2^-<Fc>^2^}
       *
       *              Fo = observed structure factors
       *              Fc = calculated structure factors
       *              <>   denotes average value
       *
       *              summation is over reflections included in the refinement
       */
      correlation_coeff_Fo_to_Fc?: number;
      /**
       * The correlation coefficient between the observed and
       *              calculated structure factors for reflections not included
       *              in the refinement (free reflections).
       *
       *               The correlation coefficient is scale-independent and gives
       *               an idea of the quality of the refined model.
       *
       *                           sum~i~(Fo~i~ Fc~i~ - <Fo><Fc>)
       * R~corr~ = ------------------------------------------------------------
       *           SQRT{sum~i~(Fo~i~)^2^-<Fo>^2^} SQRT{sum~i~(Fc~i~)^2^-<Fc>^2^}
       *
       *               Fo  = observed structure factors
       *               Fc  = calculated structure factors
       *               <>    denotes average value
       *
       *               summation is over reflections not included
       *               in the refinement (free reflections)
       */
      correlation_coeff_Fo_to_Fc_free?: number;
      /**
       * Description of special aspects of the refinement process.
       */
      details?: string;
      /**
       * Residual factor R for reflections that satisfy the resolution
       *  limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the test
       *  reflections (i.e. were excluded from the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       *
       *      sum|F~obs~ - F~calc~|
       *  R = ---------------------
       *           sum|F~obs~|
       *
       *  F~obs~  = the observed structure-factor amplitudes
       *  F~calc~ = the calculated structure-factor amplitudes
       *
       *  sum is taken over the specified reflections
       */
      ls_R_factor_R_free?: number;
      /**
       * The estimated error in _refine.ls_R_factor_R_free.
       *  The method used to estimate the error is described in the
       *  item _refine.ls_R_factor_R_free_error_details.
       */
      ls_R_factor_R_free_error?: number;
      /**
       * Special aspects of the method used to estimated the error in
       *  _refine.ls_R_factor_R_free.
       */
      ls_R_factor_R_free_error_details?: string;
      /**
       * Residual factor R for reflections that satisfy the resolution
       *  limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the working
       *  reflections (i.e. were included in the refinement)  when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       *
       *  _refine.ls_R_factor_obs should not be confused with
       *  _refine.ls_R_factor_R_work; the former reports the results of a
       *  refinement in which all observed reflections were used, the
       *  latter a refinement in which a subset of the observed
       *  reflections were excluded from refinement for the calculation
       *  of a 'free' R factor. However, it would be meaningful to quote
       *  both values if a 'free' R factor were calculated for most of
       *  the refinement, but all of the observed reflections were used
       *  in the final rounds of refinement; such a protocol should be
       *  explained in _refine.details.
       *
       *      sum|F~obs~ - F~calc~|
       *  R = ---------------------
       *           sum|F~obs~|
       *
       *  F~obs~  = the observed structure-factor amplitudes
       *  F~calc~ = the calculated structure-factor amplitudes
       *
       *  sum is taken over the specified reflections
       */
      ls_R_factor_R_work?: number;
      /**
       * Residual factor R for all reflections that satisfy the resolution
       *  limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low.
       *
       *      sum|F~obs~ - F~calc~|
       *  R = ---------------------
       *           sum|F~obs~|
       *
       *  F~obs~  = the observed structure-factor amplitudes
       *  F~calc~ = the calculated structure-factor amplitudes
       *
       *  sum is taken over the specified reflections
       */
      ls_R_factor_all?: number;
      /**
       * Residual factor R for reflections that satisfy the resolution
       *  limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion.
       *
       *  _refine.ls_R_factor_obs should not be confused with
       *  _refine.ls_R_factor_R_work; the former reports the results of a
       *  refinement in which all observed reflections were used, the
       *  latter a refinement in which a subset of the observed
       *  reflections were excluded from refinement for the calculation
       *  of a 'free' R factor. However, it would be meaningful to quote
       *  both values if a 'free' R factor were calculated for most of
       *  the refinement, but all of the observed reflections were used
       *  in the final rounds of refinement; such a protocol should be
       *  explained in _refine.details.
       *
       *      sum|F~obs~ - F~calc~|
       *  R = ---------------------
       *           sum|F~obs~|
       *
       *  F~obs~  = the observed structure-factor amplitudes
       *  F~calc~ = the calculated structure-factor amplitudes
       *
       *  sum is taken over the specified reflections
       */
      ls_R_factor_obs?: number;
      /**
       * The smallest value for the interplanar spacings for the
       *  reflection data used in the refinement in angstroms. This is
       *  called the highest resolution.
       */
      ls_d_res_high?: number;
      /**
       * The largest value for the interplanar spacings for
       *  the reflection data used in the refinement in angstroms.
       *  This is called the lowest resolution.
       */
      ls_d_res_low?: number;
      /**
       * Type of matrix used to accumulate the least-squares derivatives.
       */
      ls_matrix_type?: "atomblock" | "diagonal" | "full" | "fullcycle" | "sparse" | "userblock";
      /**
       * The number of parameters refined in the least-squares process.
       *  If possible, this number should include some contribution from
       *  the restrained parameters. The restrained parameters are
       *  distinct from the constrained parameters (where one or more
       *  parameters are linearly dependent on the refined value of
       *  another). Least-squares restraints often depend on geometry or
       *  energy considerations and this makes their direct contribution
       *  to this number, and to the goodness-of-fit calculation,
       *  difficult to assess.
       */
      ls_number_parameters?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the test
       *  reflections (i.e. were excluded from the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       */
      ls_number_reflns_R_free?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the working
       *  reflections (i.e. were included in the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       */
      ls_number_reflns_R_work?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low.
       */
      ls_number_reflns_all?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion.
       */
      ls_number_reflns_obs?: number;
      /**
       * The number of restrained parameters. These are parameters which
       *  are not directly dependent on another refined parameter.
       *  Restrained parameters often involve geometry or energy
       *  dependencies.
       *  See also _atom_site.constraints and _atom_site.refinement_flags.
       *  A general description of refinement constraints may appear in
       *  _refine.details.
       */
      ls_number_restraints?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the test
       *  reflections (i.e. were excluded from the refinement) when the
       *  refinement included the calculation of a 'free' R factor,
       *  expressed as a percentage of the number of geometrically
       *  observable reflections that satisfy the resolution limits.
       */
      ls_percent_reflns_R_free?: number;
      /**
       * The number of reflections that satisfy the resolution limits
       *  established by _refine.ls_d_res_high and _refine.ls_d_res_low
       *  and the observation limit established by
       *  _reflns.observed_criterion, expressed as a percentage of the
       *  number of geometrically observable reflections that satisfy
       *  the resolution limits.
       */
      ls_percent_reflns_obs?: number;
      /**
       * The ratio of the total number of observations of the
       *  reflections that satisfy the resolution limits established by
       *  _refine.ls_d_res_high and _refine.ls_d_res_low to the number
       *  of crystallographically unique reflections that satisfy the
       *  same limits.
       */
      ls_redundancy_reflns_all?: number;
      /**
       * The ratio of the total number of observations of the
       *  reflections that satisfy the resolution limits established by
       *  _refine.ls_d_res_high and _refine.ls_d_res_low and the
       *  observation limit established by _reflns.observed_criterion to
       *  the number of crystallographically unique reflections that
       *  satisfy the same limits.
       */
      ls_redundancy_reflns_obs?: number;
      /**
       * Weighted residual factor wR for reflections that satisfy the
       *  resolution limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the test
       *  reflections (i.e. were excluded from the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       *
       *       ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^
       *  wR = ( ---------------------------- )
       *       (        sum|w Y~obs~^2^|      )
       *
       *  Y~obs~  = the observed amplitude specified by
       *            _refine.ls_structure_factor_coef
       *  Y~calc~ = the calculated amplitude specified by
       *            _refine.ls_structure_factor_coef
       *  w       = the least-squares weight
       *
       *  sum is taken over the specified reflections
       */
      ls_wR_factor_R_free?: number;
      /**
       * Weighted residual factor wR for reflections that satisfy the
       *  resolution limits established by _refine.ls_d_res_high and
       *  _refine.ls_d_res_low and the observation limit established by
       *  _reflns.observed_criterion, and that were used as the working
       *  reflections (i.e. were included in the refinement) when the
       *  refinement included the calculation of a 'free' R factor.
       *  Details of how reflections were assigned to the working and
       *  test sets are given in _reflns.R_free_details.
       *
       *       ( sum|w |Y~obs~ - Y~calc~|^2^| )^1/2^
       *  wR = ( ---------------------------- )
       *       (        sum|w Y~obs~^2^|      )
       *
       *  Y~obs~  = the observed amplitude specified by
       *            _refine.ls_structure_factor_coef
       *  Y~calc~ = the calculated amplitude specified by
       *            _refine.ls_structure_factor_coef
       *  w       = the least-squares weight
       *
       *  sum is taken over the specified reflections
       */
      ls_wR_factor_R_work?: number;
      /**
       * The maximum value for occupancy found in the coordinate set.
       */
      occupancy_max?: number;
      /**
       * The minimum value for occupancy found in the coordinate set.
       */
      occupancy_min?: number;
      /**
       * Average figure of merit of phases of reflections not included
       *  in the refinement.
       *
       *  This value is derived from the likelihood function.
       *
       *  FOM           = I~1~(X)/I~0~(X)
       *
       *  I~0~, I~1~     = zero- and first-order modified Bessel functions
       *                  of the first kind
       *  X              = sigma~A~ |E~o~| |E~c~|/SIGMA
       *  E~o~, E~c~     = normalized observed and calculated structure
       *                  factors
       *  sigma~A~       = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)
       *                  estimated using maximum likelihood
       *  Sigma~P~       = sum~{atoms in model}~ f^2^
       *  Sigma~N~       = sum~{atoms in crystal}~ f^2^
       *  f              = form factor of atoms
       *  delta~x~       = expected error
       *  SIGMA          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]
       *  sigma~{E;exp}~ = uncertainties of normalized observed
       *                  structure factors
       *  epsilon       = multiplicity of the diffracting plane
       *
       *  Ref: Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).
       *       Acta Cryst. D53, 240-255.
       */
      overall_FOM_free_R_set?: number;
      /**
       * Average figure of merit of phases of reflections included in
       *  the refinement.
       *
       *  This value is derived from the likelihood function.
       *
       *  FOM           = I~1~(X)/I~0~(X)
       *
       *  I~0~, I~1~     = zero- and first-order modified Bessel functions
       *                  of the first kind
       *  X              = sigma~A~ |E~o~| |E~c~|/SIGMA
       *  E~o~, E~c~     = normalized observed and calculated structure
       *                  factors
       *  sigma~A~       = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)
       *                  estimated using maximum likelihood
       *  Sigma~P~       = sum~{atoms in model}~ f^2^
       *  Sigma~N~       = sum~{atoms in crystal}~ f^2^
       *  f              = form factor of atoms
       *  delta~x~       = expected error
       *  SIGMA          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]
       *  sigma~{E;exp}~ = uncertainties of normalized observed
       *                  structure factors
       *  epsilon       = multiplicity of the diffracting plane
       *
       *  Ref: Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).
       *       Acta Cryst. D53, 240-255.
       */
      overall_FOM_work_R_set?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *            of the displacement parameters based on a maximum-likelihood
       *            residual.
       *
       *            The overall standard uncertainty (sigma~B~)^2^ gives an idea
       *            of the uncertainty in the B values of averagely defined
       *            atoms (atoms with B values equal to the average B value).
       *
       *                                          N~a~
       * (sigma~B~)^2^ = 8 ----------------------------------------------
       *                   sum~i~ {[1/Sigma - (E~o~)^2^ (1-m^2^)](SUM_AS)s^4^}
       *
       *            N~a~           = number of atoms
       *            E~o~           = normalized structure factors
       *            m              = figure of merit of phases of reflections
       *                             included in the summation
       *            s              = reciprocal-space vector
       *
       *            SUM_AS         = (sigma~A~)^2^/Sigma^2^
       *            Sigma          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]
       *            sigma~{E;exp}~  = experimental uncertainties of normalized
       *                             structure factors
       *            sigma~A~        = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)
       *                             estimated using maximum likelihood
       *            Sigma~P~        = sum~{atoms in model}~ f^2^
       *            Sigma~N~        = sum~{atoms in crystal}~ f^2^
       *            f               = atom form factor
       *            delta~x~        = expected error
       *            epsilon         = multiplicity of diffracting plane
       *
       *            summation is over all reflections included in refinement
       *
       *            Ref: (sigma~A~ estimation) "Refinement of macromolecular
       *                 structures by the maximum-likelihood method",
       *                 Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).
       *                 Acta Cryst. D53, 240-255.
       *
       *                 (SU B estimation) Murshudov, G. N. & Dodson,
       *                 E. J. (1997). Simplified error estimation a la
       *                 Cruickshank in macromolecular crystallography.
       *                 CCP4 Newsletter on Protein Crystallography, No. 33,
       *                 January 1997, pp. 31-39.
       *
       *                http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html
       */
      overall_SU_B?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *            of the positional parameters based on a maximum likelihood
       *            residual.
       *
       *            The overall standard uncertainty (sigma~X~)^2^ gives an
       *            idea of the uncertainty in the position of averagely
       *            defined atoms (atoms with B values equal to average B value)
       *
       *                  3                         N~a~
       * (sigma~X~)^2^  = ---------------------------------------------------------
       *                  8 pi^2^ sum~i~ {[1/Sigma - (E~o~)^2^ (1-m^2^)](SUM_AS)s^2^}
       *
       *            N~a~           = number of atoms
       *            E~o~           = normalized structure factors
       *            m              = figure of merit of phases of reflections
       *                             included in the summation
       *            s              = reciprocal-space vector
       *
       *            SUM_AS         = (sigma~A~)^2^/Sigma^2^
       *            Sigma          = (sigma~{E;exp}~)^2^ + epsilon [1-(sigma~A~)^2^]
       *            sigma~{E;exp}~  = experimental uncertainties of normalized
       *                             structure factors
       *            sigma~A~        = <cos 2 pi s delta~x~> SQRT(Sigma~P~/Sigma~N~)
       *                             estimated using maximum likelihood
       *            Sigma~P~        = sum~{atoms in model}~ f^2^
       *            Sigma~N~        = sum~{atoms in crystal}~ f^2^
       *            f               = atom form factor
       *            delta~x~        = expected error
       *            epsilon         = multiplicity of diffracting plane
       *
       *            summation is over all reflections included in refinement
       *
       *            Ref: (sigma_A estimation) "Refinement of macromolecular
       *                 structures by the maximum-likelihood method",
       *                 Murshudov, G. N., Vagin, A. A. & Dodson, E. J. (1997).
       *                 Acta Cryst. D53, 240-255.
       *
       *                 (SU ML estimation) Murshudov, G. N. & Dodson,
       *                 E. J. (1997). Simplified error estimation a la
       *                 Cruickshank in macromolecular crystallography.
       *                 CCP4 Newsletter on Protein Crystallography, No. 33,
       *                 January 1997, pp. 31-39.
       *
       *                http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html
       */
      overall_SU_ML?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the crystallographic
       *  R value, expressed in a formalism known as the dispersion
       *  precision indicator (DPI).
       *
       *  The overall standard uncertainty (sigma~B~) gives an idea
       *  of the uncertainty in the B values of averagely defined
       *  atoms (atoms with B values equal to the average B value).
       *
       *                         N~a~
       *  (sigma~B~)^2^ = 0.65 ---------- (R~value~)^2^ (D~min~)^2^ C^-2/3^
       *                       (N~o~-N~p~)
       *
       *
       *  N~a~     = number of atoms included in refinement
       *  N~o~     = number of observations
       *  N~p~     = number of parameters refined
       *  R~value~ = conventional crystallographic R value
       *  D~min~   = maximum resolution
       *  C        = completeness of data
       *
       *  Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.
       *
       *       Murshudov, G. N. & Dodson,
       *       E. J. (1997). Simplified error estimation a la
       *       Cruickshank in macromolecular crystallography.
       *       CCP4 Newsletter on Protein Crystallography, No. 33,
       *       January 1997, pp. 31-39.
       *
       *      http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html
       */
      overall_SU_R_Cruickshank_DPI?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the free R value.
       *
       *  The overall standard uncertainty (sigma~B~) gives an idea
       *  of the uncertainty in the B values of averagely defined
       *  atoms (atoms with B values equal to the average B value).
       *
       *                         N~a~
       *  (sigma~B~)^2^ = 0.65 ---------- (R~free~)^2^ (D~min~)^2^ C^-2/3^
       *                       (N~o~-N~p~)
       *
       *
       *  N~a~     = number of atoms included in refinement
       *  N~o~     = number of observations
       *  N~p~     = number of parameters refined
       *  R~free~  = conventional free crystallographic R value calculated
       *           using reflections not included in refinement
       *  D~min~   = maximum resolution
       *  C        = completeness of data
       *
       *  Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.
       *
       *       Murshudov, G. N. & Dodson,
       *       E. J. (1997). Simplified error estimation a la
       *       Cruickshank in macromolecular crystallography.
       *       CCP4 Newsletter on Protein Crystallography, No. 33,
       *       January 1997, pp. 31-39.
       *
       *      http://www.ccp4.ac.uk/newsletters/newsletter33/murshudov.html
       */
      overall_SU_R_free?: number;
      /**
       * Details of the manner in which the cross validation
       *  reflections were selected.
       */
      pdbx_R_Free_selection_details?: string;
      /**
       * A flag for TLS refinements identifying the type of atomic displacement parameters stored
       *  in _atom_site.B_iso_or_equiv.
       */
      pdbx_TLS_residual_ADP_flag?: "LIKELY RESIDUAL" | "UNVERIFIED";
      /**
       * Average Fourier Shell Correlation (avgFSC) between model and
       *  observed structure factors for reflections not included in refinement.
       *
       *  The average FSC is a measure of the agreement between observed
       *  and calculated structure factors.
       *
       *                   sum(N~i~ FSC~free-i~)
       *  avgFSC~free~   = ---------------------
       *                   sum(N~i~)
       *
       *
       *  N~i~          = the number of free reflections in the resolution shell i
       *  FSC~free-i~   = FSC for free reflections in the i-th resolution shell calculated as:
       *
       *                 (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))
       *  FSC~free-i~  = -------------------------------------------
       *                 (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^
       *
       *  |F~o~|   = amplitude of observed structure factor
       *  |F~c~|   = amplitude of calculated structure factor
       *  phi~o~   = phase of observed structure factor
       *  phi~c~   = phase of calculated structure factor
       *  fom      = figure of merit of the experimental phases.
       *
       *  Summation of FSC~free-i~ is carried over all free reflections in the resolution shell.
       *
       *  Summation of avgFSC~free~ is carried over all resolution shells.
       *
       *
       *  Ref:  Rosenthal P.B., Henderson R.
       *        "Optimal determination of particle orientation, absolute hand,
       *        and contrast loss in single-particle electron cryomicroscopy.
       *        Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).
       */
      pdbx_average_fsc_free?: number;
      /**
       * Overall average Fourier Shell Correlation (avgFSC) between model and
       *  observed structure factors for all reflections.
       *
       *  The average FSC is a measure of the agreement between observed
       *  and calculated structure factors.
       *
       *             sum(N~i~ FSC~i~)
       *  avgFSC   = ----------------
       *             sum(N~i~)
       *
       *
       *  N~i~     = the number of all reflections in the resolution shell i
       *  FSC~i~   = FSC for all reflections in the i-th resolution shell calculated as:
       *
       *            (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))
       *  FSC~i~  = -------------------------------------------
       *            (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^
       *
       *  |F~o~|   = amplitude of observed structure factor
       *  |F~c~|   = amplitude of calculated structure factor
       *  phi~o~   = phase of observed structure factor
       *  phi~c~   = phase of calculated structure factor
       *  fom      = figure of merit of the experimental phases.
       *
       *  Summation of FSC~i~ is carried over all reflections in the resolution shell.
       *
       *  Summation of avgFSC is carried over all resolution shells.
       *
       *
       *  Ref:  Rosenthal P.B., Henderson R.
       *        "Optimal determination of particle orientation, absolute hand,
       *        and contrast loss in single-particle electron cryomicroscopy.
       *        Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).
       */
      pdbx_average_fsc_overall?: number;
      /**
       * Average Fourier Shell Correlation (avgFSC) between model and
       *  observed structure factors for reflections included in refinement.
       *
       *  The average FSC is a measure of the agreement between observed
       *  and calculated structure factors.
       *
       *                   sum(N~i~ FSC~work-i~)
       *  avgFSC~work~   = ---------------------
       *                   sum(N~i~)
       *
       *
       *  N~i~          = the number of working reflections in the resolution shell i
       *  FSC~work-i~   = FSC for working reflections in the i-th resolution shell calculated as:
       *
       *                 (sum(|F~o~| |F~c~| fom cos(phi~c~-phi~o~)))
       *  FSC~work-i~  = -------------------------------------------
       *                 (sum(|F~o~|^2^) (sum(|F~c~|^2^)))^1/2^
       *
       *  |F~o~|   = amplitude of observed structure factor
       *  |F~c~|   = amplitude of calculated structure factor
       *  phi~o~   = phase of observed structure factor
       *  phi~c~   = phase of calculated structure factor
       *  fom      = figure of merit of the experimental phases.
       *
       *  Summation of FSC~work-i~ is carried over all working reflections in the resolution shell.
       *
       *  Summation of avgFSC~work~ is carried over all resolution shells.
       *
       *
       *  Ref:  Rosenthal P.B., Henderson R.
       *        "Optimal determination of particle orientation, absolute hand,
       *        and contrast loss in single-particle electron cryomicroscopy.
       *        Journal of Molecular Biology. 2003;333(4):721-745, equation (A6).
       */
      pdbx_average_fsc_work?: number;
      /**
       * Value of F at "high end" of data cutoff.
       */
      pdbx_data_cutoff_high_absF?: number;
      /**
       * Value of RMS |F| used as high data cutoff.
       */
      pdbx_data_cutoff_high_rms_absF?: number;
      /**
       * Value of F at "low end" of data cutoff.
       */
      pdbx_data_cutoff_low_absF?: number;
      pdbx_diffrn_id?: string[];
      /**
       * Whether the structure was refined with indvidual
       * isotropic, anisotropic or overall temperature factor.
       */
      pdbx_isotropic_thermal_model?: string;
      /**
       * Whether the cross validataion method was used through
       * out or only at the end.
       */
      pdbx_ls_cross_valid_method?: string;
      /**
       * Data cutoff (SIGMA(F))
       */
      pdbx_ls_sigma_F?: number;
      /**
       * Data cutoff (SIGMA(F^2))
       */
      pdbx_ls_sigma_Fsqd?: number;
      /**
       * Data cutoff (SIGMA(I))
       */
      pdbx_ls_sigma_I?: number;
      /**
       * Method(s) used to determine the structure.
       */
      pdbx_method_to_determine_struct?: string;
      /**
       * Overall estimated standard uncertainties of positional
       *  parameters based on R value.
       */
      pdbx_overall_ESU_R?: number;
      /**
       * Overall estimated standard uncertainties of positional parameters based on R free value.
       */
      pdbx_overall_ESU_R_Free?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the crystallographic
       *  R value, expressed in a formalism known as the dispersion
       *  precision indicator (DPI).
       *
       *  Ref: Blow, D (2002) Acta Cryst. D58, 792-797
       */
      pdbx_overall_SU_R_Blow_DPI?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the crystallographic
       *  R-free value, expressed in a formalism known as the dispersion
       *  precision indicator (DPI).
       *
       *  Ref: Blow, D (2002) Acta Cryst. D58, 792-797
       */
      pdbx_overall_SU_R_free_Blow_DPI?: number;
      /**
       * The overall standard uncertainty (estimated standard deviation)
       *  of the displacement parameters based on the crystallographic
       *  R-free value, expressed in a formalism known as the dispersion
       *  precision indicator (DPI).
       *
       *  Ref: Cruickshank, D. W. J. (1999). Acta Cryst. D55, 583-601.
       */
      pdbx_overall_SU_R_free_Cruickshank_DPI?: number;
      /**
       * The overall phase error for all reflections after refinement using
       *  the current refinement target.
       */
      pdbx_overall_phase_error?: number;
      /**
       * This data item uniquely identifies a refinement within an entry.
       *  _refine.pdbx_refine_id can be used to distinguish the results of
       *  joint refinements.
       */
      pdbx_refine_id: string;
      /**
       * For bulk solvent mask calculation, the amount that the ionic radii of atoms, which can be ions, are increased used.
       */
      pdbx_solvent_ion_probe_radii?: number;
      /**
       * For bulk solvent mask calculation, amount mask is shrunk after taking away atoms with new radii and a constant value assigned to this new region.
       */
      pdbx_solvent_shrinkage_radii?: number;
      /**
       * For bulk solvent mask calculation, the value by which the vdw radii of non-ion atoms (like carbon) are increased and used.
       */
      pdbx_solvent_vdw_probe_radii?: number;
      /**
       * Starting model for refinement.  Starting model for
       *  molecular replacement should refer to a previous
       *  structure or experiment.
       */
      pdbx_starting_model?: string;
      /**
       * Special case of stereochemistry target values used
       * in SHELXL refinement.
       */
      pdbx_stereochem_target_val_spec_case?: string;
      /**
       * Stereochemistry target values used in refinement.
       */
      pdbx_stereochemistry_target_values?: string;
      /**
       * Special aspects of the solvent model used during refinement.
       */
      solvent_model_details?: string;
      /**
       * The value of the BSOL solvent-model parameter describing
       *  the average isotropic displacement parameter of disordered
       *  solvent atoms.
       *
       *  This is one of the two parameters (the other is
       *  _refine.solvent_model_param_ksol) in Tronrud's method of
       *  modelling the contribution of bulk solvent to the
       *  scattering. The standard scale factor is modified according
       *  to the expression
       *
       *      k0 exp(-B0 * s^2^)[1-KSOL * exp(-BSOL * s^2^)]
       *
       *  where k0 and B0 are the scale factors for the protein.
       *
       *  Ref: Tronrud, D. E. (1997). Methods Enzymol. 277, 243-268.
       */
      solvent_model_param_bsol?: number;
      /**
       * The value of the KSOL solvent-model parameter describing
       *  the ratio of the electron density in the bulk solvent to the
       *  electron density in the molecular solute.
       *
       *  This is one of the two parameters (the other is
       *  _refine.solvent_model_param_bsol) in Tronrud's method of
       *  modelling the contribution of bulk solvent to the
       *  scattering. The standard scale factor is modified according
       *  to the expression
       *
       *      k0 exp(-B0 * s^2^)[1-KSOL * exp(-BSOL * s^2^)]
       *
       *  where k0 and B0 are the scale factors for the protein.
       *
       *  Ref: Tronrud, D. E. (1997). Methods Enzymol. 277, 243-268.
       */
      solvent_model_param_ksol?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  refine_analyze?: [
    {
      /**
       * The estimated coordinate error obtained from the plot of
       *  the R value versus sin(theta)/lambda for the reflections
       *  treated as a test set during refinement.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_coordinate_error_free?: number;
      /**
       * The estimated coordinate error obtained from the plot of
       *  the R value versus sin(theta)/lambda for reflections classified
       *  as observed.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_coordinate_error_obs?: number;
      /**
       * The value of the low-resolution cutoff used in constructing the
       *  Luzzati plot for reflections treated as a test set during
       *  refinement.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_d_res_low_free?: number;
      /**
       * The value of the low-resolution cutoff used in
       *  constructing the Luzzati plot for reflections classified as
       *  observed.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_d_res_low_obs?: number;
      /**
       * The value of sigma~a~ used in constructing the Luzzati plot for
       *  the reflections treated as a test set during refinement.
       *  Details of the estimation of sigma~a~ can be specified
       *  in _refine_analyze.Luzzati_sigma_a_free_details.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_sigma_a_free?: number;
      /**
       * The value of sigma~a~ used in constructing the Luzzati plot for
       *  reflections classified as observed. Details of the
       *  estimation of sigma~a~ can be specified in
       *  _refine_analyze.Luzzati_sigma_a_obs_details.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_sigma_a_obs?: number;
      /**
       * The number of discretely disordered residues in the refined
       *  model.
       */
      number_disordered_residues?: number;
      /**
       * The sum of the occupancies of the hydrogen atoms in the refined
       *  model.
       */
      occupancy_sum_hydrogen?: number;
      /**
       * The sum of the occupancies of the non-hydrogen atoms in the
       *   refined model.
       */
      occupancy_sum_non_hydrogen?: number;
      /**
       * record the high resolution for calculating Luzzati statistics.
       */
      pdbx_Luzzati_d_res_high_obs?: number;
      /**
       * This data item uniquely identifies a refinement within an entry.
       *  _refine_analyze.pdbx_refine_id can be used to distinguish the results
       *  of joint refinements.
       */
      pdbx_refine_id: string;
    },
    ...{
      /**
       * The estimated coordinate error obtained from the plot of
       *  the R value versus sin(theta)/lambda for the reflections
       *  treated as a test set during refinement.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_coordinate_error_free?: number;
      /**
       * The estimated coordinate error obtained from the plot of
       *  the R value versus sin(theta)/lambda for reflections classified
       *  as observed.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_coordinate_error_obs?: number;
      /**
       * The value of the low-resolution cutoff used in constructing the
       *  Luzzati plot for reflections treated as a test set during
       *  refinement.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_d_res_low_free?: number;
      /**
       * The value of the low-resolution cutoff used in
       *  constructing the Luzzati plot for reflections classified as
       *  observed.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_d_res_low_obs?: number;
      /**
       * The value of sigma~a~ used in constructing the Luzzati plot for
       *  the reflections treated as a test set during refinement.
       *  Details of the estimation of sigma~a~ can be specified
       *  in _refine_analyze.Luzzati_sigma_a_free_details.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_sigma_a_free?: number;
      /**
       * The value of sigma~a~ used in constructing the Luzzati plot for
       *  reflections classified as observed. Details of the
       *  estimation of sigma~a~ can be specified in
       *  _refine_analyze.Luzzati_sigma_a_obs_details.
       *
       *  Ref:  Luzzati, V. (1952). Traitement statistique des erreurs
       *  dans la determination des structures cristallines. Acta
       *  Cryst. 5, 802-810.
       */
      Luzzati_sigma_a_obs?: number;
      /**
       * The number of discretely disordered residues in the refined
       *  model.
       */
      number_disordered_residues?: number;
      /**
       * The sum of the occupancies of the hydrogen atoms in the refined
       *  model.
       */
      occupancy_sum_hydrogen?: number;
      /**
       * The sum of the occupancies of the non-hydrogen atoms in the
       *   refined model.
       */
      occupancy_sum_non_hydrogen?: number;
      /**
       * record the high resolution for calculating Luzzati statistics.
       */
      pdbx_Luzzati_d_res_high_obs?: number;
      /**
       * This data item uniquely identifies a refinement within an entry.
       *  _refine_analyze.pdbx_refine_id can be used to distinguish the results
       *  of joint refinements.
       */
      pdbx_refine_id: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  refine_hist?: [
    {
      /**
       * The value of _refine_hist.cycle_id must uniquely identify a
       *  record in the REFINE_HIST list.
       *
       *  Note that this item need not be a number; it can be any unique
       *  identifier.
       */
      cycle_id: string;
      /**
       * The lowest value for the interplanar spacings for the
       *  reflection data for this cycle of refinement. This is called
       *  the highest resolution.
       */
      d_res_high?: number;
      /**
       * The highest value for the interplanar spacings for the
       *  reflection data for this cycle of refinement. This is
       *  called the lowest resolution.
       */
      d_res_low?: number;
      /**
       * The number of solvent atoms that were included in the model at
       *  this cycle of the refinement.
       */
      number_atoms_solvent?: number;
      /**
       * The total number of atoms that were included in the model at
       *  this cycle of the refinement.
       */
      number_atoms_total?: number;
      /**
       * Mean isotropic B-value for ligand molecules included in refinement.
       */
      pdbx_B_iso_mean_ligand?: number;
      /**
       * Mean isotropic B-value for solvent molecules included in refinement.
       */
      pdbx_B_iso_mean_solvent?: number;
      /**
       * Number of ligand atoms included in refinement
       */
      pdbx_number_atoms_ligand?: number;
      /**
       * Number of nucleic atoms included in refinement
       */
      pdbx_number_atoms_nucleic_acid?: number;
      /**
       * Number of protein atoms included in refinement
       */
      pdbx_number_atoms_protein?: number;
      /**
       * Total number of polymer residues included in refinement.
       */
      pdbx_number_residues_total?: number;
      /**
       * This data item uniquely identifies a refinement within an entry.
       *  _refine_hist.pdbx_refine_id can be used to distinguish the results
       *  of joint refinements.
       */
      pdbx_refine_id: string;
    },
    ...{
      /**
       * The value of _refine_hist.cycle_id must uniquely identify a
       *  record in the REFINE_HIST list.
       *
       *  Note that this item need not be a number; it can be any unique
       *  identifier.
       */
      cycle_id: string;
      /**
       * The lowest value for the interplanar spacings for the
       *  reflection data for this cycle of refinement. This is called
       *  the highest resolution.
       */
      d_res_high?: number;
      /**
       * The highest value for the interplanar spacings for the
       *  reflection data for this cycle of refinement. This is
       *  called the lowest resolution.
       */
      d_res_low?: number;
      /**
       * The number of solvent atoms that were included in the model at
       *  this cycle of the refinement.
       */
      number_atoms_solvent?: number;
      /**
       * The total number of atoms that were included in the model at
       *  this cycle of the refinement.
       */
      number_atoms_total?: number;
      /**
       * Mean isotropic B-value for ligand molecules included in refinement.
       */
      pdbx_B_iso_mean_ligand?: number;
      /**
       * Mean isotropic B-value for solvent molecules included in refinement.
       */
      pdbx_B_iso_mean_solvent?: number;
      /**
       * Number of ligand atoms included in refinement
       */
      pdbx_number_atoms_ligand?: number;
      /**
       * Number of nucleic atoms included in refinement
       */
      pdbx_number_atoms_nucleic_acid?: number;
      /**
       * Number of protein atoms included in refinement
       */
      pdbx_number_atoms_protein?: number;
      /**
       * Total number of polymer residues included in refinement.
       */
      pdbx_number_residues_total?: number;
      /**
       * This data item uniquely identifies a refinement within an entry.
       *  _refine_hist.pdbx_refine_id can be used to distinguish the results
       *  of joint refinements.
       */
      pdbx_refine_id: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  refine_ls_restr?: [
    {
      /**
       * For the given parameter type, the root-mean-square deviation
       *  between the ideal values used as restraints in the least-squares
       *  refinement and the values obtained by refinement. For instance,
       *  bond distances may deviate by 0.018 \%A (r.m.s.) from ideal
       *  values in the current model.
       */
      dev_ideal?: number;
      /**
       * For the given parameter type, the target root-mean-square
       *  deviation between the ideal values used as restraints in the
       *  least-squares refinement and the values obtained by refinement.
       */
      dev_ideal_target?: number;
      /**
       * The number of parameters of this type subjected to restraint in
       *  least-squares refinement.
       */
      number?: number;
      /**
       * This data item uniquely identifies a refinement within an entry.
       *  _refine_ls_restr.pdbx_refine_id can be used to distinguish the results
       *  of joint refinements.
       */
      pdbx_refine_id: string;
      /**
       * The functional form of the restraint function used in the least-squares
       *  refinement.
       */
      pdbx_restraint_function?: string;
      /**
       * The type of the parameter being restrained.
       *  Explicit sets of data values are provided for the programs
       *  PROTIN/PROLSQ (beginning with p_) and RESTRAIN (beginning with
       *  RESTRAIN_). As computer programs change, these data values
       *  are given as examples, not as an enumeration list. Computer
       *  programs that convert a data block to a refinement table will
       *  expect the exact form of the data values given here to be used.
       */
      type: string;
      /**
       * The weighting value applied to this type of restraint in
       *  the least-squares refinement.
       */
      weight?: number;
    },
    ...{
      /**
       * For the given parameter type, the root-mean-square deviation
       *  between the ideal values used as restraints in the least-squares
       *  refinement and the values obtained by refinement. For instance,
       *  bond distances may deviate by 0.018 \%A (r.m.s.) from ideal
       *  values in the current model.
       */
      dev_ideal?: number;
      /**
       * For the given parameter type, the target root-mean-square
       *  deviation between the ideal values used as restraints in the
       *  least-squares refinement and the values obtained by refinement.
       */
      dev_ideal_target?: number;
      /**
       * The number of parameters of this type subjected to restraint in
       *  least-squares refinement.
       */
      number?: number;
      /**
       * This data item uniquely identifies a refinement within an entry.
       *  _refine_ls_restr.pdbx_refine_id can be used to distinguish the results
       *  of joint refinements.
       */
      pdbx_refine_id: string;
      /**
       * The functional form of the restraint function used in the least-squares
       *  refinement.
       */
      pdbx_restraint_function?: string;
      /**
       * The type of the parameter being restrained.
       *  Explicit sets of data values are provided for the programs
       *  PROTIN/PROLSQ (beginning with p_) and RESTRAIN (beginning with
       *  RESTRAIN_). As computer programs change, these data values
       *  are given as examples, not as an enumeration list. Computer
       *  programs that convert a data block to a refinement table will
       *  expect the exact form of the data values given here to be used.
       */
      type: string;
      /**
       * The weighting value applied to this type of restraint in
       *  the least-squares refinement.
       */
      weight?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  reflns?: [
    {
      /**
       * The value of the overall isotropic displacement parameter
       *  estimated from the slope of the Wilson plot.
       */
      B_iso_Wilson_estimate?: number;
      /**
       * A description of the method by which a subset of reflections was
       *  selected for exclusion from refinement so as to be used in the
       *  calculation of a 'free' R factor.
       */
      R_free_details?: string;
      /**
       * Residual factor Rmerge for all reflections that satisfy the
       *  resolution limits established by _reflns.d_resolution_high
       *  and _reflns.d_resolution_low.
       *
       *              sum~i~(sum~j~|F~j~ - <F>|)
       *  Rmerge(F) = --------------------------
       *                   sum~i~(sum~j~<F>)
       *
       *  F~j~ = the amplitude of the jth observation of reflection i
       *  <F>  = the mean of the amplitudes of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_F_all?: number;
      /**
       * Residual factor Rmerge for reflections that satisfy the
       *  resolution limits established by _reflns.d_resolution_high
       *  and _reflns.d_resolution_low and the observation limit
       *  established by _reflns.observed_criterion.
       *
       *              sum~i~(sum~j~|F~j~ - <F>|)
       *  Rmerge(F) = --------------------------
       *                   sum~i~(sum~j~<F>)
       *
       *  F~j~ = the amplitude of the jth observation of reflection i
       *  <F>  = the mean of the amplitudes of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_F_obs?: number;
      /**
       * The smallest value in angstroms for the interplanar spacings
       *  for the reflection data. This is called the highest resolution.
       */
      d_resolution_high?: number;
      /**
       * The largest value in angstroms for the interplanar spacings
       *  for the reflection data. This is called the lowest resolution.
       */
      d_resolution_low?: number;
      /**
       * A description of special aspects of the data-reduction
       *  procedures.
       */
      data_reduction_details?: string;
      /**
       * The method used for data reduction.
       *
       *  Note that this is not the computer program used, which is
       *  described in the SOFTWARE category, but the method
       *  itself.
       *
       *  This data item should be used to describe significant
       *  methodological options used within the data-reduction programs.
       */
      data_reduction_method?: string;
      /**
       * A description of reflection data not covered by other data
       *  names. This should include details of the Friedel pairs.
       */
      details?: string;
      /**
       * Maximum value of the Miller index h for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_h_max.
       */
      limit_h_max?: number;
      /**
       * Minimum value of the Miller index h for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_h_min.
       */
      limit_h_min?: number;
      /**
       * Maximum value of the Miller index k for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_k_max.
       */
      limit_k_max?: number;
      /**
       * Minimum value of the Miller index k for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_k_min.
       */
      limit_k_min?: number;
      /**
       * Maximum value of the Miller index l for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_l_max.
       */
      limit_l_max?: number;
      /**
       * Minimum value of the Miller index l for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_l_min.
       */
      limit_l_min?: number;
      /**
       * The total number of reflections in the REFLN list (not the
       *  DIFFRN_REFLN list). This number may contain Friedel-equivalent
       *  reflections according to the nature of the structure and the
       *  procedures used. The item _reflns.details describes the
       *  reflection data.
       */
      number_all?: number;
      /**
       * The number of reflections in the REFLN list (not the DIFFRN_REFLN
       *  list) classified as observed (see _reflns.observed_criterion).
       *  This number may contain Friedel-equivalent reflections according
       *  to the nature of the structure and the procedures used.
       */
      number_obs?: number;
      /**
       * The criterion used to classify a reflection as 'observed'. This
       *  criterion is usually expressed in terms of a sigma(I) or
       *  sigma(F) threshold.
       */
      observed_criterion?: string;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as an upper limit for the value of F.
       */
      observed_criterion_F_max?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as a lower limit for the value of F.
       */
      observed_criterion_F_min?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as an upper limit for the value of I.
       */
      observed_criterion_I_max?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as a lower limit for the value of I.
       */
      observed_criterion_I_min?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as a multiple of the value of sigma(F).
       */
      observed_criterion_sigma_F?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as a multiple of the value of sigma(I).
       */
      observed_criterion_sigma_I?: number;
      /**
       * The Pearson's correlation coefficient expressed as a decimal value
       *               between the average intensities from randomly selected
       *               half-datasets.
       *
       * 	      Ref: Karplus & Diederichs (2012), Science 336, 1030-33
       */
      pdbx_CC_half?: number;
      /**
       * R split measures the agreement between the sets of intensities created by merging
       *               odd- and even-numbered images  from the overall data.
       *
       * 	      Ref: T. A. White, R. A. Kirian, A. V. Martin, A. Aquila, K. Nass, A. Barty
       *               and H. N. Chapman (2012), J. Appl. Cryst. 45, 335-341
       */
      pdbx_R_split?: number;
      /**
       * The R value for merging intensities satisfying the observed
       *  criteria in this data set.
       */
      pdbx_Rmerge_I_obs?: number;
      /**
       * The precision-indicating merging R factor value Rpim,
       *  for merging all intensities in this data set.
       *
       *         sum~i~ [1/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |
       *  Rpim = --------------------------------------------------
       *                       sum~i~ ( sum~j~ I~j~ )
       *
       *  I~j~   = the intensity of the jth observation of reflection i
       *  <I~i~> = the mean of the intensities of all observations
       *           of reflection i
       *  N~i~   = the redundancy (the number of times reflection i
       *           has been measured).
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection.
       *
       *  Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.
       *       Biol. 4, 269-275.
       *       Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.
       *       30, 203-205.
       *       Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.
       */
      pdbx_Rpim_I_all?: number;
      /**
       * The redundancy-independent merging R factor value Rrim,
       *               also denoted Rmeas, for merging all intensities in this
       *               data set.
       *
       *                      sum~i~ [N~i~/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |
       *               Rrim = ----------------------------------------------------
       *                                   sum~i~ ( sum~j~ I~j~ )
       *
       *               I~j~   = the intensity of the jth observation of reflection i
       *               <I~i~> = the mean of the intensities of all observations of
       *                        reflection i
       * 	       N~i~   = the redundancy (the number of times reflection i
       *                        has been measured).
       *
       *               sum~i~ is taken over all reflections
       *               sum~j~ is taken over all observations of each reflection.
       *
       *               Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.
       *                    Biol. 4, 269-275.
       *                    Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.
       *                    30, 203-205.
       *                    Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.
       */
      pdbx_Rrim_I_all?: number;
      /**
       * The R sym value as a decimal number.
       */
      pdbx_Rsym_value?: number;
      /**
       * Overall  Chi-squared statistic.
       */
      pdbx_chi_squared?: number;
      pdbx_diffrn_id?: string[];
      /**
       * The ratio of the average intensity to the average uncertainty,
       *  <I>/<sigma(I)>.
       */
      pdbx_netI_over_av_sigmaI?: number;
      /**
       * The mean of the ratio of the intensities to their
       *  standard uncertainties, <I/sigma(I)>.
       */
      pdbx_netI_over_sigmaI?: number;
      /**
       * Total number of measured reflections.
       */
      pdbx_number_measured_all?: number;
      /**
       * An ordinal identifier for this set of reflection statistics.
       */
      pdbx_ordinal: number;
      /**
       * Overall redundancy for this data set.
       */
      pdbx_redundancy?: number;
      /**
       * Number of reflections rejected in scaling operations.
       */
      pdbx_scaling_rejects?: number;
      /**
       * The percentage of geometrically possible reflections represented
       *  by reflections that satisfy the resolution limits established
       *  by _reflns.d_resolution_high and _reflns.d_resolution_low and
       *  the observation limit established by
       *  _reflns.observed_criterion.
       */
      percent_possible_obs?: number;
      /**
       * The value of _reflns.phase_calculation_details describes a
       *  special details about calculation of phases in _refln.phase_calc.
       */
      phase_calculation_details?: string;
    },
    ...{
      /**
       * The value of the overall isotropic displacement parameter
       *  estimated from the slope of the Wilson plot.
       */
      B_iso_Wilson_estimate?: number;
      /**
       * A description of the method by which a subset of reflections was
       *  selected for exclusion from refinement so as to be used in the
       *  calculation of a 'free' R factor.
       */
      R_free_details?: string;
      /**
       * Residual factor Rmerge for all reflections that satisfy the
       *  resolution limits established by _reflns.d_resolution_high
       *  and _reflns.d_resolution_low.
       *
       *              sum~i~(sum~j~|F~j~ - <F>|)
       *  Rmerge(F) = --------------------------
       *                   sum~i~(sum~j~<F>)
       *
       *  F~j~ = the amplitude of the jth observation of reflection i
       *  <F>  = the mean of the amplitudes of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_F_all?: number;
      /**
       * Residual factor Rmerge for reflections that satisfy the
       *  resolution limits established by _reflns.d_resolution_high
       *  and _reflns.d_resolution_low and the observation limit
       *  established by _reflns.observed_criterion.
       *
       *              sum~i~(sum~j~|F~j~ - <F>|)
       *  Rmerge(F) = --------------------------
       *                   sum~i~(sum~j~<F>)
       *
       *  F~j~ = the amplitude of the jth observation of reflection i
       *  <F>  = the mean of the amplitudes of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_F_obs?: number;
      /**
       * The smallest value in angstroms for the interplanar spacings
       *  for the reflection data. This is called the highest resolution.
       */
      d_resolution_high?: number;
      /**
       * The largest value in angstroms for the interplanar spacings
       *  for the reflection data. This is called the lowest resolution.
       */
      d_resolution_low?: number;
      /**
       * A description of special aspects of the data-reduction
       *  procedures.
       */
      data_reduction_details?: string;
      /**
       * The method used for data reduction.
       *
       *  Note that this is not the computer program used, which is
       *  described in the SOFTWARE category, but the method
       *  itself.
       *
       *  This data item should be used to describe significant
       *  methodological options used within the data-reduction programs.
       */
      data_reduction_method?: string;
      /**
       * A description of reflection data not covered by other data
       *  names. This should include details of the Friedel pairs.
       */
      details?: string;
      /**
       * Maximum value of the Miller index h for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_h_max.
       */
      limit_h_max?: number;
      /**
       * Minimum value of the Miller index h for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_h_min.
       */
      limit_h_min?: number;
      /**
       * Maximum value of the Miller index k for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_k_max.
       */
      limit_k_max?: number;
      /**
       * Minimum value of the Miller index k for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_k_min.
       */
      limit_k_min?: number;
      /**
       * Maximum value of the Miller index l for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_l_max.
       */
      limit_l_max?: number;
      /**
       * Minimum value of the Miller index l for the reflection data. This
       *  need not have the same value as _diffrn_reflns.limit_l_min.
       */
      limit_l_min?: number;
      /**
       * The total number of reflections in the REFLN list (not the
       *  DIFFRN_REFLN list). This number may contain Friedel-equivalent
       *  reflections according to the nature of the structure and the
       *  procedures used. The item _reflns.details describes the
       *  reflection data.
       */
      number_all?: number;
      /**
       * The number of reflections in the REFLN list (not the DIFFRN_REFLN
       *  list) classified as observed (see _reflns.observed_criterion).
       *  This number may contain Friedel-equivalent reflections according
       *  to the nature of the structure and the procedures used.
       */
      number_obs?: number;
      /**
       * The criterion used to classify a reflection as 'observed'. This
       *  criterion is usually expressed in terms of a sigma(I) or
       *  sigma(F) threshold.
       */
      observed_criterion?: string;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as an upper limit for the value of F.
       */
      observed_criterion_F_max?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as a lower limit for the value of F.
       */
      observed_criterion_F_min?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as an upper limit for the value of I.
       */
      observed_criterion_I_max?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as a lower limit for the value of I.
       */
      observed_criterion_I_min?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as a multiple of the value of sigma(F).
       */
      observed_criterion_sigma_F?: number;
      /**
       * The criterion used to classify a reflection as 'observed'
       *  expressed as a multiple of the value of sigma(I).
       */
      observed_criterion_sigma_I?: number;
      /**
       * The Pearson's correlation coefficient expressed as a decimal value
       *               between the average intensities from randomly selected
       *               half-datasets.
       *
       * 	      Ref: Karplus & Diederichs (2012), Science 336, 1030-33
       */
      pdbx_CC_half?: number;
      /**
       * R split measures the agreement between the sets of intensities created by merging
       *               odd- and even-numbered images  from the overall data.
       *
       * 	      Ref: T. A. White, R. A. Kirian, A. V. Martin, A. Aquila, K. Nass, A. Barty
       *               and H. N. Chapman (2012), J. Appl. Cryst. 45, 335-341
       */
      pdbx_R_split?: number;
      /**
       * The R value for merging intensities satisfying the observed
       *  criteria in this data set.
       */
      pdbx_Rmerge_I_obs?: number;
      /**
       * The precision-indicating merging R factor value Rpim,
       *  for merging all intensities in this data set.
       *
       *         sum~i~ [1/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |
       *  Rpim = --------------------------------------------------
       *                       sum~i~ ( sum~j~ I~j~ )
       *
       *  I~j~   = the intensity of the jth observation of reflection i
       *  <I~i~> = the mean of the intensities of all observations
       *           of reflection i
       *  N~i~   = the redundancy (the number of times reflection i
       *           has been measured).
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection.
       *
       *  Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.
       *       Biol. 4, 269-275.
       *       Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.
       *       30, 203-205.
       *       Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.
       */
      pdbx_Rpim_I_all?: number;
      /**
       * The redundancy-independent merging R factor value Rrim,
       *               also denoted Rmeas, for merging all intensities in this
       *               data set.
       *
       *                      sum~i~ [N~i~/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |
       *               Rrim = ----------------------------------------------------
       *                                   sum~i~ ( sum~j~ I~j~ )
       *
       *               I~j~   = the intensity of the jth observation of reflection i
       *               <I~i~> = the mean of the intensities of all observations of
       *                        reflection i
       * 	       N~i~   = the redundancy (the number of times reflection i
       *                        has been measured).
       *
       *               sum~i~ is taken over all reflections
       *               sum~j~ is taken over all observations of each reflection.
       *
       *               Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.
       *                    Biol. 4, 269-275.
       *                    Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.
       *                    30, 203-205.
       *                    Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.
       */
      pdbx_Rrim_I_all?: number;
      /**
       * The R sym value as a decimal number.
       */
      pdbx_Rsym_value?: number;
      /**
       * Overall  Chi-squared statistic.
       */
      pdbx_chi_squared?: number;
      pdbx_diffrn_id?: string[];
      /**
       * The ratio of the average intensity to the average uncertainty,
       *  <I>/<sigma(I)>.
       */
      pdbx_netI_over_av_sigmaI?: number;
      /**
       * The mean of the ratio of the intensities to their
       *  standard uncertainties, <I/sigma(I)>.
       */
      pdbx_netI_over_sigmaI?: number;
      /**
       * Total number of measured reflections.
       */
      pdbx_number_measured_all?: number;
      /**
       * An ordinal identifier for this set of reflection statistics.
       */
      pdbx_ordinal: number;
      /**
       * Overall redundancy for this data set.
       */
      pdbx_redundancy?: number;
      /**
       * Number of reflections rejected in scaling operations.
       */
      pdbx_scaling_rejects?: number;
      /**
       * The percentage of geometrically possible reflections represented
       *  by reflections that satisfy the resolution limits established
       *  by _reflns.d_resolution_high and _reflns.d_resolution_low and
       *  the observation limit established by
       *  _reflns.observed_criterion.
       */
      percent_possible_obs?: number;
      /**
       * The value of _reflns.phase_calculation_details describes a
       *  special details about calculation of phases in _refln.phase_calc.
       */
      phase_calculation_details?: string;
    }[]
  ];
  /**
   * @minItems 1
   */
  reflns_shell?: [
    {
      /**
       * Residual factor Rmerge for all reflections that satisfy the
       *  resolution limits established by _reflns_shell.d_res_high and
       *  _reflns_shell.d_res_low.
       *
       *              sum~i~(sum~j~|F~j~ - <F>|)
       *  Rmerge(F) = --------------------------
       *                   sum~i~(sum~j~<F>)
       *
       *  F~j~ = the amplitude of the jth observation of reflection i
       *  <F>  = the mean of the amplitudes of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_F_all?: number;
      /**
       * Residual factor Rmerge for reflections that satisfy the
       *  resolution limits established by _reflns_shell.d_res_high and
       *  _reflns_shell.d_res_low and the observation criterion
       *  established by _reflns.observed_criterion.
       *
       *              sum~i~(sum~j~|F~j~ - <F>|)
       *  Rmerge(F) = --------------------------
       *                   sum~i~(sum~j~<F>)
       *
       *  F~j~ = the amplitude of the jth observation of reflection i
       *  <F>  = the mean of the amplitudes of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_F_obs?: number;
      /**
       * The value of Rmerge(I) for all reflections in a given shell.
       *
       *              sum~i~(sum~j~|I~j~ - <I>|)
       *  Rmerge(I) = --------------------------
       *                  sum~i~(sum~j~<I>)
       *
       *  I~j~ = the intensity of the jth observation of reflection i
       *  <I>  = the mean of the intensities of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_I_all?: number;
      /**
       * The value of Rmerge(I) for reflections classified as 'observed'
       *  (see _reflns.observed_criterion) in a given shell.
       *
       *              sum~i~(sum~j~|I~j~ - <I>|)
       *  Rmerge(I) = --------------------------
       *                  sum~i~(sum~j~<I>)
       *
       *  I~j~ = the intensity of the jth observation of reflection i
       *  <I>  = the mean of the intensities of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_I_obs?: number;
      /**
       * The smallest value in angstroms for the interplanar spacings
       *  for the reflections in this shell. This is called the highest
       *  resolution.
       */
      d_res_high?: number;
      /**
       * The highest value in angstroms for the interplanar spacings
       *  for the reflections in this shell. This is called the lowest
       *  resolution.
       */
      d_res_low?: number;
      /**
       * The ratio of the mean of the intensities of all reflections
       *  in this shell to the mean of the standard uncertainties of the
       *  intensities of all reflections in this shell.
       */
      meanI_over_sigI_all?: number;
      /**
       * The ratio of the mean of the intensities of the reflections
       *  classified as 'observed' (see _reflns.observed_criterion) in
       *  this shell to the mean of the standard uncertainties of the
       *  intensities of the 'observed' reflections in this
       *  shell.
       */
      meanI_over_sigI_obs?: number;
      /**
       * The ratio of the mean of the intensities of all reflections
       *  in this shell to the mean of the standard uncertainties of the
       *  intensities of all reflections in this shell.
       */
      meanI_over_uI_all?: number;
      /**
       * The total number of reflections measured for this
       *  shell.
       */
      number_measured_all?: number;
      /**
       * The number of reflections classified as 'observed'
       *  (see _reflns.observed_criterion) for this
       *  shell.
       */
      number_measured_obs?: number;
      /**
       * The number of unique reflections it is possible to measure in
       *  this shell.
       */
      number_possible?: number;
      /**
       * The total number of measured reflections which are symmetry-
       *  unique after merging for this shell.
       */
      number_unique_all?: number;
      /**
       * The total number of measured reflections classified as 'observed'
       *  (see _reflns.observed_criterion) which are symmetry-unique
       *  after merging for this shell.
       */
      number_unique_obs?: number;
      /**
       * The Pearson's correlation coefficient expressed as a decimal value
       *               between the average intensities from randomly selected
       *               half-datasets within the resolution shell.
       *
       * 	      Ref: Karplus & Diederichs (2012), Science 336, 1030-33
       */
      pdbx_CC_half?: number;
      /**
       * R split measures the agreement between the sets of intensities created by merging
       *               odd- and even-numbered images from the data within the resolution shell.
       *
       * 	      Ref: T. A. White, R. A. Kirian, A. V. Martin, A. Aquila, K. Nass,
       * 	      A. Barty and H. N. Chapman (2012), J. Appl. Cryst. 45, 335-341
       */
      pdbx_R_split?: number;
      /**
       * The precision-indicating merging R factor value Rpim,
       *  for merging all intensities in a given shell.
       *
       *         sum~i~ [1/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |
       *  Rpim = --------------------------------------------------
       *                       sum~i~ ( sum~j~ I~j~ )
       *
       *  I~j~   = the intensity of the jth observation of reflection i
       *  <I~i~> = the mean of the intensities of all observations of
       *           reflection i
       *  N~i~   = the redundancy (the number of times reflection i
       *           has been measured).
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection.
       *
       *  Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.
       *       Biol. 4, 269-275.
       *       Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.
       *       30, 203-205.
       *       Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.
       */
      pdbx_Rpim_I_all?: number;
      /**
       * The redundancy-independent merging R factor value Rrim,
       *               also denoted Rmeas, for merging all intensities in a
       *               given shell.
       *
       *                      sum~i~ [N~i~ /( N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |
       *               Rrim = --------------------------------------------------------
       *                                    sum~i~ ( sum~j~ I~j~ )
       *
       *               I~j~   = the intensity of the jth observation of reflection i
       *               <I~i~> = the mean of the intensities of all observations of
       *                        reflection i
       * 	      N~i~   = the redundancy (the number of times reflection i
       *                        has been measured).
       *
       *               sum~i~ is taken over all reflections
       *               sum~j~ is taken over all observations of each reflection.
       *
       *               Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.
       *                    Biol. 4, 269-275.
       *                    Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.
       *                    30, 203-205.
       *                    Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.
       */
      pdbx_Rrim_I_all?: number;
      /**
       * R sym value in percent.
       */
      pdbx_Rsym_value?: number;
      /**
       * Chi-squared statistic for this resolution shell.
       */
      pdbx_chi_squared?: number;
      pdbx_diffrn_id?: string[];
      /**
       * The mean of the ratio of the intensities to their
       *  standard uncertainties of all reflections in the
       *  resolution shell.
       *
       *  _reflns_shell.pdbx_netI_over_sigmaI_all =  <I/sigma(I)>
       */
      pdbx_netI_over_sigmaI_all?: number;
      /**
       * The mean of the ratio of the intensities to their
       *  standard uncertainties of observed reflections
       *  (see _reflns.observed_criterion) in the resolution shell.
       *
       *  _reflns_shell.pdbx_netI_over_sigmaI_obs =  <I/sigma(I)>
       */
      pdbx_netI_over_sigmaI_obs?: number;
      /**
       * An ordinal identifier for this resolution shell.
       */
      pdbx_ordinal: number;
      /**
       * Redundancy for the current shell.
       */
      pdbx_redundancy?: number;
      /**
       * The number of rejected reflections in the resolution
       *  shell.  Reflections may be rejected from scaling
       *  by setting the observation criterion,
       *  _reflns.observed_criterion.
       */
      pdbx_rejects?: number;
      /**
       * The percentage of geometrically possible reflections represented
       *  by all reflections measured for this shell.
       */
      percent_possible_all?: number;
      /**
       * The percentage of geometrically possible reflections represented
       *  by reflections classified as 'observed' (see
       *  _reflns.observed_criterion) for this shell.
       */
      percent_possible_obs?: number;
    },
    ...{
      /**
       * Residual factor Rmerge for all reflections that satisfy the
       *  resolution limits established by _reflns_shell.d_res_high and
       *  _reflns_shell.d_res_low.
       *
       *              sum~i~(sum~j~|F~j~ - <F>|)
       *  Rmerge(F) = --------------------------
       *                   sum~i~(sum~j~<F>)
       *
       *  F~j~ = the amplitude of the jth observation of reflection i
       *  <F>  = the mean of the amplitudes of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_F_all?: number;
      /**
       * Residual factor Rmerge for reflections that satisfy the
       *  resolution limits established by _reflns_shell.d_res_high and
       *  _reflns_shell.d_res_low and the observation criterion
       *  established by _reflns.observed_criterion.
       *
       *              sum~i~(sum~j~|F~j~ - <F>|)
       *  Rmerge(F) = --------------------------
       *                   sum~i~(sum~j~<F>)
       *
       *  F~j~ = the amplitude of the jth observation of reflection i
       *  <F>  = the mean of the amplitudes of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_F_obs?: number;
      /**
       * The value of Rmerge(I) for all reflections in a given shell.
       *
       *              sum~i~(sum~j~|I~j~ - <I>|)
       *  Rmerge(I) = --------------------------
       *                  sum~i~(sum~j~<I>)
       *
       *  I~j~ = the intensity of the jth observation of reflection i
       *  <I>  = the mean of the intensities of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_I_all?: number;
      /**
       * The value of Rmerge(I) for reflections classified as 'observed'
       *  (see _reflns.observed_criterion) in a given shell.
       *
       *              sum~i~(sum~j~|I~j~ - <I>|)
       *  Rmerge(I) = --------------------------
       *                  sum~i~(sum~j~<I>)
       *
       *  I~j~ = the intensity of the jth observation of reflection i
       *  <I>  = the mean of the intensities of all observations of
       *         reflection i
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection
       */
      Rmerge_I_obs?: number;
      /**
       * The smallest value in angstroms for the interplanar spacings
       *  for the reflections in this shell. This is called the highest
       *  resolution.
       */
      d_res_high?: number;
      /**
       * The highest value in angstroms for the interplanar spacings
       *  for the reflections in this shell. This is called the lowest
       *  resolution.
       */
      d_res_low?: number;
      /**
       * The ratio of the mean of the intensities of all reflections
       *  in this shell to the mean of the standard uncertainties of the
       *  intensities of all reflections in this shell.
       */
      meanI_over_sigI_all?: number;
      /**
       * The ratio of the mean of the intensities of the reflections
       *  classified as 'observed' (see _reflns.observed_criterion) in
       *  this shell to the mean of the standard uncertainties of the
       *  intensities of the 'observed' reflections in this
       *  shell.
       */
      meanI_over_sigI_obs?: number;
      /**
       * The ratio of the mean of the intensities of all reflections
       *  in this shell to the mean of the standard uncertainties of the
       *  intensities of all reflections in this shell.
       */
      meanI_over_uI_all?: number;
      /**
       * The total number of reflections measured for this
       *  shell.
       */
      number_measured_all?: number;
      /**
       * The number of reflections classified as 'observed'
       *  (see _reflns.observed_criterion) for this
       *  shell.
       */
      number_measured_obs?: number;
      /**
       * The number of unique reflections it is possible to measure in
       *  this shell.
       */
      number_possible?: number;
      /**
       * The total number of measured reflections which are symmetry-
       *  unique after merging for this shell.
       */
      number_unique_all?: number;
      /**
       * The total number of measured reflections classified as 'observed'
       *  (see _reflns.observed_criterion) which are symmetry-unique
       *  after merging for this shell.
       */
      number_unique_obs?: number;
      /**
       * The Pearson's correlation coefficient expressed as a decimal value
       *               between the average intensities from randomly selected
       *               half-datasets within the resolution shell.
       *
       * 	      Ref: Karplus & Diederichs (2012), Science 336, 1030-33
       */
      pdbx_CC_half?: number;
      /**
       * R split measures the agreement between the sets of intensities created by merging
       *               odd- and even-numbered images from the data within the resolution shell.
       *
       * 	      Ref: T. A. White, R. A. Kirian, A. V. Martin, A. Aquila, K. Nass,
       * 	      A. Barty and H. N. Chapman (2012), J. Appl. Cryst. 45, 335-341
       */
      pdbx_R_split?: number;
      /**
       * The precision-indicating merging R factor value Rpim,
       *  for merging all intensities in a given shell.
       *
       *         sum~i~ [1/(N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |
       *  Rpim = --------------------------------------------------
       *                       sum~i~ ( sum~j~ I~j~ )
       *
       *  I~j~   = the intensity of the jth observation of reflection i
       *  <I~i~> = the mean of the intensities of all observations of
       *           reflection i
       *  N~i~   = the redundancy (the number of times reflection i
       *           has been measured).
       *
       *  sum~i~ is taken over all reflections
       *  sum~j~ is taken over all observations of each reflection.
       *
       *  Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.
       *       Biol. 4, 269-275.
       *       Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.
       *       30, 203-205.
       *       Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.
       */
      pdbx_Rpim_I_all?: number;
      /**
       * The redundancy-independent merging R factor value Rrim,
       *               also denoted Rmeas, for merging all intensities in a
       *               given shell.
       *
       *                      sum~i~ [N~i~ /( N~i~ - 1)]1/2^ sum~j~ | I~j~ - <I~i~> |
       *               Rrim = --------------------------------------------------------
       *                                    sum~i~ ( sum~j~ I~j~ )
       *
       *               I~j~   = the intensity of the jth observation of reflection i
       *               <I~i~> = the mean of the intensities of all observations of
       *                        reflection i
       * 	      N~i~   = the redundancy (the number of times reflection i
       *                        has been measured).
       *
       *               sum~i~ is taken over all reflections
       *               sum~j~ is taken over all observations of each reflection.
       *
       *               Ref: Diederichs, K. & Karplus, P. A. (1997). Nature Struct.
       *                    Biol. 4, 269-275.
       *                    Weiss, M. S. & Hilgenfeld, R. (1997). J. Appl. Cryst.
       *                    30, 203-205.
       *                    Weiss, M. S. (2001). J. Appl. Cryst. 34, 130-135.
       */
      pdbx_Rrim_I_all?: number;
      /**
       * R sym value in percent.
       */
      pdbx_Rsym_value?: number;
      /**
       * Chi-squared statistic for this resolution shell.
       */
      pdbx_chi_squared?: number;
      pdbx_diffrn_id?: string[];
      /**
       * The mean of the ratio of the intensities to their
       *  standard uncertainties of all reflections in the
       *  resolution shell.
       *
       *  _reflns_shell.pdbx_netI_over_sigmaI_all =  <I/sigma(I)>
       */
      pdbx_netI_over_sigmaI_all?: number;
      /**
       * The mean of the ratio of the intensities to their
       *  standard uncertainties of observed reflections
       *  (see _reflns.observed_criterion) in the resolution shell.
       *
       *  _reflns_shell.pdbx_netI_over_sigmaI_obs =  <I/sigma(I)>
       */
      pdbx_netI_over_sigmaI_obs?: number;
      /**
       * An ordinal identifier for this resolution shell.
       */
      pdbx_ordinal: number;
      /**
       * Redundancy for the current shell.
       */
      pdbx_redundancy?: number;
      /**
       * The number of rejected reflections in the resolution
       *  shell.  Reflections may be rejected from scaling
       *  by setting the observation criterion,
       *  _reflns.observed_criterion.
       */
      pdbx_rejects?: number;
      /**
       * The percentage of geometrically possible reflections represented
       *  by all reflections measured for this shell.
       */
      percent_possible_all?: number;
      /**
       * The percentage of geometrically possible reflections represented
       *  by reflections classified as 'observed' (see
       *  _reflns.observed_criterion) for this shell.
       */
      percent_possible_obs?: number;
    }[]
  ];
  /**
   * @minItems 1
   */
  software?: [
    {
      /**
       * This data item is a pointer to _citation.id in the CITATION
       *  category.
       */
      citation_id?: string;
      /**
       * The classification of the program according to its
       *  major function.
       */
      classification?: string;
      /**
       * The recognized contact author of the software. This could be
       *  the original author, someone who has modified the code or
       *  someone who maintains the code.  It should be the person
       *  most commonly associated with the code.
       */
      contact_author?: string;
      /**
       * The e-mail address of the person specified in
       *  _software.contact_author.
       */
      contact_author_email?: string;
      /**
       * The date the software was released.
       */
      date?: string;
      /**
       * Description of the software.
       */
      description?: string;
      /**
       * The major computing language in which the software is
       *  coded.
       */
      language?:
        | "Ada"
        | "Awk"
        | "Basic"
        | "C"
        | "C++"
        | "C/C++"
        | "Fortran"
        | "Fortran 77"
        | "Fortran 90"
        | "Fortran_77"
        | "Java"
        | "Java & Fortran"
        | "Other"
        | "Pascal"
        | "Perl"
        | "Python"
        | "Python/C++"
        | "Tcl"
        | "assembler"
        | "csh"
        | "ksh"
        | "sh";
      /**
       * The URL for an Internet address at which
       *  details of the software can be found.
       */
      location?: string;
      /**
       * The name of the software.
       */
      name?: string;
      /**
       * The name of the operating system under which the software
       *  runs.
       */
      os?: string;
      /**
       * An ordinal index for this category
       */
      pdbx_ordinal: number;
      /**
       * The classification of the software according to the most
       *  common types.
       */
      type?: "filter" | "jiffy" | "library" | "other" | "package" | "program";
      /**
       * The version of the software.
       */
      version?: string;
    },
    ...{
      /**
       * This data item is a pointer to _citation.id in the CITATION
       *  category.
       */
      citation_id?: string;
      /**
       * The classification of the program according to its
       *  major function.
       */
      classification?: string;
      /**
       * The recognized contact author of the software. This could be
       *  the original author, someone who has modified the code or
       *  someone who maintains the code.  It should be the person
       *  most commonly associated with the code.
       */
      contact_author?: string;
      /**
       * The e-mail address of the person specified in
       *  _software.contact_author.
       */
      contact_author_email?: string;
      /**
       * The date the software was released.
       */
      date?: string;
      /**
       * Description of the software.
       */
      description?: string;
      /**
       * The major computing language in which the software is
       *  coded.
       */
      language?:
        | "Ada"
        | "Awk"
        | "Basic"
        | "C"
        | "C++"
        | "C/C++"
        | "Fortran"
        | "Fortran 77"
        | "Fortran 90"
        | "Fortran_77"
        | "Java"
        | "Java & Fortran"
        | "Other"
        | "Pascal"
        | "Perl"
        | "Python"
        | "Python/C++"
        | "Tcl"
        | "assembler"
        | "csh"
        | "ksh"
        | "sh";
      /**
       * The URL for an Internet address at which
       *  details of the software can be found.
       */
      location?: string;
      /**
       * The name of the software.
       */
      name?: string;
      /**
       * The name of the operating system under which the software
       *  runs.
       */
      os?: string;
      /**
       * An ordinal index for this category
       */
      pdbx_ordinal: number;
      /**
       * The classification of the software according to the most
       *  common types.
       */
      type?: "filter" | "jiffy" | "library" | "other" | "package" | "program";
      /**
       * The version of the software.
       */
      version?: string;
    }[]
  ];
  struct?: {
    /**
     * The item indicates whether the entry is a CASP target, a CASD-NMR target,
     *  or similar target participating in methods development experiments.
     */
    pdbx_CASP_flag?: "N" | "Y";
    /**
     * An automatically generated descriptor for an NDB structure or
     *  the unstructured content of the PDB COMPND record.
     */
    pdbx_descriptor?: string;
    /**
     * Text description of the methodology which produced this
     *  model structure.
     */
    pdbx_model_details?: string;
    /**
     * A description of the type of structure model.
     */
    pdbx_model_type_details?: string;
    /**
     * A title for the data block. The author should attempt to convey
     *  the essence of the structure archived in the CIF in the title,
     *  and to distinguish this structural result from others.
     */
    title?: string;
  };
  struct_keywords?: {
    /**
     * Terms characterizing the macromolecular structure.
     */
    pdbx_keywords?: string;
    /**
     * Keywords describing this structure.
     */
    text?: string;
  };
  symmetry?: {
    /**
     * Space-group number from International Tables for Crystallography
     *  Vol. A (2002).
     */
    Int_Tables_number?: number;
    /**
     * The cell settings for this space-group symmetry.
     */
    cell_setting?:
      | "cubic"
      | "hexagonal"
      | "monoclinic"
      | "orthorhombic"
      | "rhombohedral"
      | "tetragonal"
      | "triclinic"
      | "trigonal";
    /**
     * Used for PDB space group:
     *
     *  Example: 'C 1 2 1'  (instead of C 2)
     *           'P 1 2 1'  (instead of P 2)
     *           'P 1 21 1' (instead of P 21)
     *           'P 1 1 21' (instead of P 21 -unique C axis)
     *           'H 3'      (instead of R 3   -hexagonal)
     *           'H 3 2'    (instead of R 3 2 -hexagonal)
     */
    pdbx_full_space_group_name_H_M?: string;
    /**
     * Hermann-Mauguin space-group symbol. Note that the
     *  Hermann-Mauguin symbol does not necessarily contain complete
     *  information about the symmetry and the space-group origin. If
     *  used, always supply the FULL symbol from International Tables
     *  for Crystallography Vol. A (2002) and indicate the origin and
     *  the setting if it is not implicit. If there is any doubt that
     *  the equivalent positions can be uniquely deduced from this
     *  symbol, specify the  _symmetry_equiv.pos_as_xyz or
     *  _symmetry.space_group_name_Hall  data items as well. Leave
     *  spaces between symbols referring to
     *  different axes.
     */
    space_group_name_H_M?: string;
    /**
     * Space-group symbol as described by Hall (1981). This symbol
     *  gives the space-group setting explicitly. Leave spaces between
     *  the separate components of the symbol.
     *
     *  Ref: Hall, S. R. (1981). Acta Cryst. A37, 517-525; erratum
     *  (1981) A37, 921.
     */
    space_group_name_Hall?: string;
  };
  /**
   * A unique identifier for each object in this entry container.
   */
  rcsb_id: string;
  /**
   * @minItems 1
   */
  rcsb_entry_group_membership?: [
    {
      /**
       * A unique identifier for a group of entries
       */
      group_id: string;
      /**
       * Method used to establish group membership
       */
      aggregation_method: "matching_deposit_group_id";
    },
    ...{
      /**
       * A unique identifier for a group of entries
       */
      group_id: string;
      /**
       * Method used to establish group membership
       */
      aggregation_method: "matching_deposit_group_id";
    }[]
  ];
  rcsb_external_references?: {
    /**
     * ID (accession) from external resource linked to this entry.
     */
    id: string;
    /**
     * Internal identifier for external resource.
     */
    type: "OLDERADO" | "BMRB" | "NDB" | "NAKB" | "SB GRID" | "PROTEIN DIFFRACTION" | "EM DATA RESOURCE";
    /**
     * Link to this entry in external resource.
     */
    link: string;
  }[];
  /**
   * @minItems 1
   */
  rcsb_binding_affinity?: [
    {
      /**
       * Ligand identifier.
       */
      comp_id: string;
      /**
       * Binding affinity measurement given in one of the following types:  The concentration constants: IC50: the concentration of ligand that reduces enzyme activity by 50%;  EC50: the concentration of compound that generates a half-maximal response;  The binding constant:  Kd: dissociation constant;  Ka: association constant;  Ki: enzyme inhibition constant;  The thermodynamic parameters:  delta G: Gibbs free energy of binding (for association reaction);  delta H: change in enthalpy associated with a chemical reaction;  delta S: change in entropy associated with a chemical reaction.
       */
      type: "IC50" | "EC50" | "Kd" | "Ka" | "Ki" | "&Delta;G" | "&Delta;H" | "-T&Delta;S";
      /**
       * Binding affinity value between a ligand and its target molecule.
       */
      value: number;
      /**
       * Binding affinity unit.  Dissociation constant Kd is normally in molar units (or millimolar , micromolar, nanomolar, etc).  Association constant Ka is normally expressed in inverse molar units (e.g. M-1).
       */
      unit: string;
      /**
       * Binding affinity symbol indicating approximate or precise strength of the binding.
       */
      symbol?: string;
      /**
       * Data point provided by BindingDB. Percent identity between PDB sequence and reference sequence.
       */
      reference_sequence_identity?: number;
      /**
       * The resource name for the related binding affinity reference.
       */
      provenance_code: "PDBBind" | "Binding MOAD" | "BindingDB";
      /**
       * Link to external resource referencing the data.
       */
      link: string;
    },
    ...{
      /**
       * Ligand identifier.
       */
      comp_id: string;
      /**
       * Binding affinity measurement given in one of the following types:  The concentration constants: IC50: the concentration of ligand that reduces enzyme activity by 50%;  EC50: the concentration of compound that generates a half-maximal response;  The binding constant:  Kd: dissociation constant;  Ka: association constant;  Ki: enzyme inhibition constant;  The thermodynamic parameters:  delta G: Gibbs free energy of binding (for association reaction);  delta H: change in enthalpy associated with a chemical reaction;  delta S: change in entropy associated with a chemical reaction.
       */
      type: "IC50" | "EC50" | "Kd" | "Ka" | "Ki" | "&Delta;G" | "&Delta;H" | "-T&Delta;S";
      /**
       * Binding affinity value between a ligand and its target molecule.
       */
      value: number;
      /**
       * Binding affinity unit.  Dissociation constant Kd is normally in molar units (or millimolar , micromolar, nanomolar, etc).  Association constant Ka is normally expressed in inverse molar units (e.g. M-1).
       */
      unit: string;
      /**
       * Binding affinity symbol indicating approximate or precise strength of the binding.
       */
      symbol?: string;
      /**
       * Data point provided by BindingDB. Percent identity between PDB sequence and reference sequence.
       */
      reference_sequence_identity?: number;
      /**
       * The resource name for the related binding affinity reference.
       */
      provenance_code: "PDBBind" | "Binding MOAD" | "BindingDB";
      /**
       * Link to external resource referencing the data.
       */
      link: string;
    }[]
  ];
}
