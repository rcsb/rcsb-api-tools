# This file was generated. Do not edit manually.

schema {
    query: Query
    subscription: Subscription
}

"Indicates an Input Object is a OneOf Input Object."
directive @oneOf on INPUT_OBJECT

type AlignedRegions {
    "List of genomic indexes that are needed to complete the last nucleotide codon of a genome-protein sequence alignment"
    exon_shift: [Int]
    """

    Query sequence start position

    Examples:
    null, null
    """
    query_begin: Int!
    """

    Query sequence end position

    Examples:
    null, null
    """
    query_end: Int!
    """

    Target sequence start position

    Examples:
    null, null
    """
    target_begin: Int!
    """

    Target sequence start position

    Examples:
    null, null
    """
    target_end: Int!
}

type AlignmentLogo {
    symbol: String
    value: Int
}

type Coverage {
    """

    Fraction of the query sequence covered by the alignment

    Examples:
    null, null
    """
    query_coverage: Float!
    """

    Length of the full query sequence

    Examples:
    null, null
    """
    query_length: Int!
    """

    Fraction of the target sequence covered by the alignment

    Examples:
    null, null
    """
    target_coverage: Float!
    """

    Length of the full target sequence

    Examples:
    null, null
    """
    target_length: Int!
}

type Features {
    "Attribute/Value list"
    additional_properties: [FeaturesAdditionalProperties]
    """

    Free-form text describing the feature

    Examples:
    Software generated binding site for ligand entity 2 component HEM instance C chain A
    """
    description: String
    """

    Identifier of the feature

    Examples:
    HELX_P11, AC1
    """
    feature_id: String
    "List of documents that describes the location of the feature"
    feature_positions: [FeaturesFeaturePositions]
    """

    Name associated to the feature

    Examples:
    ligand HEM
    """
    name: String
    """

    Original database or software name used to obtain the feature

    Examples:
    PDB, UNIPROT
    """
    provenance_source: String
    """

    The connection type.

    Examples:
    ASA_UNBOUND, BINDING_SITE, mutation, artifact, CATH, SCOP
    """
    type: FeaturesType
    """

    Numerical value associated with the feature

    Examples:
    null, null
    """
    value: Float
}

type FeaturesAdditionalProperties {
    """

    The additional property name.

    Examples:
    PARENT_COMP_ID, CATH_NAME, PARTNER_BOND_DISTANCE
    """
    property_name: FeaturesAdditionalPropertiesPropertyName
    property_value: [ObjectScalar]
}

type FeaturesFeaturePositions {
    """

    Index at which this segment of the feature begins on the original provenance_source. When reference and source point to the same reference system this file will be null

    Examples:
    null, null
    """
    beg_ori_id: Int
    """

    Index at which this segment of the feature begins

    Examples:
    null, null
    """
    beg_seq_id: Int
    """

    Index at which this segment of the feature ends on the original provenance_source. If the positional feature maps to a single residue this field will be null. When reference and source point to the same reference system this file will be null

    Examples:
    null, null
    """
    end_ori_id: Int
    """

    Index at which this segment of the feature ends. If the positional feature maps to a single residue this field will be null

    Examples:
    null, null
    """
    end_seq_id: Int
    """

    Flag that indicates the feature begins before the feature index begin

    Examples:
    null, null
    """
    open_begin: Boolean
    """

    Flag that indicates the feature end after the feature index end

    Examples:
    null, null
    """
    open_end: Boolean
    """

    Fragment identifier that groups a set of ranges resulting from gaps

    Examples:
    range-1, range-2
    """
    range_id: String
    """

    The value for the feature at this region

    Examples:
    null, null, null
    """
    value: Float
    "The value(s) for the feature at this region"
    values: [Float]
}

"Query root"
type Query {
    "Get sequence alignments"
    alignments(
        "Query sequence database"
        from: SequenceReference!,
        "Database sequence identifier"
        queryId: String!,
        "Optional integer list (2-tuple) to filter alignments to a particular region"
        range: [Int!],
        "Target Sequence database"
        to: SequenceReference!
    ): SequenceAlignments
    "Get sequence annotations"
    annotations(
        "Optional annotation filter by type or target identifier"
        filters: [AnnotationFilterInput!],
        "Database sequence identifier"
        queryId: String!,
        "Optional integer list (2-tuple) to filter annotations to a particular region"
        range: [Int!],
        "Query sequence database"
        reference: SequenceReference!,
        "List defining the annotation collections to be requested"
        sources: [AnnotationReference]!
    ): [SequenceAnnotations]
    "Get group alignments"
    group_alignments(
        "Optional string list of allowed group member identifiers"
        filter: [String!],
        "Target Sequence database"
        group: GroupReference!,
        "Database group identifier"
        groupId: String!
    ): SequenceAlignments
    "Get group annotations"
    group_annotations(
        "Optional annotation filter by type or target identifier"
        filters: [AnnotationFilterInput!],
        "Query sequence database"
        group: GroupReference!,
        "Database sequence identifier"
        groupId: String!,
        "List defining the annotation collections to be requested"
        sources: [AnnotationReference]!
    ): [SequenceAnnotations]
    "Get a positional summary of group annotations"
    group_annotations_summary(
        "Optional annotation filter by type or target identifier"
        filters: [AnnotationFilterInput!],
        "Query sequence database"
        group: GroupReference!,
        "Database sequence identifier"
        groupId: String!,
        "List defining the annotation collections to be requested"
        sources: [AnnotationReference]!
    ): [SequenceAnnotations]
}

type SequenceAlignments {
    alignment_length: Int
    alignment_logo: [[AlignmentLogo]]
    query_sequence: String
    "Multiple sequence alignment of group members."
    target_alignments(first: Int, offset: Int): [TargetAlignments]
}

type SequenceAnnotations {
    "List of positional features"
    features: [Features]
    source: AnnotationReference
    """

    Database identifier associated to the annotation

    Examples:
    101M_1, 2UZI.C, P01112
    """
    target_id: String
    target_identifiers: TargetIdentifiers
}

"Subscription root"
type Subscription {
    "Get sequence alignments"
    alignments_subscription(
        "Query sequence database"
        from: SequenceReference!,
        "Database sequence identifier"
        queryId: String!,
        "Optional integer list (2-tuple) to filter alignments to a particular region"
        range: [Int!],
        "Target Sequence database"
        to: SequenceReference!
    ): TargetAlignments
    "Get sequence annotations"
    annotations_subscription(
        "Optional annotation filter by type or target identifier"
        filters: [AnnotationFilterInput!],
        "Database sequence identifier"
        queryId: String!,
        "Optional integer list (2-tuple) to filter annotations to a particular region"
        range: [Int!],
        "Query sequence database"
        reference: SequenceReference!,
        "List defining the annotation collections to be requested"
        sources: [AnnotationReference]!
    ): SequenceAnnotations
    "Get group alignments"
    group_alignments_subscription(
        "Optional string list of allowed group member identifiers"
        filter: [String!],
        "Target Sequence database"
        group: GroupReference!,
        "Database group identifier"
        groupId: String!
    ): TargetAlignments
    "Get group annotations"
    group_annotations_subscription(
        "Optional annotation filter by type or target identifier"
        filters: [AnnotationFilterInput!],
        "Query sequence database"
        group: GroupReference!,
        "Database sequence identifier"
        groupId: String!,
        "List defining the annotation collections to be requested"
        sources: [AnnotationReference]!
    ): SequenceAnnotations
}

type TargetAlignments {
    aligned_regions: [AlignedRegions]
    coverage: Coverage
    orientation: Int
    target_id: String
    target_sequence: String
}

type TargetIdentifiers {
    """

    This item references an assembly in core_assembly

    Examples:
    1, 2
    """
    assembly_id: String
    """

    This item references an instance in core_polymer_entity_instance

    Examples:
    A, B, 1, 2
    """
    asym_id: String
    """

    This item references an entity in core_polymer_entity

    Examples:
    1, 2
    """
    entity_id: String
    """

    This item references an entry in core_entry

    Examples:
    101M, 1ACB
    """
    entry_id: String
    """

    This item references an interface in core_interface

    Examples:
    1, 2
    """
    interface_id: String
    """

    This item references a partner of an interface in core_interface

    Examples:
    null, null
    """
    interface_partner_index: Int
    """

    Database identifier associated to the annotation

    Examples:
    101M_1, 2UZI.C, P01112
    """
    target_id: String
    """

    This item references a UniProt document in core_uniprot

    Examples:
    P01112
    """
    uniprot_id: String
}

enum AnnotationReference {
    PDB_ENTITY
    PDB_INSTANCE
    PDB_INTERFACE
    UNIPROT
}

enum FeaturesAdditionalPropertiesPropertyName {
    CARD_MODEL_DESCRIPTION
    CARD_MODEL_ORGANISM
    CATH_DOMAIN_ID
    CATH_NAME
    CLINICAL_SIGNIFICANCE
    CONSEQUENCE_TYPE
    DISEASE_TYPE
    ECOD_DOMAIN_ID
    ECOD_FAMILY_NAME
    EVIDENCE
    LINK
    MODELCIF_MODEL_ID
    MUTATED_TYPE
    OMEGA_ANGLE
    PARENT_COMP_ID
    PARTNER_ASYM_ID
    PARTNER_BOND_DISTANCE
    PARTNER_COMP_ID
    PREDICTED_IMPACT
    SCOP_2_DOMAIN_ID
    SCOP_2_FAMILY_ID
    SCOP_2_FAMILY_NAME
    SCOP_2_SUPERFAMILY_ID
    SCOP_2_SUPERFAMILY_NAME
    SCOP_DOMAIN_ID
    SCOP_NAME
    SCOP_SUN_ID
    SHEET_SENSE
    STRAIN_ID
    SUBTYPE
    TARGET_ID
    WILD_TYPE
}

enum FeaturesType {
    ACTIVE_SITE
    ANGLE_OUTLIER
    ARTIFACT
    ASA
    ASA_BOUND
    ASA_UNBOUND
    BEND
    BINDING_SITE
    BOND_OUTLIER
    CALCIUM_BINDING_REGION
    CARD_MODEL
    CATH
    CHAIN
    CIS_PEPTIDE
    COMPOSITIONALLY_BIASED_REGION
    COVALENT_BOND
    COVALENT_MODIFICATION_OF_A_NUCLEOTIDE_BASE
    COVALENT_MODIFICATION_OF_A_NUCLEOTIDE_PHOSPHATE
    COVALENT_MODIFICATION_OF_A_NUCLEOTIDE_SUGAR
    COVALENT_RESIDUE_MODIFICATION
    CROSS_LINK
    C_MANNOSYLATION_SITE
    DISORDER
    DISORDER_BINDING
    DISULFIDE_BRIDGE
    DNA_BINDING_REGION
    DOMAIN
    ECOD
    GLYCOSYLATION_SITE
    HELIX_P
    HELX_LH_PP_P
    HELX_RH_3_T_P
    HELX_RH_AL_P
    HELX_RH_PI_P
    HYDROGEN_BOND
    HYDROPATHY
    IMGT_ANTIBODY_DESCRIPTION
    IMGT_ANTIBODY_DOMAIN_NAME
    IMGT_ANTIBODY_GENE_ALLELE_NAME
    IMGT_ANTIBODY_ORGANISM_NAME
    IMGT_ANTIBODY_PROTEIN_NAME
    IMGT_ANTIBODY_RECEPTOR_DESCRIPTION
    IMGT_ANTIBODY_RECEPTOR_TYPE
    INITIATOR_METHIONINE
    INTRAMEMBRANE_REGION
    IONIC_INTERACTION
    LIPID_MOIETY_BINDING_REGION
    MA_QA_METRIC_LOCAL_TYPE_CONTACT_PROBABILITY
    MA_QA_METRIC_LOCAL_TYPE_DISTANCE
    MA_QA_METRIC_LOCAL_TYPE_ENERGY
    MA_QA_METRIC_LOCAL_TYPE_IPTM
    MA_QA_METRIC_LOCAL_TYPE_NORMALIZED_SCORE
    MA_QA_METRIC_LOCAL_TYPE_OTHER
    MA_QA_METRIC_LOCAL_TYPE_PAE
    MA_QA_METRIC_LOCAL_TYPE_PLDDT
    MA_QA_METRIC_LOCAL_TYPE_PLDDT_0_1
    MA_QA_METRIC_LOCAL_TYPE_PLDDT_ALL_ATOM
    MA_QA_METRIC_LOCAL_TYPE_PLDDT_ALL_ATOM_0_1
    MA_QA_METRIC_LOCAL_TYPE_PTM
    MA_QA_METRIC_LOCAL_TYPE_ZSCORE
    MEMBRANE_SEGMENT
    METAL_COORDINATION
    METAL_ION_BINDING_SITE
    MISMATCHED_BASE_PAIRS
    MODIFIED_MONOMER
    MODIFIED_RESIDUE
    MOGUL_ANGLE_OUTLIER
    MOGUL_BOND_OUTLIER
    MUTAGENESIS_SITE
    MUTATION
    NON_CONSECUTIVE_RESIDUES
    NON_STANDARD_AMINO_ACID
    NON_TERMINAL_RESIDUE
    NUCLEOTIDE_PHOSPHATE_BINDING_REGION
    N_GLYCOSYLATION_SITE
    O_GLYCOSYLATION_SITE
    PEPTIDE
    PFAM
    PROPEPTIDE
    PROTEIN_BINDING
    RAMACHANDRAN_OUTLIER
    REGION_OF_INTEREST
    REPEAT
    ROTAMER_OUTLIER
    RSCC_OUTLIER
    RSRZ_OUTLIER
    SABDAB_ANTIBODY_ANTIGEN_NAME
    SABDAB_ANTIBODY_HEAVY_CHAIN_SUBCLASS
    SABDAB_ANTIBODY_LIGHT_CHAIN_SUBCLASS
    SABDAB_ANTIBODY_LIGHT_CHAIN_TYPE
    SABDAB_ANTIBODY_NAME
    SABDAB_ANTIBODY_TARGET
    SCOP
    SCOP_2_B_SUPERFAMILY
    SCOP_2_FAMILY
    SCOP_2_SUPERFAMILY
    SEQUENCE_CONFLICT
    SEQUENCE_VARIANT
    SHEET
    SHORT_SEQUENCE_MOTIF
    SIGNAL_PEPTIDE
    SITE
    SPLICE_VARIANT
    STEREO_OUTLIER
    STRN
    S_GLYCOSYLATION_SITE
    TOPOLOGICAL_DOMAIN
    TRANSIT_PEPTIDE
    TRANSMEMBRANE_REGION
    TURN_TY_1_P
    UNASSIGNED_SEC_STRUCT
    UNOBSERVED_ATOM_XYZ
    UNOBSERVED_RESIDUE_XYZ
    UNSURE_RESIDUE
    ZERO_OCCUPANCY_ATOM_XYZ
    ZERO_OCCUPANCY_RESIDUE_XYZ
    ZINC_FINGER_REGION
}

enum FieldName {
    TARGET_ID
    TYPE
}

enum GroupReference {
    MATCHING_UNIPROT_ACCESSION
    SEQUENCE_IDENTITY
}

enum OperationType {
    CONTAINS
    EQUALS
}

enum SequenceReference {
    NCBI_GENOME
    NCBI_PROTEIN
    PDB_ENTITY
    PDB_INSTANCE
    UNIPROT
}

"Built-in scalar for dynamic values"
scalar ObjectScalar

input AnnotationFilterInput {
    field: FieldName!
    operation: OperationType!
    source: AnnotationReference
    values: [String!]!
}
