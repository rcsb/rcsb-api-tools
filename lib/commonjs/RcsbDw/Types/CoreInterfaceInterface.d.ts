/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
/**
 * JSON schema for binary interfaces core data.
 */
export interface CoreInterface {
    rcsb_id: string;
    rcsb_interface_container_identifiers: {
        /**
         * Entry identifier for the container.
         */
        entry_id: string;
        /**
         * This item references an assembly in pdbx_struct_assembly
         */
        assembly_id: string;
        /**
         * Identifier for the geometrically equivalent (same asym_ids on either side) interfaces within the assembly
         */
        interface_id: string;
        /**
         * Identifier for NCS-equivalent interfaces within the assembly (same entity_ids on both sides)
         */
        interface_entity_id?: string;
        /**
         * Unique identifier for the document
         */
        rcsb_id: string;
    };
    rcsb_interface_partner: {
        interface_partner_identifier?: {
            /**
             * Polymer entity identifier for the container.
             */
            entity_id: string;
            /**
             * Instance identifier for this container.
             */
            asym_id: string;
        };
        /**
         * @minItems 1
         */
        interface_partner_feature?: [
            {
                /**
                 * Identifies the version of the feature assignment.
                 */
                assignment_version?: string;
                /**
                 * A description for the feature.
                 */
                description?: string;
                /**
                 * An identifier for the feature.
                 */
                feature_id?: string;
                /**
                 * A name for the feature.
                 */
                name?: string;
                /**
                 * Code identifying the individual, organization or program that assigned the feature.
                 */
                provenance_source?: string;
                /**
                 * A type or category of the feature.
                 */
                type?: "ASA_UNBOUND" | "ASA_BOUND";
                feature_positions?: {
                    /**
                     * An identifier for the monomer at which this segment of the feature begins.
                     */
                    beg_seq_id: number;
                    /**
                     * An identifier for the monomer at which this segment of the feature ends.
                     */
                    end_seq_id?: number;
                    values?: number[];
                }[];
                additional_properties?: {
                    /**
                     * The additional property name.
                     */
                    name?: "TO_BE_DEFINED";
                    values?: (string | number | number)[];
                }[];
            },
            ...{
                /**
                 * Identifies the version of the feature assignment.
                 */
                assignment_version?: string;
                /**
                 * A description for the feature.
                 */
                description?: string;
                /**
                 * An identifier for the feature.
                 */
                feature_id?: string;
                /**
                 * A name for the feature.
                 */
                name?: string;
                /**
                 * Code identifying the individual, organization or program that assigned the feature.
                 */
                provenance_source?: string;
                /**
                 * A type or category of the feature.
                 */
                type?: "ASA_UNBOUND" | "ASA_BOUND";
                feature_positions?: {
                    /**
                     * An identifier for the monomer at which this segment of the feature begins.
                     */
                    beg_seq_id: number;
                    /**
                     * An identifier for the monomer at which this segment of the feature ends.
                     */
                    end_seq_id?: number;
                    values?: number[];
                }[];
                additional_properties?: {
                    /**
                     * The additional property name.
                     */
                    name?: "TO_BE_DEFINED";
                    values?: (string | number | number)[];
                }[];
            }[]
        ];
        [k: string]: unknown;
    }[];
    rcsb_interface_operator: string[][][];
    rcsb_interface_info?: {
        polymer_composition?: "Nucleic acid (only)" | "Protein (only)" | "Protein/NA";
        interface_character?: "homo" | "hetero";
        /**
         * Total interface buried surface area
         */
        interface_area?: number;
        /**
         * The Jaccard score (intersection over union) of interface contacts in homomeric interfaces, comparing contact sets left-right vs right-left. High values indicate isologous (symmetric) interfaces, with value=1 if perfectly symmetric (e.g. crystallographic symmetry)
         */
        self_jaccard_contact_score?: number;
        /**
         * Number of interface residues, defined as those with burial fraction > 0
         */
        num_interface_residues?: number;
        /**
         * Number of core interface residues, defined as those that bury >90% accessible surface area with respect to the unbound state
         */
        num_core_interface_residues?: number;
        [k: string]: unknown;
    };
    rcsb_latest_revision?: {
        /**
         * The major version number of the latest revision.
         */
        major_revision?: number;
        /**
         * The minor version number of the latest revision.
         */
        minor_revision?: number;
        /**
         * The release date of the latest revision item.
         */
        revision_date?: string;
        [k: string]: unknown;
    };
}
